/* autogenerated with parsecfg: do not edit. */

/* gotta drop SYS_gpio15_pwm_div_M0@SYS_gpio15_pwm: 0x0fffffff [18:16] */
/* gotta drop SYS_gpio15_pwm_Level_M0@SYS_gpio15_pwm: 0x0fffffff [15:4] */
union watchdog_configurationReg {
 struct { uint32_t

 /* sorting 2 */
#define watchdog_configuration_use_xtal_in_SHIFT 0
#define watchdog_configuration_use_xtal_in_WIDTH 1
#define watchdog_configuration_disable_SHIFT 31
#define watchdog_configuration_disable_WIDTH 1

 use_xtal_in:1, /*[0:0] ,RO */
 hole0:30,
 disable:1; /*[31:31]  */
 } bits;

 uint32_t value;
};

union UIR2_IR_UNIVERSAL_MEM_ADDRESSReg {
 struct { uint32_t

 /* sorting 2 */
#define UIR2_IR_UNIVERSAL_MEM_ADDRESS_M1_ADDRESS_SHIFT 0
#define UIR2_IR_UNIVERSAL_MEM_ADDRESS_M1_ADDRESS_WIDTH 8
#define UIR2_IR_UNIVERSAL_MEM_ADDRESS_M2_ADDRESS_SHIFT 16
#define UIR2_IR_UNIVERSAL_MEM_ADDRESS_M2_ADDRESS_WIDTH 8

 m1_address:8, /*[7:0] ,RO */
 hole0:8,
 m2_address:8, /*[23:16] ,RO */
 hole1:8;
 } bits;

 uint32_t value;
};

union UIR2_IR_UNIVERSAL_DEBOUNCE_DENOISEReg {
 struct { uint32_t

 /* sorting 6 */
#define UIR2_IR_UNIVERSAL_DEBOUNCE_DENOISE_BOUNCE_ENABLE_SHIFT 0
#define UIR2_IR_UNIVERSAL_DEBOUNCE_DENOISE_BOUNCE_ENABLE_WIDTH 1
#define UIR2_IR_UNIVERSAL_DEBOUNCE_DENOISE_BOUNCE_SELECT_SHIFT 1
#define UIR2_IR_UNIVERSAL_DEBOUNCE_DENOISE_BOUNCE_SELECT_WIDTH 2
#define UIR2_IR_UNIVERSAL_DEBOUNCE_DENOISE_NOISE_ENABLE_SHIFT 3
#define UIR2_IR_UNIVERSAL_DEBOUNCE_DENOISE_NOISE_ENABLE_WIDTH 1
#define UIR2_IR_UNIVERSAL_DEBOUNCE_DENOISE_NOISE_GPIO_SELECT_SHIFT 4
#define UIR2_IR_UNIVERSAL_DEBOUNCE_DENOISE_NOISE_GPIO_SELECT_WIDTH 4
#define UIR2_IR_UNIVERSAL_DEBOUNCE_DENOISE_NOISE_TIME_SHIFT 8
#define UIR2_IR_UNIVERSAL_DEBOUNCE_DENOISE_NOISE_TIME_WIDTH 23
#define UIR2_IR_UNIVERSAL_DEBOUNCE_DENOISE_NOISE_CLK_SELECT_SHIFT 31
#define UIR2_IR_UNIVERSAL_DEBOUNCE_DENOISE_NOISE_CLK_SELECT_WIDTH 1

 bounce_enable:1, /*[0:0]  */
 bounce_select:2, /*[2:1]  */
 noise_enable:1, /*[3:3]  */
 noise_gpio_select:4, /*[7:4]  */
 noise_time:23, /*[30:8]  */
 noise_clk_select:1; /*[31:31] ,RO */
 } bits;

 uint32_t value;
};

union UIR2_IR_UNIVERSAL_CONFIGReg {
 struct { uint32_t

 /* sorting 21 */
#define UIR2_IR_UNIVERSAL_CONFIG_DECODE_ENABLE_SHIFT 0
#define UIR2_IR_UNIVERSAL_CONFIG_DECODE_ENABLE_WIDTH 1
#define UIR2_IR_UNIVERSAL_CONFIG_SIGNAL_INVERT_SHIFT 1
#define UIR2_IR_UNIVERSAL_CONFIG_SIGNAL_INVERT_WIDTH 1
#define UIR2_IR_UNIVERSAL_CONFIG_SAMPLE_CLK_SELECT_SHIFT 2
#define UIR2_IR_UNIVERSAL_CONFIG_SAMPLE_CLK_SELECT_WIDTH 1
#define UIR2_IR_UNIVERSAL_CONFIG_TIME_STAMP_MODE_SHIFT 3
#define UIR2_IR_UNIVERSAL_CONFIG_TIME_STAMP_MODE_WIDTH 1
#define UIR2_IR_UNIVERSAL_CONFIG_FIRST_EDGE_RISING_SHIFT 4
#define UIR2_IR_UNIVERSAL_CONFIG_FIRST_EDGE_RISING_WIDTH 1
#define UIR2_IR_UNIVERSAL_CONFIG_FIRST_EDGE_FALLING_SHIFT 5
#define UIR2_IR_UNIVERSAL_CONFIG_FIRST_EDGE_FALLING_WIDTH 1
#define UIR2_IR_UNIVERSAL_CONFIG_MEM_WRAP_MODE_ENABLE_SHIFT 6
#define UIR2_IR_UNIVERSAL_CONFIG_MEM_WRAP_MODE_ENABLE_WIDTH 1
#define UIR2_IR_UNIVERSAL_CONFIG_MEM_RD_SELECT_SHIFT 7
#define UIR2_IR_UNIVERSAL_CONFIG_MEM_RD_SELECT_WIDTH 1
#define UIR2_IR_UNIVERSAL_CONFIG_SCANCODE_TIME_STAMP_INT_ENABLE_SHIFT 13
#define UIR2_IR_UNIVERSAL_CONFIG_SCANCODE_TIME_STAMP_INT_ENABLE_WIDTH 1
#define UIR2_IR_UNIVERSAL_CONFIG_ERROR_INT_ENABLE_SHIFT 14
#define UIR2_IR_UNIVERSAL_CONFIG_ERROR_INT_ENABLE_WIDTH 1
#define UIR2_IR_UNIVERSAL_CONFIG_DATA_OUT_INT_ENABLE_SHIFT 15
#define UIR2_IR_UNIVERSAL_CONFIG_DATA_OUT_INT_ENABLE_WIDTH 1
#define UIR2_IR_UNIVERSAL_CONFIG_STATUS_SHIFT 16
#define UIR2_IR_UNIVERSAL_CONFIG_STATUS_WIDTH 4
#define UIR2_IR_UNIVERSAL_CONFIG_MEM1_PARTIAL_SCANCODE_SHIFT 20
#define UIR2_IR_UNIVERSAL_CONFIG_MEM1_PARTIAL_SCANCODE_WIDTH 1
#define UIR2_IR_UNIVERSAL_CONFIG_MEM2_PARTIAL_SCANCODE_SHIFT 21
#define UIR2_IR_UNIVERSAL_CONFIG_MEM2_PARTIAL_SCANCODE_WIDTH 1
#define UIR2_IR_UNIVERSAL_CONFIG_MEM1_VALID_SHIFT 22
#define UIR2_IR_UNIVERSAL_CONFIG_MEM1_VALID_WIDTH 1
#define UIR2_IR_UNIVERSAL_CONFIG_MEM2_VALID_SHIFT 23
#define UIR2_IR_UNIVERSAL_CONFIG_MEM2_VALID_WIDTH 1
#define UIR2_IR_UNIVERSAL_CONFIG_MEM1_FULL_SHIFT 24
#define UIR2_IR_UNIVERSAL_CONFIG_MEM1_FULL_WIDTH 1
#define UIR2_IR_UNIVERSAL_CONFIG_MEM2_FULL_SHIFT 25
#define UIR2_IR_UNIVERSAL_CONFIG_MEM2_FULL_WIDTH 1
#define UIR2_IR_UNIVERSAL_CONFIG_SCANCODE_TIME_STAMP_INT_STATUS_SHIFT 29
#define UIR2_IR_UNIVERSAL_CONFIG_SCANCODE_TIME_STAMP_INT_STATUS_WIDTH 1
#define UIR2_IR_UNIVERSAL_CONFIG_ERROR_INT_STATUS_SHIFT 30
#define UIR2_IR_UNIVERSAL_CONFIG_ERROR_INT_STATUS_WIDTH 1
#define UIR2_IR_UNIVERSAL_CONFIG_DATA_OUT_INT_STATUS_SHIFT 31
#define UIR2_IR_UNIVERSAL_CONFIG_DATA_OUT_INT_STATUS_WIDTH 1

 decode_enable:1, /*[0:0] ,NO_MEM */
 signal_invert:1, /*[1:1]  */
 sample_clk_select:1, /*[2:2] ,RO */
 time_stamp_mode:1, /*[3:3]  */
 first_edge_rising:1, /*[4:4]  */
 first_edge_falling:1, /*[5:5]  */
 mem_wrap_mode_enable:1, /*[6:6]  */
 mem_rd_select:1, /*[7:7]  */
 hole0:5,
 scancode_time_stamp_int_enable:1, /*[13:13]  */
 error_int_enable:1, /*[14:14]  */
 data_out_int_enable:1, /*[15:15]  */
 status:4, /*[19:16] ,RO */
 mem1_partial_scancode:1, /*[20:20] ,RO */
 mem2_partial_scancode:1, /*[21:21] ,RO */
 mem1_valid:1, /*[22:22] ,RO */
 mem2_valid:1, /*[23:23] ,RO */
 mem1_full:1, /*[24:24] ,NO_MEM */
 mem2_full:1, /*[25:25] ,NO_MEM */
 hole1:3,
 scancode_time_stamp_int_status:1, /*[29:29] ,NO_MEM */
 error_int_status:1, /*[30:30] ,NO_MEM */
 data_out_int_status:1; /*[31:31] ,NO_MEM */
 } bits;

 uint32_t value;
};

union UIR1_IR_UNIVERSAL_MEM_ADDRESSReg {
 struct { uint32_t

 /* sorting 2 */
#define UIR1_IR_UNIVERSAL_MEM_ADDRESS_M1_ADDRESS_SHIFT 0
#define UIR1_IR_UNIVERSAL_MEM_ADDRESS_M1_ADDRESS_WIDTH 8
#define UIR1_IR_UNIVERSAL_MEM_ADDRESS_M2_ADDRESS_SHIFT 16
#define UIR1_IR_UNIVERSAL_MEM_ADDRESS_M2_ADDRESS_WIDTH 8

 m1_address:8, /*[7:0] ,RO */
 hole0:8,
 m2_address:8, /*[23:16] ,RO */
 hole1:8;
 } bits;

 uint32_t value;
};

union UIR1_IR_UNIVERSAL_DEBOUNCE_DENOISEReg {
 struct { uint32_t

 /* sorting 6 */
#define UIR1_IR_UNIVERSAL_DEBOUNCE_DENOISE_BOUNCE_ENABLE_SHIFT 0
#define UIR1_IR_UNIVERSAL_DEBOUNCE_DENOISE_BOUNCE_ENABLE_WIDTH 1
#define UIR1_IR_UNIVERSAL_DEBOUNCE_DENOISE_BOUNCE_SELECT_SHIFT 1
#define UIR1_IR_UNIVERSAL_DEBOUNCE_DENOISE_BOUNCE_SELECT_WIDTH 2
#define UIR1_IR_UNIVERSAL_DEBOUNCE_DENOISE_NOISE_ENABLE_SHIFT 3
#define UIR1_IR_UNIVERSAL_DEBOUNCE_DENOISE_NOISE_ENABLE_WIDTH 1
#define UIR1_IR_UNIVERSAL_DEBOUNCE_DENOISE_NOISE_GPIO_SELECT_SHIFT 4
#define UIR1_IR_UNIVERSAL_DEBOUNCE_DENOISE_NOISE_GPIO_SELECT_WIDTH 4
#define UIR1_IR_UNIVERSAL_DEBOUNCE_DENOISE_NOISE_TIME_SHIFT 8
#define UIR1_IR_UNIVERSAL_DEBOUNCE_DENOISE_NOISE_TIME_WIDTH 23
#define UIR1_IR_UNIVERSAL_DEBOUNCE_DENOISE_NOISE_CLK_SELECT_SHIFT 31
#define UIR1_IR_UNIVERSAL_DEBOUNCE_DENOISE_NOISE_CLK_SELECT_WIDTH 1

 bounce_enable:1, /*[0:0]  */
 bounce_select:2, /*[2:1]  */
 noise_enable:1, /*[3:3]  */
 noise_gpio_select:4, /*[7:4]  */
 noise_time:23, /*[30:8]  */
 noise_clk_select:1; /*[31:31] ,RO */
 } bits;

 uint32_t value;
};

union UIR1_IR_UNIVERSAL_CONFIGReg {
 struct { uint32_t

 /* sorting 21 */
#define UIR1_IR_UNIVERSAL_CONFIG_DECODE_ENABLE_SHIFT 0
#define UIR1_IR_UNIVERSAL_CONFIG_DECODE_ENABLE_WIDTH 1
#define UIR1_IR_UNIVERSAL_CONFIG_SIGNAL_INVERT_SHIFT 1
#define UIR1_IR_UNIVERSAL_CONFIG_SIGNAL_INVERT_WIDTH 1
#define UIR1_IR_UNIVERSAL_CONFIG_SAMPLE_CLK_SELECT_SHIFT 2
#define UIR1_IR_UNIVERSAL_CONFIG_SAMPLE_CLK_SELECT_WIDTH 1
#define UIR1_IR_UNIVERSAL_CONFIG_TIME_STAMP_MODE_SHIFT 3
#define UIR1_IR_UNIVERSAL_CONFIG_TIME_STAMP_MODE_WIDTH 1
#define UIR1_IR_UNIVERSAL_CONFIG_FIRST_EDGE_RISING_SHIFT 4
#define UIR1_IR_UNIVERSAL_CONFIG_FIRST_EDGE_RISING_WIDTH 1
#define UIR1_IR_UNIVERSAL_CONFIG_FIRST_EDGE_FALLING_SHIFT 5
#define UIR1_IR_UNIVERSAL_CONFIG_FIRST_EDGE_FALLING_WIDTH 1
#define UIR1_IR_UNIVERSAL_CONFIG_MEM_WRAP_MODE_ENABLE_SHIFT 6
#define UIR1_IR_UNIVERSAL_CONFIG_MEM_WRAP_MODE_ENABLE_WIDTH 1
#define UIR1_IR_UNIVERSAL_CONFIG_MEM_RD_SELECT_SHIFT 7
#define UIR1_IR_UNIVERSAL_CONFIG_MEM_RD_SELECT_WIDTH 1
#define UIR1_IR_UNIVERSAL_CONFIG_SCANCODE_TIME_STAMP_INT_ENABLE_SHIFT 13
#define UIR1_IR_UNIVERSAL_CONFIG_SCANCODE_TIME_STAMP_INT_ENABLE_WIDTH 1
#define UIR1_IR_UNIVERSAL_CONFIG_ERROR_INT_ENABLE_SHIFT 14
#define UIR1_IR_UNIVERSAL_CONFIG_ERROR_INT_ENABLE_WIDTH 1
#define UIR1_IR_UNIVERSAL_CONFIG_DATA_OUT_INT_ENABLE_SHIFT 15
#define UIR1_IR_UNIVERSAL_CONFIG_DATA_OUT_INT_ENABLE_WIDTH 1
#define UIR1_IR_UNIVERSAL_CONFIG_STATUS_SHIFT 16
#define UIR1_IR_UNIVERSAL_CONFIG_STATUS_WIDTH 4
#define UIR1_IR_UNIVERSAL_CONFIG_MEM1_PARTIAL_SCANCODE_SHIFT 20
#define UIR1_IR_UNIVERSAL_CONFIG_MEM1_PARTIAL_SCANCODE_WIDTH 1
#define UIR1_IR_UNIVERSAL_CONFIG_MEM2_PARTIAL_SCANCODE_SHIFT 21
#define UIR1_IR_UNIVERSAL_CONFIG_MEM2_PARTIAL_SCANCODE_WIDTH 1
#define UIR1_IR_UNIVERSAL_CONFIG_MEM1_VALID_SHIFT 22
#define UIR1_IR_UNIVERSAL_CONFIG_MEM1_VALID_WIDTH 1
#define UIR1_IR_UNIVERSAL_CONFIG_MEM2_VALID_SHIFT 23
#define UIR1_IR_UNIVERSAL_CONFIG_MEM2_VALID_WIDTH 1
#define UIR1_IR_UNIVERSAL_CONFIG_MEM1_FULL_SHIFT 24
#define UIR1_IR_UNIVERSAL_CONFIG_MEM1_FULL_WIDTH 1
#define UIR1_IR_UNIVERSAL_CONFIG_MEM2_FULL_SHIFT 25
#define UIR1_IR_UNIVERSAL_CONFIG_MEM2_FULL_WIDTH 1
#define UIR1_IR_UNIVERSAL_CONFIG_SCANCODE_TIME_STAMP_INT_STATUS_SHIFT 29
#define UIR1_IR_UNIVERSAL_CONFIG_SCANCODE_TIME_STAMP_INT_STATUS_WIDTH 1
#define UIR1_IR_UNIVERSAL_CONFIG_ERROR_INT_STATUS_SHIFT 30
#define UIR1_IR_UNIVERSAL_CONFIG_ERROR_INT_STATUS_WIDTH 1
#define UIR1_IR_UNIVERSAL_CONFIG_DATA_OUT_INT_STATUS_SHIFT 31
#define UIR1_IR_UNIVERSAL_CONFIG_DATA_OUT_INT_STATUS_WIDTH 1

 decode_enable:1, /*[0:0] ,NO_MEM */
 signal_invert:1, /*[1:1]  */
 sample_clk_select:1, /*[2:2] ,RO */
 time_stamp_mode:1, /*[3:3]  */
 first_edge_rising:1, /*[4:4]  */
 first_edge_falling:1, /*[5:5]  */
 mem_wrap_mode_enable:1, /*[6:6]  */
 mem_rd_select:1, /*[7:7]  */
 hole0:5,
 scancode_time_stamp_int_enable:1, /*[13:13]  */
 error_int_enable:1, /*[14:14]  */
 data_out_int_enable:1, /*[15:15]  */
 status:4, /*[19:16] ,RO */
 mem1_partial_scancode:1, /*[20:20] ,RO */
 mem2_partial_scancode:1, /*[21:21] ,RO */
 mem1_valid:1, /*[22:22] ,RO */
 mem2_valid:1, /*[23:23] ,RO */
 mem1_full:1, /*[24:24] ,NO_MEM */
 mem2_full:1, /*[25:25] ,NO_MEM */
 hole1:3,
 scancode_time_stamp_int_status:1, /*[29:29] ,NO_MEM */
 error_int_status:1, /*[30:30] ,NO_MEM */
 data_out_int_status:1; /*[31:31] ,NO_MEM */
 } bits;

 uint32_t value;
};

union SYS_gpio_irq_selReg {
 struct { uint32_t

 /* sorting 4 */
#define SYS_gpio_irq_sel_Q13_SHIFT 0
#define SYS_gpio_irq_sel_Q13_WIDTH 4
#define SYS_gpio_irq_sel_Q14_SHIFT 8
#define SYS_gpio_irq_sel_Q14_WIDTH 4
#define SYS_gpio_irq_sel_Q15_SHIFT 16
#define SYS_gpio_irq_sel_Q15_WIDTH 4
#define SYS_gpio_irq_sel_Q16_SHIFT 24
#define SYS_gpio_irq_sel_Q16_WIDTH 4

 q13:4, /*[3:0]  */
 hole0:4,
 q14:4, /*[11:8]  */
 hole1:4,
 q15:4, /*[19:16]  */
 hole2:4,
 q16:4, /*[27:24]  */
 hole3:4;
 } bits;

 uint32_t value;
};

union SYS_gpio_dirReg {
 struct { uint32_t

 /* sorting 2 */
#define SYS_gpio_dir_DIR_SHIFT 0
#define SYS_gpio_dir_DIR_WIDTH 16
#define SYS_gpio_dir_MASK_SHIFT 16
#define SYS_gpio_dir_MASK_WIDTH 16

 dir:16, /*[15:0]  */
 mask:16; /*[31:16]  */
 } bits;

 uint32_t value;
};

union SYS_gpio_dataReg {
 struct { uint32_t

 /* sorting 2 */
#define SYS_gpio_data_DATA_SHIFT 0
#define SYS_gpio_data_DATA_WIDTH 16
#define SYS_gpio_data_MASK_SHIFT 16
#define SYS_gpio_data_MASK_WIDTH 16

 data:16, /*[15:0]  */
 mask:16; /*[31:16]  */
 } bits;

 uint32_t value;
};

union SYS_gpio15_pwm_controlReg {
 struct { uint32_t

 /* sorting 2 */
#define SYS_gpio15_pwm_control_PWM_period_SHIFT 0
#define SYS_gpio15_pwm_control_PWM_period_WIDTH 24
#define SYS_gpio15_pwm_control_M_SHIFT 24
#define SYS_gpio15_pwm_control_M_WIDTH 1

 pwm_period:24, /*[23:0]  */
 m:1, /*[24:24] ,NO_MEM */
 hole0:7;
 } bits;

 uint32_t value;
};

union SYS_gpio15_pwmReg {
 struct { uint32_t

 /* sorting 3 */
#define SYS_gpio15_pwm_Level_M1_SHIFT 0
#define SYS_gpio15_pwm_Level_M1_WIDTH 24
#define SYS_gpio15_pwm_E_M_SHIFT 24
#define SYS_gpio15_pwm_E_M_WIDTH 1
#define SYS_gpio15_pwm_div_M1_SHIFT 25
#define SYS_gpio15_pwm_div_M1_WIDTH 3

 level_m1:24, /*[23:0] ,NO_MEM */
 e_m:1, /*[24:24] ,NO_MEM */
 div_m1:3, /*[27:25] ,NO_MEM */
 hole0:4;
 } bits;

 uint32_t value;
};

union SYS_gpio14_pwmReg {
 struct { uint32_t

 /* sorting 3 */
#define SYS_gpio14_pwm_Level_SHIFT 4
#define SYS_gpio14_pwm_Level_WIDTH 12
#define SYS_gpio14_pwm_div_SHIFT 16
#define SYS_gpio14_pwm_div_WIDTH 3
#define SYS_gpio14_pwm_E_SHIFT 24
#define SYS_gpio14_pwm_E_WIDTH 1

 hole0:4,
 level:12, /*[15:4]  */
 div:3, /*[18:16]  */
 hole1:5,
 e:1, /*[24:24] ,NO_MEM */
 hole2:7;
 } bits;

 uint32_t value;
};

union KEYPAD_kp_val3Reg {
 struct { uint32_t

 /* sorting 2 */
#define KEYPAD_kp_val3_data_storage3_SHIFT 0
#define KEYPAD_kp_val3_data_storage3_WIDTH 16
#define KEYPAD_kp_val3_time_stamp3_SHIFT 16
#define KEYPAD_kp_val3_time_stamp3_WIDTH 16

 data_storage3:16, /*[15:0] ,NO_MEM */
 time_stamp3:16; /*[31:16] ,NO_MEM */
 } bits;

 uint32_t value;
};

union KEYPAD_kp_val2Reg {
 struct { uint32_t

 /* sorting 2 */
#define KEYPAD_kp_val2_data_storage2_SHIFT 0
#define KEYPAD_kp_val2_data_storage2_WIDTH 16
#define KEYPAD_kp_val2_time_stamp2_SHIFT 16
#define KEYPAD_kp_val2_time_stamp2_WIDTH 16

 data_storage2:16, /*[15:0] ,NO_MEM */
 time_stamp2:16; /*[31:16] ,NO_MEM */
 } bits;

 uint32_t value;
};

union KEYPAD_kp_val1Reg {
 struct { uint32_t

 /* sorting 2 */
#define KEYPAD_kp_val1_data_storage1_SHIFT 0
#define KEYPAD_kp_val1_data_storage1_WIDTH 16
#define KEYPAD_kp_val1_time_stamp1_SHIFT 16
#define KEYPAD_kp_val1_time_stamp1_WIDTH 16

 data_storage1:16, /*[15:0] ,NO_MEM */
 time_stamp1:16; /*[31:16] ,NO_MEM */
 } bits;

 uint32_t value;
};

union KEYPAD_kp_val0Reg {
 struct { uint32_t

 /* sorting 2 */
#define KEYPAD_kp_val0_data_storage0_SHIFT 0
#define KEYPAD_kp_val0_data_storage0_WIDTH 16
#define KEYPAD_kp_val0_time_stamp0_SHIFT 16
#define KEYPAD_kp_val0_time_stamp0_WIDTH 16

 data_storage0:16, /*[15:0] ,NO_MEM */
 time_stamp0:16; /*[31:16] ,NO_MEM */
 } bits;

 uint32_t value;
};

union KEYPAD_ConfigReg {
 struct { uint32_t

 /* sorting 7 */
#define KEYPAD_Config_sys_clk_res_SHIFT 0
#define KEYPAD_Config_sys_clk_res_WIDTH 16
#define KEYPAD_Config_settle_time_SHIFT 16
#define KEYPAD_Config_settle_time_WIDTH 7
#define KEYPAD_Config_status_irq_SHIFT 23
#define KEYPAD_Config_status_irq_WIDTH 1
#define KEYPAD_Config_always_scan_SHIFT 28
#define KEYPAD_Config_always_scan_WIDTH 1
#define KEYPAD_Config_driving_1_SHIFT 29
#define KEYPAD_Config_driving_1_WIDTH 1
#define KEYPAD_Config_irq_en_SHIFT 30
#define KEYPAD_Config_irq_en_WIDTH 1
#define KEYPAD_Config_kp_enable_SHIFT 31
#define KEYPAD_Config_kp_enable_WIDTH 1

 sys_clk_res:16, /*[15:0]  */
 settle_time:7, /*[22:16]  */
 status_irq:1, /*[23:23] ,RO */
 hole0:4,
 always_scan:1, /*[28:28]  */
 driving_1:1, /*[29:29]  */
 irq_en:1, /*[30:30] ,NO_MEM */
 kp_enable:1; /*[31:31] ,NO_MEM */
 } bits;

 uint32_t value;
};

union I2C_SLAVE_STATUSReg {
 struct { uint32_t

 /* sorting 4 */
#define I2C_SLAVE_STATUS_DATAREADY_SHIFT 0
#define I2C_SLAVE_STATUS_DATAREADY_WIDTH 1
#define I2C_SLAVE_STATUS_OVERFLOW_SHIFT 1
#define I2C_SLAVE_STATUS_OVERFLOW_WIDTH 1
#define I2C_SLAVE_STATUS_DOUTEMPTY_SHIFT 2
#define I2C_SLAVE_STATUS_DOUTEMPTY_WIDTH 1
#define I2C_SLAVE_STATUS_UNDERFLOW_SHIFT 3
#define I2C_SLAVE_STATUS_UNDERFLOW_WIDTH 1

 dataready:1, /*[0:0] ,RO */
 overflow:1, /*[1:1] ,RO */
 doutempty:1, /*[2:2] ,RO */
 underflow:1, /*[3:3] ,RO */
 hole0:28;
 } bits;

 uint32_t value;
};

union I2C_SLAVE_INTENReg {
 struct { uint32_t

 /* sorting 4 */
#define I2C_SLAVE_INTEN_DATA_IN_EN_SHIFT 0
#define I2C_SLAVE_INTEN_DATA_IN_EN_WIDTH 1
#define I2C_SLAVE_INTEN_OVERFLOW_EN_SHIFT 1
#define I2C_SLAVE_INTEN_OVERFLOW_EN_WIDTH 1
#define I2C_SLAVE_INTEN_DATA_OUT_EN_SHIFT 2
#define I2C_SLAVE_INTEN_DATA_OUT_EN_WIDTH 1
#define I2C_SLAVE_INTEN_UNDERFLOW_EN_SHIFT 3
#define I2C_SLAVE_INTEN_UNDERFLOW_EN_WIDTH 1

 data_in_en:1, /*[0:0]  */
 overflow_en:1, /*[1:1]  */
 data_out_en:1, /*[2:2]  */
 underflow_en:1, /*[3:3]  */
 hole0:28;
 } bits;

 uint32_t value;
};

union I2C_SLAVE_INTReg {
 struct { uint32_t

 /* sorting 4 */
#define I2C_SLAVE_INT_DATA_IN_SHIFT 0
#define I2C_SLAVE_INT_DATA_IN_WIDTH 1
#define I2C_SLAVE_INT_OVERFLOW_SHIFT 1
#define I2C_SLAVE_INT_OVERFLOW_WIDTH 1
#define I2C_SLAVE_INT_DATA_OUT_SHIFT 2
#define I2C_SLAVE_INT_DATA_OUT_WIDTH 1
#define I2C_SLAVE_INT_UNDERFLOW_SHIFT 3
#define I2C_SLAVE_INT_UNDERFLOW_WIDTH 1

 data_in:1, /*[0:0] ,NO_MEM */
 overflow:1, /*[1:1] ,NO_MEM */
 data_out:1, /*[2:2] ,NO_MEM */
 underflow:1, /*[3:3] ,NO_MEM */
 hole0:28;
 } bits;

 uint32_t value;
};

union I2C_SLAVE_DATAOUTReg {
 struct { uint32_t

 /* sorting 1 */
#define I2C_SLAVE_DATAOUT_I2C_SLAVE_DATAOUT_DATA_SHIFT 0
#define I2C_SLAVE_DATAOUT_I2C_SLAVE_DATAOUT_DATA_WIDTH 8

 i2c_slave_dataout_data:8, /*[7:0]  */
 hole0:24;
 } bits;

 uint32_t value;
};

union I2C_SLAVE_DATAINReg {
 struct { uint32_t

 /* sorting 1 */
#define I2C_SLAVE_DATAIN_I2C_SLAVE_DATAIN_DATA_SHIFT 0
#define I2C_SLAVE_DATAIN_I2C_SLAVE_DATAIN_DATA_WIDTH 8

 i2c_slave_datain_data:8, /*[7:0] ,RO */
 hole0:24;
 } bits;

 uint32_t value;
};

union I2C_SLAVE_BUS_HOLDReg {
 struct { uint32_t

 /* sorting 3 */
#define I2C_SLAVE_BUS_HOLD_HOLDCOUNT_SHIFT 0
#define I2C_SLAVE_BUS_HOLD_HOLDCOUNT_WIDTH 30
#define I2C_SLAVE_BUS_HOLD_HOLDEN_SHIFT 30
#define I2C_SLAVE_BUS_HOLD_HOLDEN_WIDTH 1
#define I2C_SLAVE_BUS_HOLD_IRQMODE_SHIFT 31
#define I2C_SLAVE_BUS_HOLD_IRQMODE_WIDTH 1

 holdcount:30, /*[29:0]  */
 holden:1, /*[30:30]  */
 irqmode:1; /*[31:31]  */
 } bits;

 uint32_t value;
};

union I2C_SLAVE_ADDR_REGReg {
 struct { uint32_t

 /* sorting 2 */
#define I2C_SLAVE_ADDR_REG_DEVADDR_SHIFT 0
#define I2C_SLAVE_ADDR_REG_DEVADDR_WIDTH 7
#define I2C_SLAVE_ADDR_REG_EN_SHIFT 8
#define I2C_SLAVE_ADDR_REG_EN_WIDTH 1

 devaddr:7, /*[6:0]  */
 hole0:1,
 en:1, /*[8:8] ,NO_MEM */
 hole1:23;
 } bits;

 uint32_t value;
};

union I2C_MASTER1_STATUSReg {
 struct { uint32_t

 /* sorting 4 */
#define I2C_MASTER1_STATUS_I2CIDLE_SHIFT 0
#define I2C_MASTER1_STATUS_I2CIDLE_WIDTH 1
#define I2C_MASTER1_STATUS_DOUTEMPTY_SHIFT 1
#define I2C_MASTER1_STATUS_DOUTEMPTY_WIDTH 1
#define I2C_MASTER1_STATUS_DATAREADY_SHIFT 2
#define I2C_MASTER1_STATUS_DATAREADY_WIDTH 1
#define I2C_MASTER1_STATUS_ACKERRDET_SHIFT 3
#define I2C_MASTER1_STATUS_ACKERRDET_WIDTH 1

 i2cidle:1, /*[0:0] ,RO */
 doutempty:1, /*[1:1] ,RO */
 dataready:1, /*[2:2] ,RO */
 ackerrdet:1, /*[3:3] ,RO */
 hole0:28;
 } bits;

 uint32_t value;
};

union I2C_MASTER1_STARTXFERReg {
 struct { uint32_t

 /* sorting 3 */
#define I2C_MASTER1_STARTXFER_RWDIR_SHIFT 0
#define I2C_MASTER1_STARTXFER_RWDIR_WIDTH 1
#define I2C_MASTER1_STARTXFER_DUMMY_SHIFT 1
#define I2C_MASTER1_STARTXFER_DUMMY_WIDTH 1
#define I2C_MASTER1_STARTXFER_REPEATED_START_SHIFT 2
#define I2C_MASTER1_STARTXFER_REPEATED_START_WIDTH 1

 rwdir:1, /*[0:0]  */
 dummy:1, /*[1:1]  */
 repeated_start:1, /*[2:2]  */
 hole0:29;
 } bits;

 uint32_t value;
};

union I2C_MASTER1_INTENReg {
 struct { uint32_t

 /* sorting 4 */
#define I2C_MASTER1_INTEN_I2C_DATA_OUT_EN_SHIFT 0
#define I2C_MASTER1_INTEN_I2C_DATA_OUT_EN_WIDTH 1
#define I2C_MASTER1_INTEN_I2C_DATA_IN_EN_SHIFT 1
#define I2C_MASTER1_INTEN_I2C_DATA_IN_EN_WIDTH 1
#define I2C_MASTER1_INTEN_ACK_ERR_EN_SHIFT 2
#define I2C_MASTER1_INTEN_ACK_ERR_EN_WIDTH 1
#define I2C_MASTER1_INTEN_READY_INT_EN_SHIFT 3
#define I2C_MASTER1_INTEN_READY_INT_EN_WIDTH 1

 i2c_data_out_en:1, /*[0:0]  */
 i2c_data_in_en:1, /*[1:1]  */
 ack_err_en:1, /*[2:2]  */
 ready_int_en:1, /*[3:3] ,NO_MEM */
 hole0:28;
 } bits;

 uint32_t value;
};

union I2C_MASTER1_INTReg {
 struct { uint32_t

 /* sorting 4 */
#define I2C_MASTER1_INT_I2C_DATA_OUT_SHIFT 0
#define I2C_MASTER1_INT_I2C_DATA_OUT_WIDTH 1
#define I2C_MASTER1_INT_I2C_DATA_IN_SHIFT 1
#define I2C_MASTER1_INT_I2C_DATA_IN_WIDTH 1
#define I2C_MASTER1_INT_ACK_ERR_SHIFT 2
#define I2C_MASTER1_INT_ACK_ERR_WIDTH 1
#define I2C_MASTER1_INT_READY_INT_SHIFT 3
#define I2C_MASTER1_INT_READY_INT_WIDTH 1

 i2c_data_out:1, /*[0:0] ,NO_MEM */
 i2c_data_in:1, /*[1:1] ,NO_MEM */
 ack_err:1, /*[2:2] ,NO_MEM */
 ready_int:1, /*[3:3] ,NO_MEM */
 hole0:28;
 } bits;

 uint32_t value;
};

union I2C_MASTER1_DEV_ADDRReg {
 struct { uint32_t

 /* sorting 2 */
#define I2C_MASTER1_DEV_ADDR__SHIFT 0
#define I2C_MASTER1_DEV_ADDR__WIDTH 7
#define I2C_MASTER1_DEV_ADDR__DUMMY_SHIFT 7
#define I2C_MASTER1_DEV_ADDR__DUMMY_WIDTH 1

 :7, /*[6:0]  */
 _dummy:1, /*[7:7]  */
 hole0:24;
 } bits;

 uint32_t value;
};

union I2C_MASTER1_DATAOUTReg {
 struct { uint32_t

 /* sorting 1 */
#define I2C_MASTER1_DATAOUT_I2C_MASTER1_DATAOUT_DATA_SHIFT 0
#define I2C_MASTER1_DATAOUT_I2C_MASTER1_DATAOUT_DATA_WIDTH 8

 i2c_master1_dataout_data:8, /*[7:0]  */
 hole0:24;
 } bits;

 uint32_t value;
};

union I2C_MASTER1_DATAINReg {
 struct { uint32_t

 /* sorting 1 */
#define I2C_MASTER1_DATAIN_I2C_MASTER1_DATAIN_DATA_SHIFT 0
#define I2C_MASTER1_DATAIN_I2C_MASTER1_DATAIN_DATA_WIDTH 8

 i2c_master1_datain_data:8, /*[7:0] ,RO */
 hole0:24;
 } bits;

 uint32_t value;
};

union I2C_MASTER1_CONFIGReg {
 struct { uint32_t

 /* sorting 5 */
#define I2C_MASTER1_CONFIG_DEVADRDIS_SHIFT 0
#define I2C_MASTER1_CONFIG_DEVADRDIS_WIDTH 1
#define I2C_MASTER1_CONFIG_ADDRDIS_SHIFT 1
#define I2C_MASTER1_CONFIG_ADDRDIS_WIDTH 1
#define I2C_MASTER1_CONFIG_DEVADRLEN_SHIFT 2
#define I2C_MASTER1_CONFIG_DEVADRLEN_WIDTH 3
#define I2C_MASTER1_CONFIG_ADRLEN_SHIFT 5
#define I2C_MASTER1_CONFIG_ADRLEN_WIDTH 3
#define I2C_MASTER1_CONFIG_I2CM_EN_SHIFT 8
#define I2C_MASTER1_CONFIG_I2CM_EN_WIDTH 1

 devadrdis:1, /*[0:0]  */
 addrdis:1, /*[1:1]  */
 devadrlen:3, /*[4:2]  */
 adrlen:3, /*[7:5]  */
 i2cm_en:1, /*[8:8] ,NO_MEM */
 hole0:23;
 } bits;

 uint32_t value;
};

union I2C_MASTER1_CLK_DIVReg {
 struct { uint32_t

 /* sorting 1 */
#define I2C_MASTER1_CLK_DIV_I2C_MASTER1_CLK_DIV_SHIFT 0
#define I2C_MASTER1_CLK_DIV_I2C_MASTER1_CLK_DIV_WIDTH 16

 i2c_master1_clk_div:16, /*[15:0]  */
 hole0:16;
 } bits;

 uint32_t value;
};

union I2C_MASTER1_BYTE_CNTReg {
 struct { uint32_t

 /* sorting 1 */
#define I2C_MASTER1_BYTE_CNT_I2C_MASTER1_BYTE_CNT_BYTECNTLN_SHIFT 0
#define I2C_MASTER1_BYTE_CNT_I2C_MASTER1_BYTE_CNT_BYTECNTLN_WIDTH 24

 i2c_master1_byte_cnt_bytecntln:24, /*[23:0]  */
 hole0:8;
 } bits;

 uint32_t value;
};

union I2C_MASTER1_ADRReg {
 struct { uint32_t

 /* sorting 1 */
#define I2C_MASTER1_ADR_I2C_MASTER1_ADR_REGADR_SHIFT 0
#define I2C_MASTER1_ADR_I2C_MASTER1_ADR_REGADR_WIDTH 8

 i2c_master1_adr_regadr:8, /*[7:0]  */
 hole0:24;
 } bits;

 uint32_t value;
};

union I2C_MASTER0_STATUSReg {
 struct { uint32_t

 /* sorting 4 */
#define I2C_MASTER0_STATUS_I2CIDLE_SHIFT 0
#define I2C_MASTER0_STATUS_I2CIDLE_WIDTH 1
#define I2C_MASTER0_STATUS_DOUTEMPTY_SHIFT 1
#define I2C_MASTER0_STATUS_DOUTEMPTY_WIDTH 1
#define I2C_MASTER0_STATUS_DATAREADY_SHIFT 2
#define I2C_MASTER0_STATUS_DATAREADY_WIDTH 1
#define I2C_MASTER0_STATUS_ACKERRDET_SHIFT 3
#define I2C_MASTER0_STATUS_ACKERRDET_WIDTH 1

 i2cidle:1, /*[0:0] ,RO */
 doutempty:1, /*[1:1] ,RO */
 dataready:1, /*[2:2] ,RO */
 ackerrdet:1, /*[3:3] ,RO */
 hole0:28;
 } bits;

 uint32_t value;
};

union I2C_MASTER0_STARTXFERReg {
 struct { uint32_t

 /* sorting 3 */
#define I2C_MASTER0_STARTXFER_RWDIR_SHIFT 0
#define I2C_MASTER0_STARTXFER_RWDIR_WIDTH 1
#define I2C_MASTER0_STARTXFER_DUMMY_SHIFT 1
#define I2C_MASTER0_STARTXFER_DUMMY_WIDTH 1
#define I2C_MASTER0_STARTXFER_REPEATED_START_SHIFT 2
#define I2C_MASTER0_STARTXFER_REPEATED_START_WIDTH 1

 rwdir:1, /*[0:0]  */
 dummy:1, /*[1:1]  */
 repeated_start:1, /*[2:2]  */
 hole0:29;
 } bits;

 uint32_t value;
};

union I2C_MASTER0_INTENReg {
 struct { uint32_t

 /* sorting 4 */
#define I2C_MASTER0_INTEN_I2C_DATA_OUT_EN_SHIFT 0
#define I2C_MASTER0_INTEN_I2C_DATA_OUT_EN_WIDTH 1
#define I2C_MASTER0_INTEN_I2C_DATA_IN_EN_SHIFT 1
#define I2C_MASTER0_INTEN_I2C_DATA_IN_EN_WIDTH 1
#define I2C_MASTER0_INTEN_ACK_ERR_EN_SHIFT 2
#define I2C_MASTER0_INTEN_ACK_ERR_EN_WIDTH 1
#define I2C_MASTER0_INTEN_READY_INT_EN_SHIFT 3
#define I2C_MASTER0_INTEN_READY_INT_EN_WIDTH 1

 i2c_data_out_en:1, /*[0:0]  */
 i2c_data_in_en:1, /*[1:1]  */
 ack_err_en:1, /*[2:2]  */
 ready_int_en:1, /*[3:3] ,NO_MEM */
 hole0:28;
 } bits;

 uint32_t value;
};

union I2C_MASTER0_INTReg {
 struct { uint32_t

 /* sorting 4 */
#define I2C_MASTER0_INT_I2C_DATA_OUT_SHIFT 0
#define I2C_MASTER0_INT_I2C_DATA_OUT_WIDTH 1
#define I2C_MASTER0_INT_I2C_DATA_IN_SHIFT 1
#define I2C_MASTER0_INT_I2C_DATA_IN_WIDTH 1
#define I2C_MASTER0_INT_ACK_ERR_SHIFT 2
#define I2C_MASTER0_INT_ACK_ERR_WIDTH 1
#define I2C_MASTER0_INT_READY_INT_SHIFT 3
#define I2C_MASTER0_INT_READY_INT_WIDTH 1

 i2c_data_out:1, /*[0:0] ,NO_MEM */
 i2c_data_in:1, /*[1:1] ,NO_MEM */
 ack_err:1, /*[2:2] ,NO_MEM */
 ready_int:1, /*[3:3] ,NO_MEM */
 hole0:28;
 } bits;

 uint32_t value;
};

union I2C_MASTER0_DEV_ADDRReg {
 struct { uint32_t

 /* sorting 2 */
#define I2C_MASTER0_DEV_ADDR__SHIFT 0
#define I2C_MASTER0_DEV_ADDR__WIDTH 7
#define I2C_MASTER0_DEV_ADDR__DUMMY_SHIFT 7
#define I2C_MASTER0_DEV_ADDR__DUMMY_WIDTH 1

 :7, /*[6:0]  */
 _dummy:1, /*[7:7]  */
 hole0:24;
 } bits;

 uint32_t value;
};

union I2C_MASTER0_DATAOUTReg {
 struct { uint32_t

 /* sorting 1 */
#define I2C_MASTER0_DATAOUT_I2C_MASTER0_DATAOUT_DATA_SHIFT 0
#define I2C_MASTER0_DATAOUT_I2C_MASTER0_DATAOUT_DATA_WIDTH 8

 i2c_master0_dataout_data:8, /*[7:0]  */
 hole0:24;
 } bits;

 uint32_t value;
};

union I2C_MASTER0_DATAINReg {
 struct { uint32_t

 /* sorting 1 */
#define I2C_MASTER0_DATAIN_I2C_MASTER0_DATAIN_DATA_SHIFT 0
#define I2C_MASTER0_DATAIN_I2C_MASTER0_DATAIN_DATA_WIDTH 8

 i2c_master0_datain_data:8, /*[7:0] ,RO */
 hole0:24;
 } bits;

 uint32_t value;
};

union I2C_MASTER0_CONFIGReg {
 struct { uint32_t

 /* sorting 5 */
#define I2C_MASTER0_CONFIG_DEVADRDIS_SHIFT 0
#define I2C_MASTER0_CONFIG_DEVADRDIS_WIDTH 1
#define I2C_MASTER0_CONFIG_ADDRDIS_SHIFT 1
#define I2C_MASTER0_CONFIG_ADDRDIS_WIDTH 1
#define I2C_MASTER0_CONFIG_DEVADRLEN_SHIFT 2
#define I2C_MASTER0_CONFIG_DEVADRLEN_WIDTH 3
#define I2C_MASTER0_CONFIG_ADRLEN_SHIFT 5
#define I2C_MASTER0_CONFIG_ADRLEN_WIDTH 3
#define I2C_MASTER0_CONFIG_I2CM_EN_SHIFT 8
#define I2C_MASTER0_CONFIG_I2CM_EN_WIDTH 1

 devadrdis:1, /*[0:0]  */
 addrdis:1, /*[1:1]  */
 devadrlen:3, /*[4:2]  */
 adrlen:3, /*[7:5]  */
 i2cm_en:1, /*[8:8] ,NO_MEM */
 hole0:23;
 } bits;

 uint32_t value;
};

union I2C_MASTER0_CLK_DIVReg {
 struct { uint32_t

 /* sorting 1 */
#define I2C_MASTER0_CLK_DIV_I2C_MASTER0_CLK_DIV_SHIFT 0
#define I2C_MASTER0_CLK_DIV_I2C_MASTER0_CLK_DIV_WIDTH 16

 i2c_master0_clk_div:16, /*[15:0]  */
 hole0:16;
 } bits;

 uint32_t value;
};

union I2C_MASTER0_BYTE_CNTReg {
 struct { uint32_t

 /* sorting 1 */
#define I2C_MASTER0_BYTE_CNT_I2C_MASTER0_BYTE_CNT_BYTECNTLN_SHIFT 0
#define I2C_MASTER0_BYTE_CNT_I2C_MASTER0_BYTE_CNT_BYTECNTLN_WIDTH 24

 i2c_master0_byte_cnt_bytecntln:24, /*[23:0]  */
 hole0:8;
 } bits;

 uint32_t value;
};

union I2C_MASTER0_ADRReg {
 struct { uint32_t

 /* sorting 1 */
#define I2C_MASTER0_ADR_I2C_MASTER0_ADR_REGADR_SHIFT 0
#define I2C_MASTER0_ADR_I2C_MASTER0_ADR_REGADR_WIDTH 8

 i2c_master0_adr_regadr:8, /*[7:0]  */
 hole0:24;
 } bits;

 uint32_t value;
};

union HDMI_CEC_STATUSReg {
 struct { uint32_t

 /* sorting 8 */
#define HDMI_CEC_STATUS_INITIATOR_START_XFER_SHIFT 0
#define HDMI_CEC_STATUS_INITIATOR_START_XFER_WIDTH 1
#define HDMI_CEC_STATUS_FOLLOWER_BUSY_SHIFT 1
#define HDMI_CEC_STATUS_FOLLOWER_BUSY_WIDTH 1
#define HDMI_CEC_STATUS_MAX_BIT_COUNT_SHIFT 8
#define HDMI_CEC_STATUS_MAX_BIT_COUNT_WIDTH 8
#define HDMI_CEC_STATUS_STATUS_SHIFT 24
#define HDMI_CEC_STATUS_STATUS_WIDTH 4
#define HDMI_CEC_STATUS_DATAIN_FULL_STATUS_SHIFT 28
#define HDMI_CEC_STATUS_DATAIN_FULL_STATUS_WIDTH 1
#define HDMI_CEC_STATUS_ERROR_INT_STATUS_SHIFT 29
#define HDMI_CEC_STATUS_ERROR_INT_STATUS_WIDTH 1
#define HDMI_CEC_STATUS_DATAIN_INT_STATUS_SHIFT 30
#define HDMI_CEC_STATUS_DATAIN_INT_STATUS_WIDTH 1
#define HDMI_CEC_STATUS_DATAOUT_INT_STATUS_SHIFT 31
#define HDMI_CEC_STATUS_DATAOUT_INT_STATUS_WIDTH 1

 initiator_start_xfer:1, /*[0:0]  */
 follower_busy:1, /*[1:1]  */
 hole0:6,
 max_bit_count:8, /*[15:8]  */
 hole1:8,
 status:4, /*[27:24]  */
 datain_full_status:1, /*[28:28]  */
 error_int_status:1, /*[29:29]  */
 datain_int_status:1, /*[30:30]  */
 dataout_int_status:1; /*[31:31]  */
 } bits;

 uint32_t value;
};

union HDMI_CEC_RECEIVE_WINReg {
 struct { uint32_t

 /* sorting 2 */
#define HDMI_CEC_RECEIVE_WIN_LO_SHIFT 0
#define HDMI_CEC_RECEIVE_WIN_LO_WIDTH 16
#define HDMI_CEC_RECEIVE_WIN_HI_SHIFT 16
#define HDMI_CEC_RECEIVE_WIN_HI_WIDTH 16

 lo:16, /*[15:0]  */
 hi:16; /*[31:16]  */
 } bits;

 uint32_t value;
};

union HDMI_CEC_INIT_XFER_HDRReg {
 struct { uint32_t

 /* sorting 2 */
#define HDMI_CEC_INIT_XFER_HDR__SHIFT 0
#define HDMI_CEC_INIT_XFER_HDR__WIDTH 8
#define HDMI_CEC_INIT_XFER_HDR__EOM_SHIFT 8
#define HDMI_CEC_INIT_XFER_HDR__EOM_WIDTH 1

 :8, /*[7:0]  */
 _eom:1, /*[8:8]  */
 hole0:23;
 } bits;

 uint32_t value;
};

union HDMI_CEC_INIT_XFER_DATA_F_EReg {
 struct { uint32_t

 /* sorting 4 */
#define HDMI_CEC_INIT_XFER_DATA_F_E_E_SHIFT 0
#define HDMI_CEC_INIT_XFER_DATA_F_E_E_WIDTH 8
#define HDMI_CEC_INIT_XFER_DATA_F_E_E_EOM_SHIFT 8
#define HDMI_CEC_INIT_XFER_DATA_F_E_E_EOM_WIDTH 1
#define HDMI_CEC_INIT_XFER_DATA_F_E_F_SHIFT 16
#define HDMI_CEC_INIT_XFER_DATA_F_E_F_WIDTH 8
#define HDMI_CEC_INIT_XFER_DATA_F_E_F_EOM_SHIFT 24
#define HDMI_CEC_INIT_XFER_DATA_F_E_F_EOM_WIDTH 1

 e:8, /*[7:0]  */
 e_eom:1, /*[8:8]  */
 hole0:7,
 f:8, /*[23:16]  */
 f_eom:1, /*[24:24]  */
 hole1:7;
 } bits;

 uint32_t value;
};

union HDMI_CEC_INIT_XFER_DATA_D_CReg {
 struct { uint32_t

 /* sorting 4 */
#define HDMI_CEC_INIT_XFER_DATA_D_C_C_SHIFT 0
#define HDMI_CEC_INIT_XFER_DATA_D_C_C_WIDTH 8
#define HDMI_CEC_INIT_XFER_DATA_D_C_C_EOM_SHIFT 8
#define HDMI_CEC_INIT_XFER_DATA_D_C_C_EOM_WIDTH 1
#define HDMI_CEC_INIT_XFER_DATA_D_C_D_SHIFT 16
#define HDMI_CEC_INIT_XFER_DATA_D_C_D_WIDTH 8
#define HDMI_CEC_INIT_XFER_DATA_D_C_D_EOM_SHIFT 24
#define HDMI_CEC_INIT_XFER_DATA_D_C_D_EOM_WIDTH 1

 c:8, /*[7:0]  */
 c_eom:1, /*[8:8]  */
 hole0:7,
 d:8, /*[23:16]  */
 d_eom:1, /*[24:24]  */
 hole1:7;
 } bits;

 uint32_t value;
};

union HDMI_CEC_INIT_XFER_DATA_B_AReg {
 struct { uint32_t

 /* sorting 4 */
#define HDMI_CEC_INIT_XFER_DATA_B_A_A_SHIFT 0
#define HDMI_CEC_INIT_XFER_DATA_B_A_A_WIDTH 8
#define HDMI_CEC_INIT_XFER_DATA_B_A_A_EOM_SHIFT 8
#define HDMI_CEC_INIT_XFER_DATA_B_A_A_EOM_WIDTH 1
#define HDMI_CEC_INIT_XFER_DATA_B_A_B_SHIFT 16
#define HDMI_CEC_INIT_XFER_DATA_B_A_B_WIDTH 8
#define HDMI_CEC_INIT_XFER_DATA_B_A_B_EOM_SHIFT 24
#define HDMI_CEC_INIT_XFER_DATA_B_A_B_EOM_WIDTH 1

 a:8, /*[7:0]  */
 a_eom:1, /*[8:8]  */
 hole0:7,
 b:8, /*[23:16]  */
 b_eom:1, /*[24:24]  */
 hole1:7;
 } bits;

 uint32_t value;
};

union HDMI_CEC_INIT_XFER_DATA_9_8Reg {
 struct { uint32_t

 /* sorting 4 */
#define HDMI_CEC_INIT_XFER_DATA_9_8__8_SHIFT 0
#define HDMI_CEC_INIT_XFER_DATA_9_8__8_WIDTH 8
#define HDMI_CEC_INIT_XFER_DATA_9_8__8_EOM_SHIFT 8
#define HDMI_CEC_INIT_XFER_DATA_9_8__8_EOM_WIDTH 1
#define HDMI_CEC_INIT_XFER_DATA_9_8__9_SHIFT 16
#define HDMI_CEC_INIT_XFER_DATA_9_8__9_WIDTH 8
#define HDMI_CEC_INIT_XFER_DATA_9_8__9_EOM_SHIFT 24
#define HDMI_CEC_INIT_XFER_DATA_9_8__9_EOM_WIDTH 1

 _8:8, /*[7:0]  */
 _8_eom:1, /*[8:8]  */
 hole0:7,
 _9:8, /*[23:16]  */
 _9_eom:1, /*[24:24]  */
 hole1:7;
 } bits;

 uint32_t value;
};

union HDMI_CEC_INIT_XFER_DATA_7_6Reg {
 struct { uint32_t

 /* sorting 4 */
#define HDMI_CEC_INIT_XFER_DATA_7_6__6_SHIFT 0
#define HDMI_CEC_INIT_XFER_DATA_7_6__6_WIDTH 8
#define HDMI_CEC_INIT_XFER_DATA_7_6__6_EOM_SHIFT 8
#define HDMI_CEC_INIT_XFER_DATA_7_6__6_EOM_WIDTH 1
#define HDMI_CEC_INIT_XFER_DATA_7_6__7_SHIFT 16
#define HDMI_CEC_INIT_XFER_DATA_7_6__7_WIDTH 8
#define HDMI_CEC_INIT_XFER_DATA_7_6__7_EOM_SHIFT 24
#define HDMI_CEC_INIT_XFER_DATA_7_6__7_EOM_WIDTH 1

 _6:8, /*[7:0]  */
 _6_eom:1, /*[8:8]  */
 hole0:7,
 _7:8, /*[23:16]  */
 _7_eom:1, /*[24:24]  */
 hole1:7;
 } bits;

 uint32_t value;
};

union HDMI_CEC_INIT_XFER_DATA_5_4Reg {
 struct { uint32_t

 /* sorting 4 */
#define HDMI_CEC_INIT_XFER_DATA_5_4__4_SHIFT 0
#define HDMI_CEC_INIT_XFER_DATA_5_4__4_WIDTH 8
#define HDMI_CEC_INIT_XFER_DATA_5_4__4_EOM_SHIFT 8
#define HDMI_CEC_INIT_XFER_DATA_5_4__4_EOM_WIDTH 1
#define HDMI_CEC_INIT_XFER_DATA_5_4__5_SHIFT 16
#define HDMI_CEC_INIT_XFER_DATA_5_4__5_WIDTH 8
#define HDMI_CEC_INIT_XFER_DATA_5_4__5_EOM_SHIFT 24
#define HDMI_CEC_INIT_XFER_DATA_5_4__5_EOM_WIDTH 1

 _4:8, /*[7:0]  */
 _4_eom:1, /*[8:8]  */
 hole0:7,
 _5:8, /*[23:16]  */
 _5_eom:1, /*[24:24]  */
 hole1:7;
 } bits;

 uint32_t value;
};

union HDMI_CEC_INIT_XFER_DATA_3_2Reg {
 struct { uint32_t

 /* sorting 4 */
#define HDMI_CEC_INIT_XFER_DATA_3_2__2_SHIFT 0
#define HDMI_CEC_INIT_XFER_DATA_3_2__2_WIDTH 8
#define HDMI_CEC_INIT_XFER_DATA_3_2__2_EOM_SHIFT 8
#define HDMI_CEC_INIT_XFER_DATA_3_2__2_EOM_WIDTH 1
#define HDMI_CEC_INIT_XFER_DATA_3_2__3_SHIFT 16
#define HDMI_CEC_INIT_XFER_DATA_3_2__3_WIDTH 8
#define HDMI_CEC_INIT_XFER_DATA_3_2__3_EOM_SHIFT 24
#define HDMI_CEC_INIT_XFER_DATA_3_2__3_EOM_WIDTH 1

 _2:8, /*[7:0]  */
 _2_eom:1, /*[8:8]  */
 hole0:7,
 _3:8, /*[23:16]  */
 _3_eom:1, /*[24:24]  */
 hole1:7;
 } bits;

 uint32_t value;
};

union HDMI_CEC_INIT_XFER_DATA_1_0Reg {
 struct { uint32_t

 /* sorting 4 */
#define HDMI_CEC_INIT_XFER_DATA_1_0__0_SHIFT 0
#define HDMI_CEC_INIT_XFER_DATA_1_0__0_WIDTH 8
#define HDMI_CEC_INIT_XFER_DATA_1_0__0_EOM_SHIFT 8
#define HDMI_CEC_INIT_XFER_DATA_1_0__0_EOM_WIDTH 1
#define HDMI_CEC_INIT_XFER_DATA_1_0__1_SHIFT 16
#define HDMI_CEC_INIT_XFER_DATA_1_0__1_WIDTH 8
#define HDMI_CEC_INIT_XFER_DATA_1_0__1_EOM_SHIFT 24
#define HDMI_CEC_INIT_XFER_DATA_1_0__1_EOM_WIDTH 1

 _0:8, /*[7:0]  */
 _0_eom:1, /*[8:8]  */
 hole0:7,
 _1:8, /*[23:16]  */
 _1_eom:1, /*[24:24]  */
 hole1:7;
 } bits;

 uint32_t value;
};

union HDMI_CEC_FOLLOWER_REC_HEADERReg {
 struct { uint32_t

 /* sorting 4 */
#define HDMI_CEC_FOLLOWER_REC_HEADER__0_SHIFT 0
#define HDMI_CEC_FOLLOWER_REC_HEADER__0_WIDTH 4
#define HDMI_CEC_FOLLOWER_REC_HEADER__1_SHIFT 4
#define HDMI_CEC_FOLLOWER_REC_HEADER__1_WIDTH 4
#define HDMI_CEC_FOLLOWER_REC_HEADER__2_SHIFT 8
#define HDMI_CEC_FOLLOWER_REC_HEADER__2_WIDTH 4
#define HDMI_CEC_FOLLOWER_REC_HEADER__3_SHIFT 12
#define HDMI_CEC_FOLLOWER_REC_HEADER__3_WIDTH 4

 _0:4, /*[3:0]  */
 _1:4, /*[7:4]  */
 _2:4, /*[11:8]  */
 _3:4, /*[15:12]  */
 hole0:16;
 } bits;

 uint32_t value;
};

union HDMI_CEC_FOLLOWER_HEADERReg {
 struct { uint32_t

 /* sorting 2 */
#define HDMI_CEC_FOLLOWER_HEADER__SHIFT 0
#define HDMI_CEC_FOLLOWER_HEADER__WIDTH 8
#define HDMI_CEC_FOLLOWER_HEADER__EOM_SHIFT 8
#define HDMI_CEC_FOLLOWER_HEADER__EOM_WIDTH 1

 :8, /*[7:0] ,RO */
 _eom:1, /*[8:8] ,RO */
 hole0:23;
 } bits;

 uint32_t value;
};

union HDMI_CEC_FOLLOWER_DATA_F_EReg {
 struct { uint32_t

 /* sorting 4 */
#define HDMI_CEC_FOLLOWER_DATA_F_E_E_SHIFT 0
#define HDMI_CEC_FOLLOWER_DATA_F_E_E_WIDTH 8
#define HDMI_CEC_FOLLOWER_DATA_F_E_E_EOM_SHIFT 8
#define HDMI_CEC_FOLLOWER_DATA_F_E_E_EOM_WIDTH 1
#define HDMI_CEC_FOLLOWER_DATA_F_E_F_SHIFT 16
#define HDMI_CEC_FOLLOWER_DATA_F_E_F_WIDTH 8
#define HDMI_CEC_FOLLOWER_DATA_F_E_F_EOM_SHIFT 24
#define HDMI_CEC_FOLLOWER_DATA_F_E_F_EOM_WIDTH 1

 e:8, /*[7:0] ,RO */
 e_eom:1, /*[8:8] ,RO */
 hole0:7,
 f:8, /*[23:16] ,RO */
 f_eom:1, /*[24:24] ,RO */
 hole1:7;
 } bits;

 uint32_t value;
};

union HDMI_CEC_FOLLOWER_DATA_D_CReg {
 struct { uint32_t

 /* sorting 4 */
#define HDMI_CEC_FOLLOWER_DATA_D_C_C_SHIFT 0
#define HDMI_CEC_FOLLOWER_DATA_D_C_C_WIDTH 8
#define HDMI_CEC_FOLLOWER_DATA_D_C_C_EOM_SHIFT 8
#define HDMI_CEC_FOLLOWER_DATA_D_C_C_EOM_WIDTH 1
#define HDMI_CEC_FOLLOWER_DATA_D_C_D_SHIFT 16
#define HDMI_CEC_FOLLOWER_DATA_D_C_D_WIDTH 8
#define HDMI_CEC_FOLLOWER_DATA_D_C_D_EOM_SHIFT 24
#define HDMI_CEC_FOLLOWER_DATA_D_C_D_EOM_WIDTH 1

 c:8, /*[7:0] ,RO */
 c_eom:1, /*[8:8] ,RO */
 hole0:7,
 d:8, /*[23:16] ,RO */
 d_eom:1, /*[24:24] ,RO */
 hole1:7;
 } bits;

 uint32_t value;
};

union HDMI_CEC_FOLLOWER_DATA_B_AReg {
 struct { uint32_t

 /* sorting 4 */
#define HDMI_CEC_FOLLOWER_DATA_B_A_A_SHIFT 0
#define HDMI_CEC_FOLLOWER_DATA_B_A_A_WIDTH 8
#define HDMI_CEC_FOLLOWER_DATA_B_A_A_EOM_SHIFT 8
#define HDMI_CEC_FOLLOWER_DATA_B_A_A_EOM_WIDTH 1
#define HDMI_CEC_FOLLOWER_DATA_B_A_B_SHIFT 16
#define HDMI_CEC_FOLLOWER_DATA_B_A_B_WIDTH 8
#define HDMI_CEC_FOLLOWER_DATA_B_A_B_EOM_SHIFT 24
#define HDMI_CEC_FOLLOWER_DATA_B_A_B_EOM_WIDTH 1

 a:8, /*[7:0] ,RO */
 a_eom:1, /*[8:8] ,RO */
 hole0:7,
 b:8, /*[23:16] ,RO */
 b_eom:1, /*[24:24] ,RO */
 hole1:7;
 } bits;

 uint32_t value;
};

union HDMI_CEC_FOLLOWER_DATA_9_8Reg {
 struct { uint32_t

 /* sorting 4 */
#define HDMI_CEC_FOLLOWER_DATA_9_8__8_SHIFT 0
#define HDMI_CEC_FOLLOWER_DATA_9_8__8_WIDTH 8
#define HDMI_CEC_FOLLOWER_DATA_9_8__8_EOM_SHIFT 8
#define HDMI_CEC_FOLLOWER_DATA_9_8__8_EOM_WIDTH 1
#define HDMI_CEC_FOLLOWER_DATA_9_8__9_SHIFT 16
#define HDMI_CEC_FOLLOWER_DATA_9_8__9_WIDTH 8
#define HDMI_CEC_FOLLOWER_DATA_9_8__9_EOM_SHIFT 24
#define HDMI_CEC_FOLLOWER_DATA_9_8__9_EOM_WIDTH 1

 _8:8, /*[7:0] ,RO */
 _8_eom:1, /*[8:8] ,RO */
 hole0:7,
 _9:8, /*[23:16] ,RO */
 _9_eom:1, /*[24:24] ,RO */
 hole1:7;
 } bits;

 uint32_t value;
};

union HDMI_CEC_FOLLOWER_DATA_7_6Reg {
 struct { uint32_t

 /* sorting 4 */
#define HDMI_CEC_FOLLOWER_DATA_7_6__6_SHIFT 0
#define HDMI_CEC_FOLLOWER_DATA_7_6__6_WIDTH 8
#define HDMI_CEC_FOLLOWER_DATA_7_6__6_EOM_SHIFT 8
#define HDMI_CEC_FOLLOWER_DATA_7_6__6_EOM_WIDTH 1
#define HDMI_CEC_FOLLOWER_DATA_7_6__7_SHIFT 16
#define HDMI_CEC_FOLLOWER_DATA_7_6__7_WIDTH 8
#define HDMI_CEC_FOLLOWER_DATA_7_6__7_EOM_SHIFT 24
#define HDMI_CEC_FOLLOWER_DATA_7_6__7_EOM_WIDTH 1

 _6:8, /*[7:0] ,RO */
 _6_eom:1, /*[8:8] ,RO */
 hole0:7,
 _7:8, /*[23:16] ,RO */
 _7_eom:1, /*[24:24] ,RO */
 hole1:7;
 } bits;

 uint32_t value;
};

union HDMI_CEC_FOLLOWER_DATA_5_4Reg {
 struct { uint32_t

 /* sorting 4 */
#define HDMI_CEC_FOLLOWER_DATA_5_4__4_SHIFT 0
#define HDMI_CEC_FOLLOWER_DATA_5_4__4_WIDTH 8
#define HDMI_CEC_FOLLOWER_DATA_5_4__4_EOM_SHIFT 8
#define HDMI_CEC_FOLLOWER_DATA_5_4__4_EOM_WIDTH 1
#define HDMI_CEC_FOLLOWER_DATA_5_4__5_SHIFT 16
#define HDMI_CEC_FOLLOWER_DATA_5_4__5_WIDTH 8
#define HDMI_CEC_FOLLOWER_DATA_5_4__5_EOM_SHIFT 24
#define HDMI_CEC_FOLLOWER_DATA_5_4__5_EOM_WIDTH 1

 _4:8, /*[7:0] ,RO */
 _4_eom:1, /*[8:8] ,RO */
 hole0:7,
 _5:8, /*[23:16] ,RO */
 _5_eom:1, /*[24:24] ,RO */
 hole1:7;
 } bits;

 uint32_t value;
};

union HDMI_CEC_FOLLOWER_DATA_3_2Reg {
 struct { uint32_t

 /* sorting 4 */
#define HDMI_CEC_FOLLOWER_DATA_3_2__2_SHIFT 0
#define HDMI_CEC_FOLLOWER_DATA_3_2__2_WIDTH 8
#define HDMI_CEC_FOLLOWER_DATA_3_2__2_EOM_SHIFT 8
#define HDMI_CEC_FOLLOWER_DATA_3_2__2_EOM_WIDTH 1
#define HDMI_CEC_FOLLOWER_DATA_3_2__3_SHIFT 16
#define HDMI_CEC_FOLLOWER_DATA_3_2__3_WIDTH 8
#define HDMI_CEC_FOLLOWER_DATA_3_2__3_EOM_SHIFT 24
#define HDMI_CEC_FOLLOWER_DATA_3_2__3_EOM_WIDTH 1

 _2:8, /*[7:0] ,RO */
 _2_eom:1, /*[8:8] ,RO */
 hole0:7,
 _3:8, /*[23:16] ,RO */
 _3_eom:1, /*[24:24] ,RO */
 hole1:7;
 } bits;

 uint32_t value;
};

union HDMI_CEC_FOLLOWER_DATA_1_0Reg {
 struct { uint32_t

 /* sorting 4 */
#define HDMI_CEC_FOLLOWER_DATA_1_0__0_SHIFT 0
#define HDMI_CEC_FOLLOWER_DATA_1_0__0_WIDTH 8
#define HDMI_CEC_FOLLOWER_DATA_1_0__0_EOM_SHIFT 8
#define HDMI_CEC_FOLLOWER_DATA_1_0__0_EOM_WIDTH 1
#define HDMI_CEC_FOLLOWER_DATA_1_0__1_SHIFT 16
#define HDMI_CEC_FOLLOWER_DATA_1_0__1_WIDTH 8
#define HDMI_CEC_FOLLOWER_DATA_1_0__1_EOM_SHIFT 24
#define HDMI_CEC_FOLLOWER_DATA_1_0__1_EOM_WIDTH 1

 _0:8, /*[7:0] ,RO */
 _0_eom:1, /*[8:8] ,RO */
 hole0:7,
 _1:8, /*[23:16] ,RO */
 _1_eom:1, /*[24:24] ,RO */
 hole1:7;
 } bits;

 uint32_t value;
};

union HDMI_CEC_CONFIGReg {
 struct { uint32_t

 /* sorting 10 */
#define HDMI_CEC_CONFIG_ENABLE_SHIFT 0
#define HDMI_CEC_CONFIG_ENABLE_WIDTH 1
#define HDMI_CEC_CONFIG_SAMPLE_CLK_SELECT_SHIFT 1
#define HDMI_CEC_CONFIG_SAMPLE_CLK_SELECT_WIDTH 1
#define HDMI_CEC_CONFIG_SAMPLE_DELAY_ENABLE_SHIFT 2
#define HDMI_CEC_CONFIG_SAMPLE_DELAY_ENABLE_WIDTH 1
#define HDMI_CEC_CONFIG_FOLL_PULL_ON_ERR_SHIFT 3
#define HDMI_CEC_CONFIG_FOLL_PULL_ON_ERR_WIDTH 1
#define HDMI_CEC_CONFIG_PING_MODE_EN_1_SHIFT 4
#define HDMI_CEC_CONFIG_PING_MODE_EN_1_WIDTH 2
#define HDMI_CEC_CONFIG_NONACK_ALL_MODE_SHIFT 6
#define HDMI_CEC_CONFIG_NONACK_ALL_MODE_WIDTH 1
#define HDMI_CEC_CONFIG_RISE_TIME_SHIFT 8
#define HDMI_CEC_CONFIG_RISE_TIME_WIDTH 16
#define HDMI_CEC_CONFIG_ERROR_INT_EN_SHIFT 29
#define HDMI_CEC_CONFIG_ERROR_INT_EN_WIDTH 1
#define HDMI_CEC_CONFIG_DATAIN_INT_EN_SHIFT 30
#define HDMI_CEC_CONFIG_DATAIN_INT_EN_WIDTH 1
#define HDMI_CEC_CONFIG_DATAOUT_INT_EN_SHIFT 31
#define HDMI_CEC_CONFIG_DATAOUT_INT_EN_WIDTH 1

 enable:1, /*[0:0] ,NO_MEM */
 sample_clk_select:1, /*[1:1] ,RO */
 sample_delay_enable:1, /*[2:2] ,RO */
 foll_pull_on_err:1, /*[3:3]  */
 ping_mode_en_1:2, /*[5:4]  */
 nonack_all_mode:1, /*[6:6]  */
 hole0:1,
 rise_time:16, /*[23:8]  */
 hole1:5,
 error_int_en:1, /*[29:29]  */
 datain_int_en:1, /*[30:30]  */
 dataout_int_en:1; /*[31:31]  */
 } bits;

 uint32_t value;
};

union FIP_SWITCH_DATAReg {
 struct { uint32_t

 /* sorting 1 */
#define FIP_SWITCH_DATA_FIP_SWITCH_DATA_DATA_SHIFT 0
#define FIP_SWITCH_DATA_FIP_SWITCH_DATA_DATA_WIDTH 8

 fip_switch_data_data:8, /*[7:0] ,RO */
 hole0:24;
 } bits;

 uint32_t value;
};

union FIP_LED_DATAReg {
 struct { uint32_t

 /* sorting 1 */
#define FIP_LED_DATA_FIP_LED_DATA_DATA_SHIFT 0
#define FIP_LED_DATA_FIP_LED_DATA_DATA_WIDTH 8

 fip_led_data_data:8, /*[7:0]  */
 hole0:24;
 } bits;

 uint32_t value;
};

union FIP_KEY_DATA2Reg {
 struct { uint32_t

 /* sorting 1 */
#define FIP_KEY_DATA2_FIP_KEY_DATA2_DATA_SHIFT 0
#define FIP_KEY_DATA2_FIP_KEY_DATA2_DATA_WIDTH 16

 fip_key_data2_data:16, /*[15:0] ,RO */
 hole0:16;
 } bits;

 uint32_t value;
};

union FIP_INTReg {
 struct { uint32_t

 /* sorting 2 */
#define FIP_INT_WR_INT_SHIFT 0
#define FIP_INT_WR_INT_WIDTH 1
#define FIP_INT_RD_INT_SHIFT 1
#define FIP_INT_RD_INT_WIDTH 1

 wr_int:1, /*[0:0] ,NO_MEM */
 rd_int:1, /*[1:1] ,NO_MEM */
 hole0:30;
 } bits;

 uint32_t value;
};

union FIP_DISPLAY_DATAReg {
 struct { uint32_t

 /* sorting 1 */
#define FIP_DISPLAY_DATA_FIP_DISPLAY_DATA_DATA_SHIFT 0
#define FIP_DISPLAY_DATA_FIP_DISPLAY_DATA_DATA_WIDTH 8

 fip_display_data_data:8, /*[7:0]  */
 hole0:24;
 } bits;

 uint32_t value;
};

union FIP_CONFIGReg {
 struct { uint32_t

 /* sorting 6 */
#define FIP_CONFIG_CLK_DIV_SHIFT 0
#define FIP_CONFIG_CLK_DIV_WIDTH 8
#define FIP_CONFIG_TRISTATE_SHIFT 8
#define FIP_CONFIG_TRISTATE_WIDTH 1
#define FIP_CONFIG_BUSY_SHIFT 9
#define FIP_CONFIG_BUSY_WIDTH 1
#define FIP_CONFIG_ENABLE_SHIFT 10
#define FIP_CONFIG_ENABLE_WIDTH 1
#define FIP_CONFIG_WR_INT_EN_SHIFT 16
#define FIP_CONFIG_WR_INT_EN_WIDTH 1
#define FIP_CONFIG_RD_INT_EN_SHIFT 17
#define FIP_CONFIG_RD_INT_EN_WIDTH 1

 clk_div:8, /*[7:0]  */
 tristate:1, /*[8:8]  */
 busy:1, /*[9:9] ,RO */
 enable:1, /*[10:10] ,NO_MEM */
 hole0:5,
 wr_int_en:1, /*[16:16]  */
 rd_int_en:1, /*[17:17]  */
 hole1:14;
 } bits;

 uint32_t value;
};

union FIP_COMMANDReg {
 struct { uint32_t

 /* sorting 1 */
#define FIP_COMMAND_FIP_COMMAND_CMD_SHIFT 0
#define FIP_COMMAND_FIP_COMMAND_CMD_WIDTH 8

 fip_command_cmd:8, /*[7:0]  */
 hole0:24;
 } bits;

 uint32_t value;
};

struct ha_gpio {
 union UIR1_IR_UNIVERSAL_DEBOUNCE_DENOISEReg UIR1_IR_UNIVERSAL_DEBOUNCE_DENOISE; /* +0x00000000  */
 union UIR1_IR_UNIVERSAL_CONFIGReg UIR1_IR_UNIVERSAL_CONFIG; /* +0x00000004  */
 uint32_t UIR1_IR_UNIVERSAL_CLK_DIV; /* +0x00000008 ,RO */
 uint32_t UIR1_IR_UNIVERSAL_TIMEOUT; /* +0x0000000c  */
 uint32_t UIR1_IR_UNIVERSAL_SUBTRACT; /* +0x00000010  */
 union UIR1_IR_UNIVERSAL_MEM_ADDRESSReg UIR1_IR_UNIVERSAL_MEM_ADDRESS; /* +0x00000014  */
 uint32_t UIR1_IR_UNIVERSAL_SCANCODE_TIME_STAMP_CLK_DIV; /* +0x00000018  */
 uint32_t UIR1_IR_UNIVERSAL_SCANCODE_TIME_STAMP_MEM1; /* +0x0000001c ,RO */
 uint32_t UIR1_IR_UNIVERSAL_SCANCODE_TIME_STAMP_MEM2; /* +0x00000020 ,RO */
 uint32_t pad0[0x005c/4];
 union UIR2_IR_UNIVERSAL_DEBOUNCE_DENOISEReg UIR2_IR_UNIVERSAL_DEBOUNCE_DENOISE; /* +0x00000080  */
 union UIR2_IR_UNIVERSAL_CONFIGReg UIR2_IR_UNIVERSAL_CONFIG; /* +0x00000084  */
 uint32_t UIR2_IR_UNIVERSAL_CLK_DIV; /* +0x00000088 ,RO */
 uint32_t UIR2_IR_UNIVERSAL_TIMEOUT; /* +0x0000008c  */
 uint32_t UIR2_IR_UNIVERSAL_SUBTRACT; /* +0x00000090  */
 union UIR2_IR_UNIVERSAL_MEM_ADDRESSReg UIR2_IR_UNIVERSAL_MEM_ADDRESS; /* +0x00000094  */
 uint32_t UIR2_IR_UNIVERSAL_SCANCODE_TIME_STAMP_CLK_DIV; /* +0x00000098  */
 uint32_t UIR2_IR_UNIVERSAL_SCANCODE_TIME_STAMP_MEM1; /* +0x0000009c ,RO */
 uint32_t UIR2_IR_UNIVERSAL_SCANCODE_TIME_STAMP_MEM2; /* +0x000000a0 ,RO */
 uint32_t pad1[0x0f5c/4];
 union HDMI_CEC_CONFIGReg HDMI_CEC_CONFIG; /* +0x00001000  */
 union HDMI_CEC_STATUSReg HDMI_CEC_STATUS; /* +0x00001004 ,NO_TEST */
 union HDMI_CEC_FOLLOWER_REC_HEADERReg HDMI_CEC_FOLLOWER_REC_HEADER; /* +0x00001008  */
 uint32_t HDMI_CEC_CLK_DIV; /* +0x0000100c ,RO */
 uint32_t HDMI_CEC_SFT; /* +0x00001010  */
 uint32_t HDMI_CEC_START_LO; /* +0x00001014  */
 uint32_t HDMI_CEC_START_HI; /* +0x00001018  */
 uint32_t HDMI_CEC_ZERO_LO; /* +0x0000101c  */
 uint32_t HDMI_CEC_ZERO_HI; /* +0x00001020  */
 uint32_t HDMI_CEC_ONE_LO; /* +0x00001024  */
 uint32_t HDMI_CEC_ONE_HI; /* +0x00001028  */
 uint32_t HDMI_CEC_ACK_WIN_LO; /* +0x0000102c  */
 uint32_t HDMI_CEC_ACK_WIN_HI; /* +0x00001030  */
 uint32_t HDMI_CEC_SAMPLE_DELAY; /* +0x00001034  */
 union HDMI_CEC_RECEIVE_WINReg HDMI_CEC_RECEIVE_WIN; /* +0x00001038  */
 union HDMI_CEC_INIT_XFER_HDRReg HDMI_CEC_INIT_XFER_HDR; /* +0x0000103c  */
 union HDMI_CEC_INIT_XFER_DATA_1_0Reg HDMI_CEC_INIT_XFER_DATA_1_0; /* +0x00001040  */
 union HDMI_CEC_INIT_XFER_DATA_3_2Reg HDMI_CEC_INIT_XFER_DATA_3_2; /* +0x00001044  */
 union HDMI_CEC_INIT_XFER_DATA_5_4Reg HDMI_CEC_INIT_XFER_DATA_5_4; /* +0x00001048  */
 union HDMI_CEC_INIT_XFER_DATA_7_6Reg HDMI_CEC_INIT_XFER_DATA_7_6; /* +0x0000104c  */
 union HDMI_CEC_INIT_XFER_DATA_9_8Reg HDMI_CEC_INIT_XFER_DATA_9_8; /* +0x00001050  */
 union HDMI_CEC_INIT_XFER_DATA_B_AReg HDMI_CEC_INIT_XFER_DATA_B_A; /* +0x00001054  */
 union HDMI_CEC_INIT_XFER_DATA_D_CReg HDMI_CEC_INIT_XFER_DATA_D_C; /* +0x00001058  */
 union HDMI_CEC_INIT_XFER_DATA_F_EReg HDMI_CEC_INIT_XFER_DATA_F_E; /* +0x0000105c  */
 union HDMI_CEC_FOLLOWER_HEADERReg HDMI_CEC_FOLLOWER_HEADER; /* +0x00001060  */
 union HDMI_CEC_FOLLOWER_DATA_1_0Reg HDMI_CEC_FOLLOWER_DATA_1_0; /* +0x00001064  */
 union HDMI_CEC_FOLLOWER_DATA_3_2Reg HDMI_CEC_FOLLOWER_DATA_3_2; /* +0x00001068  */
 union HDMI_CEC_FOLLOWER_DATA_5_4Reg HDMI_CEC_FOLLOWER_DATA_5_4; /* +0x0000106c  */
 union HDMI_CEC_FOLLOWER_DATA_7_6Reg HDMI_CEC_FOLLOWER_DATA_7_6; /* +0x00001070  */
 union HDMI_CEC_FOLLOWER_DATA_9_8Reg HDMI_CEC_FOLLOWER_DATA_9_8; /* +0x00001074  */
 union HDMI_CEC_FOLLOWER_DATA_B_AReg HDMI_CEC_FOLLOWER_DATA_B_A; /* +0x00001078  */
 union HDMI_CEC_FOLLOWER_DATA_D_CReg HDMI_CEC_FOLLOWER_DATA_D_C; /* +0x0000107c  */
 union HDMI_CEC_FOLLOWER_DATA_F_EReg HDMI_CEC_FOLLOWER_DATA_F_E; /* +0x00001080  */
 uint32_t pad2[0x017c/4];
 union I2C_MASTER1_CONFIGReg I2C_MASTER1_CONFIG; /* +0x00001200  */
 union I2C_MASTER1_CLK_DIVReg I2C_MASTER1_CLK_DIV; /* +0x00001204  */
 union I2C_MASTER1_DEV_ADDRReg I2C_MASTER1_DEV_ADDR; /* +0x00001208  */
 union I2C_MASTER1_ADRReg I2C_MASTER1_ADR; /* +0x0000120c  */
 union I2C_MASTER1_DATAOUTReg I2C_MASTER1_DATAOUT; /* +0x00001210  */
 union I2C_MASTER1_DATAINReg I2C_MASTER1_DATAIN; /* +0x00001214  */
 union I2C_MASTER1_STATUSReg I2C_MASTER1_STATUS; /* +0x00001218  */
 union I2C_MASTER1_STARTXFERReg I2C_MASTER1_STARTXFER; /* +0x0000121c ,NO_TEST */
 union I2C_MASTER1_BYTE_CNTReg I2C_MASTER1_BYTE_CNT; /* +0x00001220  */
 union I2C_MASTER1_INTENReg I2C_MASTER1_INTEN; /* +0x00001224  */
 union I2C_MASTER1_INTReg I2C_MASTER1_INT; /* +0x00001228  */
 uint32_t pad3[0x0054/4];
 union I2C_MASTER0_CONFIGReg I2C_MASTER0_CONFIG; /* +0x00001280  */
 union I2C_MASTER0_CLK_DIVReg I2C_MASTER0_CLK_DIV; /* +0x00001284  */
 union I2C_MASTER0_DEV_ADDRReg I2C_MASTER0_DEV_ADDR; /* +0x00001288  */
 union I2C_MASTER0_ADRReg I2C_MASTER0_ADR; /* +0x0000128c  */
 union I2C_MASTER0_DATAOUTReg I2C_MASTER0_DATAOUT; /* +0x00001290  */
 union I2C_MASTER0_DATAINReg I2C_MASTER0_DATAIN; /* +0x00001294  */
 union I2C_MASTER0_STATUSReg I2C_MASTER0_STATUS; /* +0x00001298  */
 union I2C_MASTER0_STARTXFERReg I2C_MASTER0_STARTXFER; /* +0x0000129c ,NO_TEST */
 union I2C_MASTER0_BYTE_CNTReg I2C_MASTER0_BYTE_CNT; /* +0x000012a0  */
 union I2C_MASTER0_INTENReg I2C_MASTER0_INTEN; /* +0x000012a4  */
 union I2C_MASTER0_INTReg I2C_MASTER0_INT; /* +0x000012a8  */
 uint32_t pad4[0x0014/4];
 union I2C_SLAVE_ADDR_REGReg I2C_SLAVE_ADDR_REG; /* +0x000012c0  */
 union I2C_SLAVE_DATAOUTReg I2C_SLAVE_DATAOUT; /* +0x000012c4  */
 union I2C_SLAVE_DATAINReg I2C_SLAVE_DATAIN; /* +0x000012c8  */
 union I2C_SLAVE_STATUSReg I2C_SLAVE_STATUS; /* +0x000012cc  */
 union I2C_SLAVE_INTENReg I2C_SLAVE_INTEN; /* +0x000012d0  */
 union I2C_SLAVE_INTReg I2C_SLAVE_INT; /* +0x000012d4 ,NO_MEM */
 union I2C_SLAVE_BUS_HOLDReg I2C_SLAVE_BUS_HOLD; /* +0x000012d8  */
 uint32_t pad5[0x0024/4];
 union SYS_gpio_dirReg SYS_gpio_dir; /* +0x00001300 ,NO_TEST */
 union SYS_gpio_dataReg SYS_gpio_data; /* +0x00001304 ,NO_TEST */
 uint32_t pad6[0x0028/4];
 union SYS_gpio_irq_selReg SYS_gpio_irq_sel; /* +0x00001330  */
 uint32_t pad7[0x000c/4];
 union SYS_gpio15_pwm_controlReg SYS_gpio15_pwm_control; /* +0x00001340  */
 union SYS_gpio15_pwmReg SYS_gpio15_pwm; /* +0x00001344  */
 union SYS_gpio14_pwmReg SYS_gpio14_pwm; /* +0x00001348  */
 uint32_t pad8[0x0034/4];
 union FIP_COMMANDReg FIP_COMMAND; /* +0x00001380  */
 union FIP_DISPLAY_DATAReg FIP_DISPLAY_DATA; /* +0x00001384  */
 union FIP_LED_DATAReg FIP_LED_DATA; /* +0x00001388  */
 uint32_t FIP_KEY_DATA1; /* +0x0000138c ,RO */
 union FIP_KEY_DATA2Reg FIP_KEY_DATA2; /* +0x00001390 ,RO */
 union FIP_SWITCH_DATAReg FIP_SWITCH_DATA; /* +0x00001394 ,RO */
 union FIP_CONFIGReg FIP_CONFIG; /* +0x00001398  */
 union FIP_INTReg FIP_INT; /* +0x0000139c ,NO_MEM */
 uint32_t pad9[0x0020/4];
 union KEYPAD_ConfigReg KEYPAD_Config; /* +0x000013c0  */
 union KEYPAD_kp_val0Reg KEYPAD_kp_val0; /* +0x000013c4  */
 union KEYPAD_kp_val1Reg KEYPAD_kp_val1; /* +0x000013c8  */
 union KEYPAD_kp_val2Reg KEYPAD_kp_val2; /* +0x000013cc  */
 union KEYPAD_kp_val3Reg KEYPAD_kp_val3; /* +0x000013d0  */
 uint32_t KEYPAD_sys_time; /* +0x000013d4 ,NO_TEST */
 uint32_t pad10[0x0028/4];
 uint32_t watchdog_counter; /* +0x00001400 ,NO_TEST */
 union watchdog_configurationReg watchdog_configuration; /* +0x00001404  */
};
