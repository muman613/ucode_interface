/* autogenerated with parsecfg: do not edit. */

 /* workaround clash with C language: int */
 /* workaround clash with C language: int */
union loadReg {
 struct { uint32_t

 /* sorting 1 */
#define load_load_value_SHIFT 0
#define load_load_value_WIDTH 16

 load_value:16, /*[15:0]  */
 hole0:16;
 } bits;

 uint32_t value;
};

union ctrlReg {
 struct { uint32_t

 /* sorting 3 */
#define ctrl_tick_select_SHIFT 0
#define ctrl_tick_select_WIDTH 1
#define ctrl_mode_SHIFT 6
#define ctrl_mode_WIDTH 1
#define ctrl_enable_SHIFT 7
#define ctrl_enable_WIDTH 1

 tick_select:1, /*[0:0]  */
 hole0:5,
 mode:1, /*[6:6]  */
 enable:1, /*[7:7] ,NO_MEM */
 hole1:24;
 } bits;

 uint32_t value;
};

union counterReg {
 struct { uint32_t

 /* sorting 1 */
#define counter_counter_value_SHIFT 0
#define counter_counter_value_WIDTH 16

 counter_value:16, /*[15:0]  */
 hole0:16;
 } bits;

 uint32_t value;
};

union IntReg {
 struct { uint32_t

 /* sorting 1 */
#define Int_int_clear_SHIFT 31
#define Int_int_clear_WIDTH 1

 hole0:31,
 int_clear:1; /*[31:31]  */
 } bits;

 uint32_t value;
};

struct timer {
 union loadReg load; /* +0x00000000  */
 union counterReg counter; /* +0x00000004 ,NO_TEST */
 union ctrlReg ctrl; /* +0x00000008  */
 union IntReg Int; /* +0x0000000c ,NO_TEST */
};
