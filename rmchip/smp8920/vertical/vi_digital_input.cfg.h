/* autogenerated with parsecfg: do not edit. */

union vi_digital_input_vt_syncReg {
 struct { uint32_t

 /* sorting 3 */
#define vi_digital_input_vt_sync_er_total_size_SHIFT 0
#define vi_digital_input_vt_sync_er_total_size_WIDTH 12
#define vi_digital_input_vt_sync_sync_width_SHIFT 16
#define vi_digital_input_vt_sync_sync_width_WIDTH 13
#define vi_digital_input_vt_sync_p_SHIFT 31
#define vi_digital_input_vt_sync_p_WIDTH 1

 er_total_size:12, /*[11:0]  */
 hole0:4,
 sync_width:13, /*[28:16]  */
 hole1:2,
 p:1; /*[31:31]  */
 } bits;

 uint32_t value;
};

union vi_digital_input_vbi_sizeReg {
 struct { uint32_t

 /* sorting 2 */
#define vi_digital_input_vbi_size_xsize_SHIFT 0
#define vi_digital_input_vbi_size_xsize_WIDTH 13
#define vi_digital_input_vbi_size_ysize_SHIFT 16
#define vi_digital_input_vbi_size_ysize_WIDTH 12

 xsize:13, /*[12:0]  */
 hole0:3,
 ysize:12, /*[27:16]  */
 hole1:4;
 } bits;

 uint32_t value;
};

union vi_digital_input_vbi_modeReg {
 struct { uint32_t

 /* sorting 2 */
#define vi_digital_input_vbi_mode_prog_int_mode_SHIFT 0
#define vi_digital_input_vbi_mode_prog_int_mode_WIDTH 2
#define vi_digital_input_vbi_mode_enable_SHIFT 4
#define vi_digital_input_vbi_mode_enable_WIDTH 1

 prog_int_mode:2, /*[1:0]  */
 hole0:2,
 enable:1, /*[4:4]  */
 hole1:27;
 } bits;

 uint32_t value;
};

union vi_digital_input_top_vbiReg {
 struct { uint32_t

 /* sorting 2 */
#define vi_digital_input_top_vbi_line_enable_SHIFT 0
#define vi_digital_input_top_vbi_line_enable_WIDTH 24
#define vi_digital_input_top_vbi_offset_SHIFT 24
#define vi_digital_input_top_vbi_offset_WIDTH 6

 line_enable:24, /*[23:0]  */
 offset:6, /*[29:24]  */
 hole0:2;
 } bits;

 uint32_t value;
};

union vi_digital_input_sync_coordReg {
 struct { uint32_t

 /* sorting 2 */
#define vi_digital_input_sync_coord_vsync_fine_adjust_SHIFT 0
#define vi_digital_input_sync_coord_vsync_fine_adjust_WIDTH 16
#define vi_digital_input_sync_coord_top_field_height_SHIFT 16
#define vi_digital_input_sync_coord_top_field_height_WIDTH 13

 vsync_fine_adjust:16, /*[15:0]  */
 top_field_height:13, /*[28:16]  */
 hole0:3;
 } bits;

 uint32_t value;
};

union vi_digital_input_hz_syncReg {
 struct { uint32_t

 /* sorting 3 */
#define vi_digital_input_hz_sync_or_total_size_SHIFT 0
#define vi_digital_input_hz_sync_or_total_size_WIDTH 12
#define vi_digital_input_hz_sync_sync_width_SHIFT 16
#define vi_digital_input_hz_sync_sync_width_WIDTH 12
#define vi_digital_input_hz_sync_p_SHIFT 31
#define vi_digital_input_hz_sync_p_WIDTH 1

 or_total_size:12, /*[11:0]  */
 hole0:4,
 sync_width:12, /*[27:16]  */
 hole1:3,
 p:1; /*[31:31]  */
 } bits;

 uint32_t value;
};

union vi_digital_input_formatReg {
 struct { uint32_t

 /* sorting 16 */
#define vi_digital_input_format_output_format_SHIFT 2
#define vi_digital_input_format_output_format_WIDTH 1
#define vi_digital_input_format_input_format_SHIFT 3
#define vi_digital_input_format_input_format_WIDTH 3
#define vi_digital_input_format_csc_SHIFT 6
#define vi_digital_input_format_csc_WIDTH 3
#define vi_digital_input_format_prot_SHIFT 9
#define vi_digital_input_format_prot_WIDTH 2
#define vi_digital_input_format_co_SHIFT 12
#define vi_digital_input_format_co_WIDTH 1
#define vi_digital_input_format_sync_source_SHIFT 13
#define vi_digital_input_format_sync_source_WIDTH 3
#define vi_digital_input_format_fi_SHIFT 16
#define vi_digital_input_format_fi_WIDTH 1
#define vi_digital_input_format_pixel_lost_SHIFT 17
#define vi_digital_input_format_pixel_lost_WIDTH 1
#define vi_digital_input_format_vbi_SHIFT 18
#define vi_digital_input_format_vbi_WIDTH 1
#define vi_digital_input_format_win_en_SHIFT 19
#define vi_digital_input_format_win_en_WIDTH 1
#define vi_digital_input_format_flags_SHIFT 20
#define vi_digital_input_format_flags_WIDTH 4
#define vi_digital_input_format_te_SHIFT 24
#define vi_digital_input_format_te_WIDTH 1
#define vi_digital_input_format_double_width_SHIFT 25
#define vi_digital_input_format_double_width_WIDTH 1
#define vi_digital_input_format_vd_SHIFT 26
#define vi_digital_input_format_vd_WIDTH 1
#define vi_digital_input_format_double_edge_invert_SHIFT 27
#define vi_digital_input_format_double_edge_invert_WIDTH 1
#define vi_digital_input_format_double_edge_SHIFT 28
#define vi_digital_input_format_double_edge_WIDTH 1

 hole0:2,
 output_format:1, /*[2:2]  */
 input_format:3, /*[5:3]  */
 csc:3, /*[8:6]  */
 prot:2, /*[10:9]  */
 hole1:1,
 co:1, /*[12:12]  */
 sync_source:3, /*[15:13]  */
 fi:1, /*[16:16]  */
 pixel_lost:1, /*[17:17]  */
 vbi:1, /*[18:18]  */
 win_en:1, /*[19:19]  */
 flags:4, /*[23:20]  */
 te:1, /*[24:24]  */
 double_width:1, /*[25:25]  */
 vd:1, /*[26:26]  */
 double_edge_invert:1, /*[27:27]  */
 double_edge:1, /*[28:28]  */
 hole2:3;
 } bits;

 uint32_t value;
};

union vi_digital_input_data_sizeReg {
 struct { uint32_t

 /* sorting 2 */
#define vi_digital_input_data_size_xsize_SHIFT 0
#define vi_digital_input_data_size_xsize_WIDTH 12
#define vi_digital_input_data_size_ysize_SHIFT 16
#define vi_digital_input_data_size_ysize_WIDTH 12

 xsize:12, /*[11:0]  */
 hole0:4,
 ysize:12, /*[27:16]  */
 hole1:4;
 } bits;

 uint32_t value;
};

union vi_digital_input_data_YoffsetReg {
 struct { uint32_t

 /* sorting 2 */
#define vi_digital_input_data_Yoffset_top_SHIFT 0
#define vi_digital_input_data_Yoffset_top_WIDTH 12
#define vi_digital_input_data_Yoffset_bottom_SHIFT 16
#define vi_digital_input_data_Yoffset_bottom_WIDTH 12

 top:12, /*[11:0]  */
 hole0:4,
 bottom:12, /*[27:16]  */
 hole1:4;
 } bits;

 uint32_t value;
};

union vi_digital_input_data_XoffsetReg {
 struct { uint32_t

 /* sorting 1 */
#define vi_digital_input_data_Xoffset_vi_digital_input_data_xoffset_SHIFT 0
#define vi_digital_input_data_Xoffset_vi_digital_input_data_xoffset_WIDTH 12

 vi_digital_input_data_xoffset:12, /*[11:0]  */
 hole0:20;
 } bits;

 uint32_t value;
};

union vi_digital_input_bot_vbiReg {
 struct { uint32_t

 /* sorting 2 */
#define vi_digital_input_bot_vbi_line_enable_SHIFT 0
#define vi_digital_input_bot_vbi_line_enable_WIDTH 24
#define vi_digital_input_bot_vbi_offset_SHIFT 24
#define vi_digital_input_bot_vbi_offset_WIDTH 6

 line_enable:24, /*[23:0]  */
 offset:6, /*[29:24]  */
 hole0:2;
 } bits;

 uint32_t value;
};

union vi_digital_in_windowReg {
 struct { uint32_t

 /* sorting 4 */
#define vi_digital_in_window_window_index_SHIFT 0
#define vi_digital_in_window_window_index_WIDTH 12
#define vi_digital_in_window_fi_SHIFT 15
#define vi_digital_in_window_fi_WIDTH 1
#define vi_digital_in_window_window_width_SHIFT 16
#define vi_digital_in_window_window_width_WIDTH 12
#define vi_digital_in_window_fw_SHIFT 31
#define vi_digital_in_window_fw_WIDTH 1

 window_index:12, /*[11:0]  */
 hole0:3,
 fi:1, /*[15:15]  */
 window_width:12, /*[27:16]  */
 hole1:3,
 fw:1; /*[31:31]  */
 } bits;

 uint32_t value;
};

union vi_digital_in_syncReg {
 struct { uint32_t

 /* sorting 2 */
#define vi_digital_in_sync_hs_offset_SHIFT 0
#define vi_digital_in_sync_hs_offset_WIDTH 12
#define vi_digital_in_sync_vs_offset_SHIFT 12
#define vi_digital_in_sync_vs_offset_WIDTH 12

 hs_offset:12, /*[11:0]  */
 vs_offset:12, /*[23:12]  */
 hole0:8;
 } bits;

 uint32_t value;
};

struct vi_digital_input {
 union vi_digital_input_formatReg vi_digital_input_format; /* +0x00000000  */
 union vi_digital_input_data_sizeReg vi_digital_input_data_size; /* +0x00000004  */
 union vi_digital_input_data_XoffsetReg vi_digital_input_data_Xoffset; /* +0x00000008  */
 union vi_digital_input_data_YoffsetReg vi_digital_input_data_Yoffset; /* +0x0000000c  */
 union vi_digital_input_hz_syncReg vi_digital_input_hz_sync; /* +0x00000010  */
 union vi_digital_input_vt_syncReg vi_digital_input_vt_sync; /* +0x00000014  */
 union vi_digital_input_sync_coordReg vi_digital_input_sync_coord; /* +0x00000018  */
 union vi_digital_input_top_vbiReg vi_digital_input_top_vbi; /* +0x0000001c  */
 union vi_digital_input_bot_vbiReg vi_digital_input_bot_vbi; /* +0x00000020  */
 uint32_t vi_digital_input_counters; /* +0x00000024  */
 uint32_t pad0[0x0004/4];
 uint32_t vi_digital_input_vbi_vsm; /* +0x0000002c  */
 union vi_digital_input_vbi_sizeReg vi_digital_input_vbi_size; /* +0x00000030  */
 union vi_digital_input_vbi_modeReg vi_digital_input_vbi_mode; /* +0x00000034  */
 uint32_t vi_digital_in_counters2; /* +0x00000038  */
 union vi_digital_in_syncReg vi_digital_in_sync; /* +0x0000003c  */
 union vi_digital_in_windowReg vi_digital_in_window; /* +0x00000040  */
 uint32_t vi_digital_input_tick_counter; /* +0x00000044  */
};
