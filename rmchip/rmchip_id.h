/*****************************************
 Copyright (c) 2004-2010
 Sigma Designs, Inc. All Rights Reserved
 Proprietary and Confidential
 *****************************************/
/**
  @file   rmchip_id.h
  @brief

  @author Sebastian Frias
  @date   2010-08-19
*/

#ifndef __RMCHIP_ID_H__
#define __RMCHIP_ID_H__


#ifndef RMCHIP_ID
#error RMCHIP_ID is not set
#endif

#ifndef RMCHIP_REVISION
#error RMCHIP_REVISION is not set
#endif



#define RMCHIP_ID_SMP8644 8644
#define RMCHIP_ID_SMP8642 8642
#define RMCHIP_ID_SMP8646 8646

#define RMCHIP_ID_SMP8654 8654
#define RMCHIP_ID_SMP8652 8652
#define RMCHIP_ID_SMP8656 8656
#define RMCHIP_ID_SMP8670 8670
#define RMCHIP_ID_SMP8672 8672
#define RMCHIP_ID_SMP8672B 0x8672B
#define RMCHIP_ID_SMP8674 8674
#define RMCHIP_ID_SMP8680 8680
#define RMCHIP_ID_SMP8682 8682
#define RMCHIP_ID_SMP868A 0x868A
#define RMCHIP_ID_SMP8734 8734
#define RMCHIP_ID_SMP8758 8758
#define RMCHIP_ID_SMP8756 8756
#define RMCHIP_ID_SMP8760 8760

#define RMCHIP_ID_SMP8910 8910
#define RMCHIP_ID_SMP8920 8920

#define RMCHIP_ID_DTVSX6B 0x6B
#define RMCHIP_ID_DTVSX7  0x70
#define RMCHIP_ID_DTVSX8  0x80

#if (RMCHIP_ID == RMCHIP_ID_SMP8644)
#define RMCHIP_ID_TOKEN SMP8644
#elif (RMCHIP_ID == RMCHIP_ID_SMP8642)
#define RMCHIP_ID_TOKEN SMP8642
#elif (RMCHIP_ID == RMCHIP_ID_SMP8646)
#define RMCHIP_ID_TOKEN SMP8646
#elif (RMCHIP_ID == RMCHIP_ID_SMP8654)
#define RMCHIP_ID_TOKEN SMP8654
#elif (RMCHIP_ID == RMCHIP_ID_SMP8652)
#define RMCHIP_ID_TOKEN SMP8652
#elif (RMCHIP_ID == RMCHIP_ID_SMP8656)
#define RMCHIP_ID_TOKEN SMP8656
#elif (RMCHIP_ID == RMCHIP_ID_SMP8670)
#define RMCHIP_ID_TOKEN SMP8670
#elif (RMCHIP_ID == RMCHIP_ID_SMP8672)
#define RMCHIP_ID_TOKEN SMP8672
#elif (RMCHIP_ID == RMCHIP_ID_SMP8672B)
#define RMCHIP_ID_TOKEN SMP8672B
#elif (RMCHIP_ID == RMCHIP_ID_SMP8674)
#define RMCHIP_ID_TOKEN SMP8674
#elif (RMCHIP_ID == RMCHIP_ID_SMP8680)
#define RMCHIP_ID_TOKEN SMP8680
#elif (RMCHIP_ID == RMCHIP_ID_SMP8682)
#define RMCHIP_ID_TOKEN SMP8682
#elif (RMCHIP_ID == RMCHIP_ID_SMP868A)
#define RMCHIP_ID_TOKEN SMP868A
#elif (RMCHIP_ID == RMCHIP_ID_SMP8734)
#define RMCHIP_ID_TOKEN SMP8734
#elif (RMCHIP_ID == RMCHIP_ID_SMP8758)
#define RMCHIP_ID_TOKEN SMP8758
#elif (RMCHIP_ID == RMCHIP_ID_SMP8756)
#define RMCHIP_ID_TOKEN SMP8756
#elif (RMCHIP_ID == RMCHIP_ID_SMP8760)
#define RMCHIP_ID_TOKEN SMP8760
#elif (RMCHIP_ID == RMCHIP_ID_SMP8910)
#define RMCHIP_ID_TOKEN SMP8910
#elif (RMCHIP_ID == RMCHIP_ID_SMP8920)
#define RMCHIP_ID_TOKEN SMP8920
#elif (RMCHIP_ID == RMCHIP_ID_DTVSX6B)
#define RMCHIP_ID_TOKEN DTVSX6B
#elif (RMCHIP_ID == RMCHIP_ID_DTVSX7 )
#define RMCHIP_ID_TOKEN DTVSX7
#elif (RMCHIP_ID == RMCHIP_ID_DTVSX8 )
#define RMCHIP_ID_TOKEN DTVSX8
#else
#error that RMCHIP_ID not yet handled 
#endif

#define RMCHIP_ID_STRING STR(RMCHIP_ID_TOKEN)
#define RMCHIP_REVISION_STRING STR(RMCHIP_REVISION)

#define RMCHIP_ARCH_ARM_TOKEN         1000
#define RMCHIP_ARCH_MIPS_4Ke_TOKEN    2000
#define RMCHIP_ARCH_MIPS_24Kf_TOKEN   2001
#define RMCHIP_ARCH_MIPS_74Kf_TOKEN   2002
#define RMCHIP_ARCH_MIPS_1004Kf_TOKEN 2003

#define RMCHIP_GPU_ARCH_NONE_TOKEN      1000
#define RMCHIP_GPU_ARCH_SGX520_TOKEN    2001
#define RMCHIP_GPU_ARCH_SGX531_TOKEN    2002
#define RMCHIP_GPU_ARCH_SGX544MP1_TOKEN    2003
#define RMCHIP_GPU_ARCH_MALI400MP2_TOKEN    2004
#define RMCHIP_GPU_ARCH_MALI400MP4_TOKEN    2005


// not a boolean. Future arch will be 2,3,4 etc
//#define SOC_TANGO   0
//#define SOC_CALYPSO 1
//#define SOC_PANDA   2 /* not sigma */
//#define SOC_PMAN    3

#endif // __RMCHIP_ID_H__
