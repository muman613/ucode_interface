/* autogenerated with parsecfg: do not edit. */

union vo_vxp_NRDI_XCNR_CONFIGReg {
 struct { uint32_t

 /* sorting 5 */
#define vo_vxp_NRDI_XCNR_CONFIG_stat_en_SHIFT 0
#define vo_vxp_NRDI_XCNR_CONFIG_stat_en_WIDTH 1
#define vo_vxp_NRDI_XCNR_CONFIG_xcnr_en_SHIFT 1
#define vo_vxp_NRDI_XCNR_CONFIG_xcnr_en_WIDTH 1
#define vo_vxp_NRDI_XCNR_CONFIG_xcnr_mode_SHIFT 2
#define vo_vxp_NRDI_XCNR_CONFIG_xcnr_mode_WIDTH 1
#define vo_vxp_NRDI_XCNR_CONFIG_xcnr_opp_sign_det_en_SHIFT 3
#define vo_vxp_NRDI_XCNR_CONFIG_xcnr_opp_sign_det_en_WIDTH 1
#define vo_vxp_NRDI_XCNR_CONFIG_xcnr_min_chroma_threshold_SHIFT 4
#define vo_vxp_NRDI_XCNR_CONFIG_xcnr_min_chroma_threshold_WIDTH 9

 stat_en:1, /*[0:0]  */
 xcnr_en:1, /*[1:1]  */
 xcnr_mode:1, /*[2:2]  */
 xcnr_opp_sign_det_en:1, /*[3:3]  */
 xcnr_min_chroma_threshold:9, /*[12:4]  */
 hole0:19;
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_UP_FILM_MODEReg {
 struct { uint32_t

 /* sorting 2 */
#define vo_vxp_NRDI_UP_FILM_MODE_sequence_SHIFT 0
#define vo_vxp_NRDI_UP_FILM_MODE_sequence_WIDTH 8
#define vo_vxp_NRDI_UP_FILM_MODE_lock_SHIFT 8
#define vo_vxp_NRDI_UP_FILM_MODE_lock_WIDTH 1

 sequence:8, /*[7:0]  */
 lock:1, /*[8:8]  */
 hole0:23;
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_SUM_MOTION_4FReg {
 struct { uint32_t

 /* sorting 1 */
#define vo_vxp_NRDI_SUM_MOTION_4F_vo_vxp_nrdi_sum_motion_4f_SHIFT 0
#define vo_vxp_NRDI_SUM_MOTION_4F_vo_vxp_nrdi_sum_motion_4f_WIDTH 21

 vo_vxp_nrdi_sum_motion_4f:21, /*[20:0]  */
 hole0:11;
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_SUM_MOTION_3FReg {
 struct { uint32_t

 /* sorting 1 */
#define vo_vxp_NRDI_SUM_MOTION_3F_vo_vxp_nrdi_sum_motion_3f_SHIFT 0
#define vo_vxp_NRDI_SUM_MOTION_3F_vo_vxp_nrdi_sum_motion_3f_WIDTH 21

 vo_vxp_nrdi_sum_motion_3f:21, /*[20:0]  */
 hole0:11;
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_SUM_MOTION_2FReg {
 struct { uint32_t

 /* sorting 1 */
#define vo_vxp_NRDI_SUM_MOTION_2F_vo_vxp_nrdi_sum_motion_2f_SHIFT 0
#define vo_vxp_NRDI_SUM_MOTION_2F_vo_vxp_nrdi_sum_motion_2f_WIDTH 21

 vo_vxp_nrdi_sum_motion_2f:21, /*[20:0]  */
 hole0:11;
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_SUM_MOTION_1FReg {
 struct { uint32_t

 /* sorting 1 */
#define vo_vxp_NRDI_SUM_MOTION_1F_vo_vxp_nrdi_sum_motion_1f_SHIFT 0
#define vo_vxp_NRDI_SUM_MOTION_1F_vo_vxp_nrdi_sum_motion_1f_WIDTH 21

 vo_vxp_nrdi_sum_motion_1f:21, /*[20:0]  */
 hole0:11;
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_SPEED_FILM_THRESHOLDReg {
 struct { uint32_t

 /* sorting 5 */
#define vo_vxp_NRDI_SPEED_FILM_THRESHOLD_speed_detection_threshold1_SHIFT 0
#define vo_vxp_NRDI_SPEED_FILM_THRESHOLD_speed_detection_threshold1_WIDTH 6
#define vo_vxp_NRDI_SPEED_FILM_THRESHOLD_speed_detection_threshold2_SHIFT 6
#define vo_vxp_NRDI_SPEED_FILM_THRESHOLD_speed_detection_threshold2_WIDTH 7
#define vo_vxp_NRDI_SPEED_FILM_THRESHOLD_film_mode_motion_threshold_SHIFT 13
#define vo_vxp_NRDI_SPEED_FILM_THRESHOLD_film_mode_motion_threshold_WIDTH 6
#define vo_vxp_NRDI_SPEED_FILM_THRESHOLD_film_mode_alias_threshold_SHIFT 19
#define vo_vxp_NRDI_SPEED_FILM_THRESHOLD_film_mode_alias_threshold_WIDTH 7
#define vo_vxp_NRDI_SPEED_FILM_THRESHOLD_film_mode_n2_hist_threshold_SHIFT 26
#define vo_vxp_NRDI_SPEED_FILM_THRESHOLD_film_mode_n2_hist_threshold_WIDTH 4

 speed_detection_threshold1:6, /*[5:0]  */
 speed_detection_threshold2:7, /*[12:6]  */
 film_mode_motion_threshold:6, /*[18:13]  */
 film_mode_alias_threshold:7, /*[25:19]  */
 film_mode_n2_hist_threshold:4, /*[29:26]  */
 hole0:2;
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_SAD_SEQ_I1Reg {
 struct { uint32_t

 /* sorting 1 */
#define vo_vxp_NRDI_SAD_SEQ_I1_vo_vxp_nrdi_sad_seq_i1_SHIFT 0
#define vo_vxp_NRDI_SAD_SEQ_I1_vo_vxp_nrdi_sad_seq_i1_WIDTH 20

 vo_vxp_nrdi_sad_seq_i1:20, /*[19:0]  */
 hole0:12;
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_SAD_SEQ_I0_4Reg {
 struct { uint32_t

 /* sorting 1 */
#define vo_vxp_NRDI_SAD_SEQ_I0_4_vo_vxp_nrdi_sad_seq_i0_3_SHIFT 0
#define vo_vxp_NRDI_SAD_SEQ_I0_4_vo_vxp_nrdi_sad_seq_i0_3_WIDTH 30

 vo_vxp_nrdi_sad_seq_i0_3:30, /*[29:0]  */
 hole0:2;
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_SAD_SEQ_I0_3Reg {
 struct { uint32_t

 /* sorting 1 */
#define vo_vxp_NRDI_SAD_SEQ_I0_3_vo_vxp_nrdi_sad_seq_i0_2_SHIFT 0
#define vo_vxp_NRDI_SAD_SEQ_I0_3_vo_vxp_nrdi_sad_seq_i0_2_WIDTH 30

 vo_vxp_nrdi_sad_seq_i0_2:30, /*[29:0]  */
 hole0:2;
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_SAD_SEQ_I0_2Reg {
 struct { uint32_t

 /* sorting 1 */
#define vo_vxp_NRDI_SAD_SEQ_I0_2_vo_vxp_nrdi_sad_seq_i0_1_SHIFT 0
#define vo_vxp_NRDI_SAD_SEQ_I0_2_vo_vxp_nrdi_sad_seq_i0_1_WIDTH 30

 vo_vxp_nrdi_sad_seq_i0_1:30, /*[29:0]  */
 hole0:2;
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_SAD_SEQ_I0_1Reg {
 struct { uint32_t

 /* sorting 1 */
#define vo_vxp_NRDI_SAD_SEQ_I0_1_vo_vxp_nrdi_sad_seq_i0_0_SHIFT 0
#define vo_vxp_NRDI_SAD_SEQ_I0_1_vo_vxp_nrdi_sad_seq_i0_0_WIDTH 30

 vo_vxp_nrdi_sad_seq_i0_0:30, /*[29:0]  */
 hole0:2;
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_SAD_ARRAY_8Reg {
 struct { uint32_t

 /* sorting 1 */
#define vo_vxp_NRDI_SAD_ARRAY_8_vo_vxp_nrdi_sad_array14_SHIFT 0
#define vo_vxp_NRDI_SAD_ARRAY_8_vo_vxp_nrdi_sad_array14_WIDTH 16

 vo_vxp_nrdi_sad_array14:16, /*[15:0]  */
 hole0:16;
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_SAD_ARRAY_7Reg {
 struct { uint32_t

 /* sorting 2 */
#define vo_vxp_NRDI_SAD_ARRAY_7_y12_SHIFT 0
#define vo_vxp_NRDI_SAD_ARRAY_7_y12_WIDTH 16
#define vo_vxp_NRDI_SAD_ARRAY_7_y13_SHIFT 16
#define vo_vxp_NRDI_SAD_ARRAY_7_y13_WIDTH 16

 y12:16, /*[15:0]  */
 y13:16; /*[31:16]  */
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_SAD_ARRAY_6Reg {
 struct { uint32_t

 /* sorting 2 */
#define vo_vxp_NRDI_SAD_ARRAY_6_y10_SHIFT 0
#define vo_vxp_NRDI_SAD_ARRAY_6_y10_WIDTH 16
#define vo_vxp_NRDI_SAD_ARRAY_6_y11_SHIFT 16
#define vo_vxp_NRDI_SAD_ARRAY_6_y11_WIDTH 16

 y10:16, /*[15:0]  */
 y11:16; /*[31:16]  */
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_SAD_ARRAY_5Reg {
 struct { uint32_t

 /* sorting 2 */
#define vo_vxp_NRDI_SAD_ARRAY_5_y8_SHIFT 0
#define vo_vxp_NRDI_SAD_ARRAY_5_y8_WIDTH 16
#define vo_vxp_NRDI_SAD_ARRAY_5_y9_SHIFT 16
#define vo_vxp_NRDI_SAD_ARRAY_5_y9_WIDTH 16

 y8:16, /*[15:0]  */
 y9:16; /*[31:16]  */
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_SAD_ARRAY_4Reg {
 struct { uint32_t

 /* sorting 2 */
#define vo_vxp_NRDI_SAD_ARRAY_4_y6_SHIFT 0
#define vo_vxp_NRDI_SAD_ARRAY_4_y6_WIDTH 16
#define vo_vxp_NRDI_SAD_ARRAY_4_y7_SHIFT 16
#define vo_vxp_NRDI_SAD_ARRAY_4_y7_WIDTH 16

 y6:16, /*[15:0]  */
 y7:16; /*[31:16]  */
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_SAD_ARRAY_3Reg {
 struct { uint32_t

 /* sorting 2 */
#define vo_vxp_NRDI_SAD_ARRAY_3_y4_SHIFT 0
#define vo_vxp_NRDI_SAD_ARRAY_3_y4_WIDTH 16
#define vo_vxp_NRDI_SAD_ARRAY_3_y5_SHIFT 16
#define vo_vxp_NRDI_SAD_ARRAY_3_y5_WIDTH 16

 y4:16, /*[15:0]  */
 y5:16; /*[31:16]  */
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_SAD_ARRAY_2Reg {
 struct { uint32_t

 /* sorting 2 */
#define vo_vxp_NRDI_SAD_ARRAY_2_y2_SHIFT 0
#define vo_vxp_NRDI_SAD_ARRAY_2_y2_WIDTH 16
#define vo_vxp_NRDI_SAD_ARRAY_2_y3_SHIFT 16
#define vo_vxp_NRDI_SAD_ARRAY_2_y3_WIDTH 16

 y2:16, /*[15:0]  */
 y3:16; /*[31:16]  */
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_SAD_ARRAY_1Reg {
 struct { uint32_t

 /* sorting 2 */
#define vo_vxp_NRDI_SAD_ARRAY_1_y0_SHIFT 0
#define vo_vxp_NRDI_SAD_ARRAY_1_y0_WIDTH 16
#define vo_vxp_NRDI_SAD_ARRAY_1_y1_SHIFT 16
#define vo_vxp_NRDI_SAD_ARRAY_1_y1_WIDTH 16

 y0:16, /*[15:0]  */
 y1:16; /*[31:16]  */
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_RASTER_SIZEReg {
 struct { uint32_t

 /* sorting 2 */
#define vo_vxp_NRDI_RASTER_SIZE_h_active_size_SHIFT 0
#define vo_vxp_NRDI_RASTER_SIZE_h_active_size_WIDTH 12
#define vo_vxp_NRDI_RASTER_SIZE_v_active_size_SHIFT 16
#define vo_vxp_NRDI_RASTER_SIZE_v_active_size_WIDTH 12

 h_active_size:12, /*[11:0]  */
 hole0:4,
 v_active_size:12, /*[27:16]  */
 hole1:4;
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_NR_CONFIG_4Reg {
 struct { uint32_t

 /* sorting 8 */
#define vo_vxp_NRDI_NR_CONFIG_4_n8_SHIFT 0
#define vo_vxp_NRDI_NR_CONFIG_4_n8_WIDTH 4
#define vo_vxp_NRDI_NR_CONFIG_4_n9_SHIFT 4
#define vo_vxp_NRDI_NR_CONFIG_4_n9_WIDTH 4
#define vo_vxp_NRDI_NR_CONFIG_4_n10_SHIFT 8
#define vo_vxp_NRDI_NR_CONFIG_4_n10_WIDTH 4
#define vo_vxp_NRDI_NR_CONFIG_4_n11_SHIFT 12
#define vo_vxp_NRDI_NR_CONFIG_4_n11_WIDTH 4
#define vo_vxp_NRDI_NR_CONFIG_4_n12_SHIFT 16
#define vo_vxp_NRDI_NR_CONFIG_4_n12_WIDTH 4
#define vo_vxp_NRDI_NR_CONFIG_4_n13_SHIFT 20
#define vo_vxp_NRDI_NR_CONFIG_4_n13_WIDTH 4
#define vo_vxp_NRDI_NR_CONFIG_4_n14_SHIFT 24
#define vo_vxp_NRDI_NR_CONFIG_4_n14_WIDTH 4
#define vo_vxp_NRDI_NR_CONFIG_4_n15_SHIFT 28
#define vo_vxp_NRDI_NR_CONFIG_4_n15_WIDTH 4

 n8:4, /*[3:0]  */
 n9:4, /*[7:4]  */
 n10:4, /*[11:8]  */
 n11:4, /*[15:12]  */
 n12:4, /*[19:16]  */
 n13:4, /*[23:20]  */
 n14:4, /*[27:24]  */
 n15:4; /*[31:28]  */
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_NR_CONFIG_3Reg {
 struct { uint32_t

 /* sorting 8 */
#define vo_vxp_NRDI_NR_CONFIG_3_n0_SHIFT 0
#define vo_vxp_NRDI_NR_CONFIG_3_n0_WIDTH 4
#define vo_vxp_NRDI_NR_CONFIG_3_n1_SHIFT 4
#define vo_vxp_NRDI_NR_CONFIG_3_n1_WIDTH 4
#define vo_vxp_NRDI_NR_CONFIG_3_n2_SHIFT 8
#define vo_vxp_NRDI_NR_CONFIG_3_n2_WIDTH 4
#define vo_vxp_NRDI_NR_CONFIG_3_n3_SHIFT 12
#define vo_vxp_NRDI_NR_CONFIG_3_n3_WIDTH 4
#define vo_vxp_NRDI_NR_CONFIG_3_n4_SHIFT 16
#define vo_vxp_NRDI_NR_CONFIG_3_n4_WIDTH 4
#define vo_vxp_NRDI_NR_CONFIG_3_n5_SHIFT 20
#define vo_vxp_NRDI_NR_CONFIG_3_n5_WIDTH 4
#define vo_vxp_NRDI_NR_CONFIG_3_n6_SHIFT 24
#define vo_vxp_NRDI_NR_CONFIG_3_n6_WIDTH 4
#define vo_vxp_NRDI_NR_CONFIG_3_n7_SHIFT 28
#define vo_vxp_NRDI_NR_CONFIG_3_n7_WIDTH 4

 n0:4, /*[3:0]  */
 n1:4, /*[7:4]  */
 n2:4, /*[11:8]  */
 n3:4, /*[15:12]  */
 n4:4, /*[19:16]  */
 n5:4, /*[23:20]  */
 n6:4, /*[27:24]  */
 n7:4; /*[31:28]  */
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_NR_CONFIG_2Reg {
 struct { uint32_t

 /* sorting 4 */
#define vo_vxp_NRDI_NR_CONFIG_2_nr2d_tclip_SHIFT 0
#define vo_vxp_NRDI_NR_CONFIG_2_nr2d_tclip_WIDTH 6
#define vo_vxp_NRDI_NR_CONFIG_2_motion_threshold_y_SHIFT 16
#define vo_vxp_NRDI_NR_CONFIG_2_motion_threshold_y_WIDTH 4
#define vo_vxp_NRDI_NR_CONFIG_2_motion_threshold_c_SHIFT 20
#define vo_vxp_NRDI_NR_CONFIG_2_motion_threshold_c_WIDTH 4
#define vo_vxp_NRDI_NR_CONFIG_2_nr3d_tdiff_SHIFT 24
#define vo_vxp_NRDI_NR_CONFIG_2_nr3d_tdiff_WIDTH 7

 nr2d_tclip:6, /*[5:0]  */
 hole0:10,
 motion_threshold_y:4, /*[19:16]  */
 motion_threshold_c:4, /*[23:20]  */
 nr3d_tdiff:7, /*[30:24]  */
 hole1:1;
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_NR_CONFIG_1Reg {
 struct { uint32_t

 /* sorting 4 */
#define vo_vxp_NRDI_NR_CONFIG_1_l0_SHIFT 0
#define vo_vxp_NRDI_NR_CONFIG_1_l0_WIDTH 5
#define vo_vxp_NRDI_NR_CONFIG_1_l1_SHIFT 8
#define vo_vxp_NRDI_NR_CONFIG_1_l1_WIDTH 5
#define vo_vxp_NRDI_NR_CONFIG_1_l2_SHIFT 16
#define vo_vxp_NRDI_NR_CONFIG_1_l2_WIDTH 5
#define vo_vxp_NRDI_NR_CONFIG_1_l3_SHIFT 24
#define vo_vxp_NRDI_NR_CONFIG_1_l3_WIDTH 5

 l0:5, /*[4:0]  */
 hole0:3,
 l1:5, /*[12:8]  */
 hole1:3,
 l2:5, /*[20:16]  */
 hole2:3,
 l3:5, /*[28:24]  */
 hole3:3;
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_NOISE_CALC_CONFIG_2Reg {
 struct { uint32_t

 /* sorting 4 */
#define vo_vxp_NRDI_NOISE_CALC_CONFIG_2_edit_pixels_per_line_threshold_SHIFT 0
#define vo_vxp_NRDI_NOISE_CALC_CONFIG_2_edit_pixels_per_line_threshold_WIDTH 8
#define vo_vxp_NRDI_NOISE_CALC_CONFIG_2_iir_filter_bits_SHIFT 8
#define vo_vxp_NRDI_NOISE_CALC_CONFIG_2_iir_filter_bits_WIDTH 3
#define vo_vxp_NRDI_NOISE_CALC_CONFIG_2_border_v_SHIFT 11
#define vo_vxp_NRDI_NOISE_CALC_CONFIG_2_border_v_WIDTH 8
#define vo_vxp_NRDI_NOISE_CALC_CONFIG_2_out_of_range_noise_SHIFT 19
#define vo_vxp_NRDI_NOISE_CALC_CONFIG_2_out_of_range_noise_WIDTH 13

 edit_pixels_per_line_threshold:8, /*[7:0]  */
 iir_filter_bits:3, /*[10:8]  */
 border_v:8, /*[18:11]  */
 out_of_range_noise:13; /*[31:19]  */
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_NOISE_CALC_CONFIG_1Reg {
 struct { uint32_t

 /* sorting 6 */
#define vo_vxp_NRDI_NOISE_CALC_CONFIG_1_noise_adaptation_en_SHIFT 0
#define vo_vxp_NRDI_NOISE_CALC_CONFIG_1_noise_adaptation_en_WIDTH 1
#define vo_vxp_NRDI_NOISE_CALC_CONFIG_1_noise_adaptation_lower_threshold_SHIFT 1
#define vo_vxp_NRDI_NOISE_CALC_CONFIG_1_noise_adaptation_lower_threshold_WIDTH 4
#define vo_vxp_NRDI_NOISE_CALC_CONFIG_1_noise_adaptation_upper_threshold_SHIFT 5
#define vo_vxp_NRDI_NOISE_CALC_CONFIG_1_noise_adaptation_upper_threshold_WIDTH 4
#define vo_vxp_NRDI_NOISE_CALC_CONFIG_1_low_level_clamp_SHIFT 9
#define vo_vxp_NRDI_NOISE_CALC_CONFIG_1_low_level_clamp_WIDTH 5
#define vo_vxp_NRDI_NOISE_CALC_CONFIG_1_high_level_clamp_SHIFT 14
#define vo_vxp_NRDI_NOISE_CALC_CONFIG_1_high_level_clamp_WIDTH 8
#define vo_vxp_NRDI_NOISE_CALC_CONFIG_1_edit_lines_threshold_SHIFT 22
#define vo_vxp_NRDI_NOISE_CALC_CONFIG_1_edit_lines_threshold_WIDTH 8

 noise_adaptation_en:1, /*[0:0]  */
 noise_adaptation_lower_threshold:4, /*[4:1]  */
 noise_adaptation_upper_threshold:4, /*[8:5]  */
 low_level_clamp:5, /*[13:9]  */
 high_level_clamp:8, /*[21:14]  */
 edit_lines_threshold:8, /*[29:22]  */
 hole0:2;
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_NC_NFReg {
 struct { uint32_t

 /* sorting 3 */
#define vo_vxp_NRDI_NC_NF_nc_SHIFT 0
#define vo_vxp_NRDI_NC_NF_nc_WIDTH 13
#define vo_vxp_NRDI_NC_NF_nf_SHIFT 13
#define vo_vxp_NRDI_NC_NF_nf_WIDTH 13
#define vo_vxp_NRDI_NC_NF_edited_field_SHIFT 26
#define vo_vxp_NRDI_NC_NF_edited_field_WIDTH 1

 nc:13, /*[12:0]  */
 nf:13, /*[25:13]  */
 edited_field:1, /*[26:26]  */
 hole0:5;
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_MIN_CONS_THRESHOLDReg {
 struct { uint32_t

 /* sorting 4 */
#define vo_vxp_NRDI_MIN_CONS_THRESHOLD_minimization_threshold1_SHIFT 0
#define vo_vxp_NRDI_MIN_CONS_THRESHOLD_minimization_threshold1_WIDTH 4
#define vo_vxp_NRDI_MIN_CONS_THRESHOLD_minimization_threshold2_SHIFT 4
#define vo_vxp_NRDI_MIN_CONS_THRESHOLD_minimization_threshold2_WIDTH 4
#define vo_vxp_NRDI_MIN_CONS_THRESHOLD_consolidation_threshold1_SHIFT 8
#define vo_vxp_NRDI_MIN_CONS_THRESHOLD_consolidation_threshold1_WIDTH 6
#define vo_vxp_NRDI_MIN_CONS_THRESHOLD_consolidation_threshold2_SHIFT 14
#define vo_vxp_NRDI_MIN_CONS_THRESHOLD_consolidation_threshold2_WIDTH 8

 minimization_threshold1:4, /*[3:0]  */
 minimization_threshold2:4, /*[7:4]  */
 consolidation_threshold1:6, /*[13:8]  */
 consolidation_threshold2:8, /*[21:14]  */
 hole0:10;
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_IF_STATUSReg {
 struct { uint32_t

 /* sorting 14 */
#define vo_vxp_NRDI_IF_STATUS_in_past_fifo_empty_SHIFT 0
#define vo_vxp_NRDI_IF_STATUS_in_past_fifo_empty_WIDTH 1
#define vo_vxp_NRDI_IF_STATUS_in_past_fifo_full_SHIFT 1
#define vo_vxp_NRDI_IF_STATUS_in_past_fifo_full_WIDTH 1
#define vo_vxp_NRDI_IF_STATUS_in_cur_fifo_empty_SHIFT 2
#define vo_vxp_NRDI_IF_STATUS_in_cur_fifo_empty_WIDTH 1
#define vo_vxp_NRDI_IF_STATUS_in_cur_fifo_full_SHIFT 3
#define vo_vxp_NRDI_IF_STATUS_in_cur_fifo_full_WIDTH 1
#define vo_vxp_NRDI_IF_STATUS_in_futr_fifo_empty_SHIFT 4
#define vo_vxp_NRDI_IF_STATUS_in_futr_fifo_empty_WIDTH 1
#define vo_vxp_NRDI_IF_STATUS_in_futr_fifo_full_SHIFT 5
#define vo_vxp_NRDI_IF_STATUS_in_futr_fifo_full_WIDTH 1
#define vo_vxp_NRDI_IF_STATUS_in_ifmd_fifo_empty_SHIFT 6
#define vo_vxp_NRDI_IF_STATUS_in_ifmd_fifo_empty_WIDTH 1
#define vo_vxp_NRDI_IF_STATUS_in_ifmd_fifo_full_SHIFT 7
#define vo_vxp_NRDI_IF_STATUS_in_ifmd_fifo_full_WIDTH 1
#define vo_vxp_NRDI_IF_STATUS_out_nrdi_fifo_empty_SHIFT 8
#define vo_vxp_NRDI_IF_STATUS_out_nrdi_fifo_empty_WIDTH 1
#define vo_vxp_NRDI_IF_STATUS_out_nrdi_fifo_full_SHIFT 9
#define vo_vxp_NRDI_IF_STATUS_out_nrdi_fifo_full_WIDTH 1
#define vo_vxp_NRDI_IF_STATUS_out_nr_fifo_empty_SHIFT 10
#define vo_vxp_NRDI_IF_STATUS_out_nr_fifo_empty_WIDTH 1
#define vo_vxp_NRDI_IF_STATUS_out_nr_fifo_full_SHIFT 11
#define vo_vxp_NRDI_IF_STATUS_out_nr_fifo_full_WIDTH 1
#define vo_vxp_NRDI_IF_STATUS_out_ifmd_fifo_empty_SHIFT 12
#define vo_vxp_NRDI_IF_STATUS_out_ifmd_fifo_empty_WIDTH 1
#define vo_vxp_NRDI_IF_STATUS_out_ifmd_fifo_full_SHIFT 13
#define vo_vxp_NRDI_IF_STATUS_out_ifmd_fifo_full_WIDTH 1

 in_past_fifo_empty:1, /*[0:0]  */
 in_past_fifo_full:1, /*[1:1]  */
 in_cur_fifo_empty:1, /*[2:2]  */
 in_cur_fifo_full:1, /*[3:3]  */
 in_futr_fifo_empty:1, /*[4:4]  */
 in_futr_fifo_full:1, /*[5:5]  */
 in_ifmd_fifo_empty:1, /*[6:6]  */
 in_ifmd_fifo_full:1, /*[7:7]  */
 out_nrdi_fifo_empty:1, /*[8:8]  */
 out_nrdi_fifo_full:1, /*[9:9]  */
 out_nr_fifo_empty:1, /*[10:10]  */
 out_nr_fifo_full:1, /*[11:11]  */
 out_ifmd_fifo_empty:1, /*[12:12]  */
 out_ifmd_fifo_full:1, /*[13:13]  */
 hole0:18;
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_IFMD_CONFIG_2Reg {
 struct { uint32_t

 /* sorting 4 */
#define vo_vxp_NRDI_IFMD_CONFIG_2_noise_level_threshold_SHIFT 0
#define vo_vxp_NRDI_IFMD_CONFIG_2_noise_level_threshold_WIDTH 4
#define vo_vxp_NRDI_IFMD_CONFIG_2_af_pulse_threshold_SHIFT 4
#define vo_vxp_NRDI_IFMD_CONFIG_2_af_pulse_threshold_WIDTH 6
#define vo_vxp_NRDI_IFMD_CONFIG_2_af_flat_threshold_SHIFT 10
#define vo_vxp_NRDI_IFMD_CONFIG_2_af_flat_threshold_WIDTH 6
#define vo_vxp_NRDI_IFMD_CONFIG_2_af_shift_factor_SHIFT 16
#define vo_vxp_NRDI_IFMD_CONFIG_2_af_shift_factor_WIDTH 3

 noise_level_threshold:4, /*[3:0]  */
 af_pulse_threshold:6, /*[9:4]  */
 af_flat_threshold:6, /*[15:10]  */
 af_shift_factor:3, /*[18:16]  */
 hole0:13;
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_IFMD_CONFIG_1Reg {
 struct { uint32_t

 /* sorting 8 */
#define vo_vxp_NRDI_IFMD_CONFIG_1_mode_SHIFT 0
#define vo_vxp_NRDI_IFMD_CONFIG_1_mode_WIDTH 2
#define vo_vxp_NRDI_IFMD_CONFIG_1_chroma_en_SHIFT 2
#define vo_vxp_NRDI_IFMD_CONFIG_1_chroma_en_WIDTH 1
#define vo_vxp_NRDI_IFMD_CONFIG_1_af_en_SHIFT 3
#define vo_vxp_NRDI_IFMD_CONFIG_1_af_en_WIDTH 1
#define vo_vxp_NRDI_IFMD_CONFIG_1_decision_threshold1_SHIFT 4
#define vo_vxp_NRDI_IFMD_CONFIG_1_decision_threshold1_WIDTH 4
#define vo_vxp_NRDI_IFMD_CONFIG_1_decision_threshold2_SHIFT 8
#define vo_vxp_NRDI_IFMD_CONFIG_1_decision_threshold2_WIDTH 4
#define vo_vxp_NRDI_IFMD_CONFIG_1_decision_threshold3_SHIFT 12
#define vo_vxp_NRDI_IFMD_CONFIG_1_decision_threshold3_WIDTH 8
#define vo_vxp_NRDI_IFMD_CONFIG_1_decision_threshold4_SHIFT 20
#define vo_vxp_NRDI_IFMD_CONFIG_1_decision_threshold4_WIDTH 8
#define vo_vxp_NRDI_IFMD_CONFIG_1_noise_measure_gain_SHIFT 28
#define vo_vxp_NRDI_IFMD_CONFIG_1_noise_measure_gain_WIDTH 2

 mode:2, /*[1:0]  */
 chroma_en:1, /*[2:2]  */
 af_en:1, /*[3:3]  */
 decision_threshold1:4, /*[7:4]  */
 decision_threshold2:4, /*[11:8]  */
 decision_threshold3:8, /*[19:12]  */
 decision_threshold4:8, /*[27:20]  */
 noise_measure_gain:2, /*[29:28]  */
 hole0:2;
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_GENERAL_CONFIGReg {
 struct { uint32_t

 /* sorting 5 */
#define vo_vxp_NRDI_GENERAL_CONFIG_deint_mode_SHIFT 0
#define vo_vxp_NRDI_GENERAL_CONFIG_deint_mode_WIDTH 2
#define vo_vxp_NRDI_GENERAL_CONFIG_current_f_SHIFT 4
#define vo_vxp_NRDI_GENERAL_CONFIG_current_f_WIDTH 1
#define vo_vxp_NRDI_GENERAL_CONFIG_f2_has_top_active_line_SHIFT 5
#define vo_vxp_NRDI_GENERAL_CONFIG_f2_has_top_active_line_WIDTH 1
#define vo_vxp_NRDI_GENERAL_CONFIG_progressive_mode_SHIFT 6
#define vo_vxp_NRDI_GENERAL_CONFIG_progressive_mode_WIDTH 1
#define vo_vxp_NRDI_GENERAL_CONFIG_debug_mode_SHIFT 8
#define vo_vxp_NRDI_GENERAL_CONFIG_debug_mode_WIDTH 3

 deint_mode:2, /*[1:0]  */
 hole0:2,
 current_f:1, /*[4:4]  */
 f2_has_top_active_line:1, /*[5:5]  */
 progressive_mode:1, /*[6:6]  */
 hole1:1,
 debug_mode:3, /*[10:8]  */
 hole2:21;
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_FREEZE_FRAMEReg {
 struct { uint32_t

 /* sorting 2 */
#define vo_vxp_NRDI_FREEZE_FRAME__past_SHIFT 0
#define vo_vxp_NRDI_FREEZE_FRAME__past_WIDTH 1
#define vo_vxp_NRDI_FREEZE_FRAME__SHIFT 1
#define vo_vxp_NRDI_FREEZE_FRAME__WIDTH 1

 _past:1, /*[0:0]  */
 :1, /*[1:1]  */
 hole0:30;
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_FILM_STATUSReg {
 struct { uint32_t

 /* sorting 4 */
#define vo_vxp_NRDI_FILM_STATUS_maximum_frame_difference_SHIFT 0
#define vo_vxp_NRDI_FILM_STATUS_maximum_frame_difference_WIDTH 8
#define vo_vxp_NRDI_FILM_STATUS_pulldown_status_SHIFT 8
#define vo_vxp_NRDI_FILM_STATUS_pulldown_status_WIDTH 8
#define vo_vxp_NRDI_FILM_STATUS_sequence_status_SHIFT 16
#define vo_vxp_NRDI_FILM_STATUS_sequence_status_WIDTH 8
#define vo_vxp_NRDI_FILM_STATUS_lock_status_SHIFT 24
#define vo_vxp_NRDI_FILM_STATUS_lock_status_WIDTH 2

 maximum_frame_difference:8, /*[7:0]  */
 pulldown_status:8, /*[15:8]  */
 sequence_status:8, /*[23:16]  */
 lock_status:2, /*[25:24]  */
 hole0:6;
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_FILM_MODE_THRESHOLD_3Reg {
 struct { uint32_t

 /* sorting 9 */
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_3_sad_fw_en_SHIFT 0
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_3_sad_fw_en_WIDTH 1
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_3_sad_fw_depth_SHIFT 1
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_3_sad_fw_depth_WIDTH 3
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_3_top_border_lines_SHIFT 4
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_3_top_border_lines_WIDTH 4
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_3_bottom_border_lines_SHIFT 8
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_3_bottom_border_lines_WIDTH 4
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_3_sum_alias_ratio1_SHIFT 12
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_3_sum_alias_ratio1_WIDTH 5
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_3_sum_alias_ratio2_SHIFT 17
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_3_sum_alias_ratio2_WIDTH 5
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_3_adc_unlocked_length_SHIFT 22
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_3_adc_unlocked_length_WIDTH 3
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_3_adc_locked_length_extend_SHIFT 25
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_3_adc_locked_length_extend_WIDTH 1
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_3_sad_unlocked_length_SHIFT 26
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_3_sad_unlocked_length_WIDTH 3

 sad_fw_en:1, /*[0:0]  */
 sad_fw_depth:3, /*[3:1]  */
 top_border_lines:4, /*[7:4]  */
 bottom_border_lines:4, /*[11:8]  */
 sum_alias_ratio1:5, /*[16:12]  */
 sum_alias_ratio2:5, /*[21:17]  */
 adc_unlocked_length:3, /*[24:22]  */
 adc_locked_length_extend:1, /*[25:25]  */
 sad_unlocked_length:3, /*[28:26]  */
 hole0:3;
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_FILM_MODE_THRESHOLD_2Reg {
 struct { uint32_t

 /* sorting 7 */
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_2_comb_line_considered_SHIFT 0
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_2_comb_line_considered_WIDTH 4
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_2_ff_detect_threshold_SHIFT 4
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_2_ff_detect_threshold_WIDTH 5
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_2_motion_num_threshold_SHIFT 9
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_2_motion_num_threshold_WIDTH 3
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_2_alias_pixel_per_line_threshold_SHIFT 12
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_2_alias_pixel_per_line_threshold_WIDTH 6
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_2_alias_pixels_per_field_threshold0_SHIFT 18
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_2_alias_pixels_per_field_threshold0_WIDTH 4
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_2_alias_pixels_per_field_threshold1_SHIFT 22
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_2_alias_pixels_per_field_threshold1_WIDTH 4
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_2_alias_pixels_per_field_threshold2_SHIFT 26
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_2_alias_pixels_per_field_threshold2_WIDTH 4

 comb_line_considered:4, /*[3:0]  */
 ff_detect_threshold:5, /*[8:4]  */
 motion_num_threshold:3, /*[11:9]  */
 alias_pixel_per_line_threshold:6, /*[17:12]  */
 alias_pixels_per_field_threshold0:4, /*[21:18]  */
 alias_pixels_per_field_threshold1:4, /*[25:22]  */
 alias_pixels_per_field_threshold2:4, /*[29:26]  */
 hole0:2;
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_FILM_MODE_THRESHOLD_1Reg {
 struct { uint32_t

 /* sorting 5 */
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_1_film_mode_max_diff_threshold1_SHIFT 0
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_1_film_mode_max_diff_threshold1_WIDTH 8
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_1_film_mode_max_diff_threshold2_SHIFT 8
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_1_film_mode_max_diff_threshold2_WIDTH 8
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_1_comb_ratio_threshold_SHIFT 16
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_1_comb_ratio_threshold_WIDTH 5
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_1_comb_line_threshold_SHIFT 21
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_1_comb_line_threshold_WIDTH 5
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_1_comb_pixel_threshold_SHIFT 26
#define vo_vxp_NRDI_FILM_MODE_THRESHOLD_1_comb_pixel_threshold_WIDTH 5

 film_mode_max_diff_threshold1:8, /*[7:0]  */
 film_mode_max_diff_threshold2:8, /*[15:8]  */
 comb_ratio_threshold:5, /*[20:16]  */
 comb_line_threshold:5, /*[25:21]  */
 comb_pixel_threshold:5, /*[30:26]  */
 hole0:1;
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_ENABLESReg {
 struct { uint32_t

 /* sorting 26 */
#define vo_vxp_NRDI_ENABLES_nrdi_clock_en_SHIFT 0
#define vo_vxp_NRDI_ENABLES_nrdi_clock_en_WIDTH 1
#define vo_vxp_NRDI_ENABLES_mnr_en_SHIFT 1
#define vo_vxp_NRDI_ENABLES_mnr_en_WIDTH 1
#define vo_vxp_NRDI_ENABLES_bar_en_SHIFT 2
#define vo_vxp_NRDI_ENABLES_bar_en_WIDTH 1
#define vo_vxp_NRDI_ENABLES_chroma_bug_correction_en_SHIFT 3
#define vo_vxp_NRDI_ENABLES_chroma_bug_correction_en_WIDTH 1
#define vo_vxp_NRDI_ENABLES_film_mode_en_SHIFT 4
#define vo_vxp_NRDI_ENABLES_film_mode_en_WIDTH 1
#define vo_vxp_NRDI_ENABLES_up_film_mode_en_SHIFT 5
#define vo_vxp_NRDI_ENABLES_up_film_mode_en_WIDTH 1
#define vo_vxp_NRDI_ENABLES_alias_extra_precision_en_SHIFT 6
#define vo_vxp_NRDI_ENABLES_alias_extra_precision_en_WIDTH 1
#define vo_vxp_NRDI_ENABLES_ff_detect_en_SHIFT 7
#define vo_vxp_NRDI_ENABLES_ff_detect_en_WIDTH 1
#define vo_vxp_NRDI_ENABLES_ff_filter_sel_SHIFT 8
#define vo_vxp_NRDI_ENABLES_ff_filter_sel_WIDTH 1
#define vo_vxp_NRDI_ENABLES_savt_en_SHIFT 9
#define vo_vxp_NRDI_ENABLES_savt_en_WIDTH 1
#define vo_vxp_NRDI_ENABLES_top_bottom_vt_disable_SHIFT 10
#define vo_vxp_NRDI_ENABLES_top_bottom_vt_disable_WIDTH 1
#define vo_vxp_NRDI_ENABLES_fm22_f2_top_line_en_SHIFT 11
#define vo_vxp_NRDI_ENABLES_fm22_f2_top_line_en_WIDTH 1
#define vo_vxp_NRDI_ENABLES_fm_adc_22_en_SHIFT 12
#define vo_vxp_NRDI_ENABLES_fm_adc_22_en_WIDTH 1
#define vo_vxp_NRDI_ENABLES_fm_adc_32_en_SHIFT 13
#define vo_vxp_NRDI_ENABLES_fm_adc_32_en_WIDTH 1
#define vo_vxp_NRDI_ENABLES_fm_sad_22_en_SHIFT 14
#define vo_vxp_NRDI_ENABLES_fm_sad_22_en_WIDTH 1
#define vo_vxp_NRDI_ENABLES_fm_sad_32_en_SHIFT 15
#define vo_vxp_NRDI_ENABLES_fm_sad_32_en_WIDTH 1
#define vo_vxp_NRDI_ENABLES_fm_sad_87_en_SHIFT 16
#define vo_vxp_NRDI_ENABLES_fm_sad_87_en_WIDTH 1
#define vo_vxp_NRDI_ENABLES_fm_sad_64_en_SHIFT 17
#define vo_vxp_NRDI_ENABLES_fm_sad_64_en_WIDTH 1
#define vo_vxp_NRDI_ENABLES_fm_sad_55_en_SHIFT 18
#define vo_vxp_NRDI_ENABLES_fm_sad_55_en_WIDTH 1
#define vo_vxp_NRDI_ENABLES_fm_sad_2224_en_SHIFT 19
#define vo_vxp_NRDI_ENABLES_fm_sad_2224_en_WIDTH 1
#define vo_vxp_NRDI_ENABLES_fm_sad_2332_en_SHIFT 20
#define vo_vxp_NRDI_ENABLES_fm_sad_2332_en_WIDTH 1
#define vo_vxp_NRDI_ENABLES_fm_sad_32322_en_SHIFT 21
#define vo_vxp_NRDI_ENABLES_fm_sad_32322_en_WIDTH 1
#define vo_vxp_NRDI_ENABLES_future_port_en_SHIFT 24
#define vo_vxp_NRDI_ENABLES_future_port_en_WIDTH 1
#define vo_vxp_NRDI_ENABLES_current_port_en_SHIFT 25
#define vo_vxp_NRDI_ENABLES_current_port_en_WIDTH 1
#define vo_vxp_NRDI_ENABLES_past_port_en_SHIFT 26
#define vo_vxp_NRDI_ENABLES_past_port_en_WIDTH 1
#define vo_vxp_NRDI_ENABLES_writeback_port_en_SHIFT 27
#define vo_vxp_NRDI_ENABLES_writeback_port_en_WIDTH 1

 nrdi_clock_en:1, /*[0:0]  */
 mnr_en:1, /*[1:1]  */
 bar_en:1, /*[2:2]  */
 chroma_bug_correction_en:1, /*[3:3]  */
 film_mode_en:1, /*[4:4]  */
 up_film_mode_en:1, /*[5:5]  */
 alias_extra_precision_en:1, /*[6:6]  */
 ff_detect_en:1, /*[7:7]  */
 ff_filter_sel:1, /*[8:8]  */
 savt_en:1, /*[9:9]  */
 top_bottom_vt_disable:1, /*[10:10]  */
 fm22_f2_top_line_en:1, /*[11:11]  */
 fm_adc_22_en:1, /*[12:12]  */
 fm_adc_32_en:1, /*[13:13]  */
 fm_sad_22_en:1, /*[14:14]  */
 fm_sad_32_en:1, /*[15:15]  */
 fm_sad_87_en:1, /*[16:16]  */
 fm_sad_64_en:1, /*[17:17]  */
 fm_sad_55_en:1, /*[18:18]  */
 fm_sad_2224_en:1, /*[19:19]  */
 fm_sad_2332_en:1, /*[20:20]  */
 fm_sad_32322_en:1, /*[21:21]  */
 hole0:2,
 future_port_en:1, /*[24:24]  */
 current_port_en:1, /*[25:25]  */
 past_port_en:1, /*[26:26]  */
 writeback_port_en:1, /*[27:27]  */
 hole1:4;
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_D0P_D0_ACCReg {
 struct { uint32_t

 /* sorting 1 */
#define vo_vxp_NRDI_D0P_D0_ACC_vo_vxp_nrdi_d0p_d0_acc_SHIFT 0
#define vo_vxp_NRDI_D0P_D0_ACC_vo_vxp_nrdi_d0p_d0_acc_WIDTH 31

 vo_vxp_nrdi_d0p_d0_acc:31, /*[30:0]  */
 hole0:1;
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_AD_CONFIG_2Reg {
 struct { uint32_t

 /* sorting 3 */
#define vo_vxp_NRDI_AD_CONFIG_2_ch1_SHIFT 0
#define vo_vxp_NRDI_AD_CONFIG_2_ch1_WIDTH 6
#define vo_vxp_NRDI_AD_CONFIG_2_ch2_SHIFT 6
#define vo_vxp_NRDI_AD_CONFIG_2_ch2_WIDTH 6
#define vo_vxp_NRDI_AD_CONFIG_2__SHIFT 12
#define vo_vxp_NRDI_AD_CONFIG_2__WIDTH 8

 ch1:6, /*[5:0]  */
 ch2:6, /*[11:6]  */
 :8, /*[19:12]  */
 hole0:12;
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_AD_CONFIG_1Reg {
 struct { uint32_t

 /* sorting 7 */
#define vo_vxp_NRDI_AD_CONFIG_1_stopper_SHIFT 0
#define vo_vxp_NRDI_AD_CONFIG_1_stopper_WIDTH 4
#define vo_vxp_NRDI_AD_CONFIG_1_tv1_SHIFT 4
#define vo_vxp_NRDI_AD_CONFIG_1_tv1_WIDTH 4
#define vo_vxp_NRDI_AD_CONFIG_1_tv2_SHIFT 8
#define vo_vxp_NRDI_AD_CONFIG_1_tv2_WIDTH 4
#define vo_vxp_NRDI_AD_CONFIG_1_tcv1_SHIFT 12
#define vo_vxp_NRDI_AD_CONFIG_1_tcv1_WIDTH 5
#define vo_vxp_NRDI_AD_CONFIG_1_tcv2_SHIFT 17
#define vo_vxp_NRDI_AD_CONFIG_1_tcv2_WIDTH 5
#define vo_vxp_NRDI_AD_CONFIG_1_th1_SHIFT 22
#define vo_vxp_NRDI_AD_CONFIG_1_th1_WIDTH 4
#define vo_vxp_NRDI_AD_CONFIG_1_th2_SHIFT 26
#define vo_vxp_NRDI_AD_CONFIG_1_th2_WIDTH 4

 stopper:4, /*[3:0]  */
 tv1:4, /*[7:4]  */
 tv2:4, /*[11:8]  */
 tcv1:5, /*[16:12]  */
 tcv2:5, /*[21:17]  */
 th1:4, /*[25:22]  */
 th2:4, /*[29:26]  */
 hole0:2;
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_ADC_2Reg {
 struct { uint32_t

 /* sorting 6 */
#define vo_vxp_NRDI_ADC_2_adcn7_SHIFT 0
#define vo_vxp_NRDI_ADC_2_adcn7_WIDTH 4
#define vo_vxp_NRDI_ADC_2_adcn8_SHIFT 4
#define vo_vxp_NRDI_ADC_2_adcn8_WIDTH 4
#define vo_vxp_NRDI_ADC_2_adcn9_SHIFT 8
#define vo_vxp_NRDI_ADC_2_adcn9_WIDTH 4
#define vo_vxp_NRDI_ADC_2_pdnn1_SHIFT 12
#define vo_vxp_NRDI_ADC_2_pdnn1_WIDTH 8
#define vo_vxp_NRDI_ADC_2_seqn1_SHIFT 20
#define vo_vxp_NRDI_ADC_2_seqn1_WIDTH 8
#define vo_vxp_NRDI_ADC_2_lockn1_SHIFT 28
#define vo_vxp_NRDI_ADC_2_lockn1_WIDTH 2

 adcn7:4, /*[3:0]  */
 adcn8:4, /*[7:4]  */
 adcn9:4, /*[11:8]  */
 pdnn1:8, /*[19:12]  */
 seqn1:8, /*[27:20]  */
 lockn1:2, /*[29:28]  */
 hole0:2;
 } bits;

 uint32_t value;
};

union vo_vxp_NRDI_ADC_1Reg {
 struct { uint32_t

 /* sorting 8 */
#define vo_vxp_NRDI_ADC_1_n2_history_count_SHIFT 0
#define vo_vxp_NRDI_ADC_1_n2_history_count_WIDTH 4
#define vo_vxp_NRDI_ADC_1_adc0_SHIFT 4
#define vo_vxp_NRDI_ADC_1_adc0_WIDTH 4
#define vo_vxp_NRDI_ADC_1_adcn1_SHIFT 8
#define vo_vxp_NRDI_ADC_1_adcn1_WIDTH 4
#define vo_vxp_NRDI_ADC_1_adcn2_SHIFT 12
#define vo_vxp_NRDI_ADC_1_adcn2_WIDTH 4
#define vo_vxp_NRDI_ADC_1_adcn3_SHIFT 16
#define vo_vxp_NRDI_ADC_1_adcn3_WIDTH 4
#define vo_vxp_NRDI_ADC_1_adcn4_SHIFT 20
#define vo_vxp_NRDI_ADC_1_adcn4_WIDTH 4
#define vo_vxp_NRDI_ADC_1_adcn5_SHIFT 24
#define vo_vxp_NRDI_ADC_1_adcn5_WIDTH 4
#define vo_vxp_NRDI_ADC_1_adcn6_SHIFT 28
#define vo_vxp_NRDI_ADC_1_adcn6_WIDTH 4

 n2_history_count:4, /*[3:0]  */
 adc0:4, /*[7:4]  */
 adcn1:4, /*[11:8]  */
 adcn2:4, /*[15:12]  */
 adcn3:4, /*[19:16]  */
 adcn4:4, /*[23:20]  */
 adcn5:4, /*[27:24]  */
 adcn6:4; /*[31:28]  */
 } bits;

 uint32_t value;
};

struct vo_vxp_noise_reduction_deinterlace {
 union vo_vxp_NRDI_GENERAL_CONFIGReg vo_vxp_NRDI_GENERAL_CONFIG; /* +0x00000000  */
 union vo_vxp_NRDI_RASTER_SIZEReg vo_vxp_NRDI_RASTER_SIZE; /* +0x00000004  */
 union vo_vxp_NRDI_ENABLESReg vo_vxp_NRDI_ENABLES; /* +0x00000008  */
 union vo_vxp_NRDI_NR_CONFIG_1Reg vo_vxp_NRDI_NR_CONFIG_1; /* +0x0000000c  */
 union vo_vxp_NRDI_NR_CONFIG_2Reg vo_vxp_NRDI_NR_CONFIG_2; /* +0x00000010  */
 union vo_vxp_NRDI_NR_CONFIG_3Reg vo_vxp_NRDI_NR_CONFIG_3; /* +0x00000014  */
 union vo_vxp_NRDI_NR_CONFIG_4Reg vo_vxp_NRDI_NR_CONFIG_4; /* +0x00000018  */
 union vo_vxp_NRDI_AD_CONFIG_1Reg vo_vxp_NRDI_AD_CONFIG_1; /* +0x0000001c  */
 union vo_vxp_NRDI_AD_CONFIG_2Reg vo_vxp_NRDI_AD_CONFIG_2; /* +0x00000020  */
 union vo_vxp_NRDI_NOISE_CALC_CONFIG_1Reg vo_vxp_NRDI_NOISE_CALC_CONFIG_1; /* +0x00000024  */
 union vo_vxp_NRDI_NOISE_CALC_CONFIG_2Reg vo_vxp_NRDI_NOISE_CALC_CONFIG_2; /* +0x00000028  */
 union vo_vxp_NRDI_IFMD_CONFIG_1Reg vo_vxp_NRDI_IFMD_CONFIG_1; /* +0x0000002c  */
 union vo_vxp_NRDI_IFMD_CONFIG_2Reg vo_vxp_NRDI_IFMD_CONFIG_2; /* +0x00000030  */
 union vo_vxp_NRDI_MIN_CONS_THRESHOLDReg vo_vxp_NRDI_MIN_CONS_THRESHOLD; /* +0x00000034  */
 union vo_vxp_NRDI_SPEED_FILM_THRESHOLDReg vo_vxp_NRDI_SPEED_FILM_THRESHOLD; /* +0x00000038  */
 union vo_vxp_NRDI_FILM_MODE_THRESHOLD_1Reg vo_vxp_NRDI_FILM_MODE_THRESHOLD_1; /* +0x0000003c  */
 union vo_vxp_NRDI_FILM_MODE_THRESHOLD_2Reg vo_vxp_NRDI_FILM_MODE_THRESHOLD_2; /* +0x00000040  */
 union vo_vxp_NRDI_FILM_MODE_THRESHOLD_3Reg vo_vxp_NRDI_FILM_MODE_THRESHOLD_3; /* +0x00000044  */
 union vo_vxp_NRDI_UP_FILM_MODEReg vo_vxp_NRDI_UP_FILM_MODE; /* +0x00000048  */
 union vo_vxp_NRDI_XCNR_CONFIGReg vo_vxp_NRDI_XCNR_CONFIG; /* +0x0000004c  */
 uint32_t pad0[0x0010/4];
 union vo_vxp_NRDI_NC_NFReg vo_vxp_NRDI_NC_NF; /* +0x00000060  */
 union vo_vxp_NRDI_D0P_D0_ACCReg vo_vxp_NRDI_D0P_D0_ACC; /* +0x00000064  */
 union vo_vxp_NRDI_FREEZE_FRAMEReg vo_vxp_NRDI_FREEZE_FRAME; /* +0x00000068  */
 uint32_t vo_vxp_NRDI_SUM_ALIAS_RIGHT_1F; /* +0x0000006c  */
 uint32_t vo_vxp_NRDI_SUM_ALIAS_RIGHT_2F; /* +0x00000070  */
 uint32_t vo_vxp_NRDI_SUM_ALIAS_RIGHT_3F; /* +0x00000074  */
 uint32_t vo_vxp_NRDI_SUM_ALIAS_RIGHT_4F; /* +0x00000078  */
 uint32_t vo_vxp_NRDI_SUM_ALIAS_LEFT_1F; /* +0x0000007c  */
 uint32_t vo_vxp_NRDI_SUM_ALIAS_LEFT_2F; /* +0x00000080  */
 uint32_t vo_vxp_NRDI_SUM_ALIAS_LEFT_3F; /* +0x00000084  */
 uint32_t vo_vxp_NRDI_SUM_ALIAS_LEFT_4F; /* +0x00000088  */
 union vo_vxp_NRDI_SUM_MOTION_1FReg vo_vxp_NRDI_SUM_MOTION_1F; /* +0x0000008c  */
 union vo_vxp_NRDI_SUM_MOTION_2FReg vo_vxp_NRDI_SUM_MOTION_2F; /* +0x00000090  */
 union vo_vxp_NRDI_SUM_MOTION_3FReg vo_vxp_NRDI_SUM_MOTION_3F; /* +0x00000094  */
 union vo_vxp_NRDI_SUM_MOTION_4FReg vo_vxp_NRDI_SUM_MOTION_4F; /* +0x00000098  */
 union vo_vxp_NRDI_ADC_1Reg vo_vxp_NRDI_ADC_1; /* +0x0000009c  */
 union vo_vxp_NRDI_ADC_2Reg vo_vxp_NRDI_ADC_2; /* +0x000000a0  */
 union vo_vxp_NRDI_SAD_ARRAY_1Reg vo_vxp_NRDI_SAD_ARRAY_1; /* +0x000000a4  */
 union vo_vxp_NRDI_SAD_ARRAY_2Reg vo_vxp_NRDI_SAD_ARRAY_2; /* +0x000000a8  */
 union vo_vxp_NRDI_SAD_ARRAY_3Reg vo_vxp_NRDI_SAD_ARRAY_3; /* +0x000000ac  */
 union vo_vxp_NRDI_SAD_ARRAY_4Reg vo_vxp_NRDI_SAD_ARRAY_4; /* +0x000000b0  */
 union vo_vxp_NRDI_SAD_ARRAY_5Reg vo_vxp_NRDI_SAD_ARRAY_5; /* +0x000000b4  */
 union vo_vxp_NRDI_SAD_ARRAY_6Reg vo_vxp_NRDI_SAD_ARRAY_6; /* +0x000000b8  */
 union vo_vxp_NRDI_SAD_ARRAY_7Reg vo_vxp_NRDI_SAD_ARRAY_7; /* +0x000000bc  */
 union vo_vxp_NRDI_SAD_ARRAY_8Reg vo_vxp_NRDI_SAD_ARRAY_8; /* +0x000000c0  */
 union vo_vxp_NRDI_SAD_SEQ_I0_1Reg vo_vxp_NRDI_SAD_SEQ_I0_1; /* +0x000000c4  */
 union vo_vxp_NRDI_SAD_SEQ_I0_2Reg vo_vxp_NRDI_SAD_SEQ_I0_2; /* +0x000000c8  */
 union vo_vxp_NRDI_SAD_SEQ_I0_3Reg vo_vxp_NRDI_SAD_SEQ_I0_3; /* +0x000000cc  */
 union vo_vxp_NRDI_SAD_SEQ_I0_4Reg vo_vxp_NRDI_SAD_SEQ_I0_4; /* +0x000000d0  */
 union vo_vxp_NRDI_SAD_SEQ_I1Reg vo_vxp_NRDI_SAD_SEQ_I1; /* +0x000000d4  */
 uint32_t pad1[0x0010/4];
 union vo_vxp_NRDI_IF_STATUSReg vo_vxp_NRDI_IF_STATUS; /* +0x000000e8  */
 union vo_vxp_NRDI_FILM_STATUSReg vo_vxp_NRDI_FILM_STATUS; /* +0x000000ec  */
};
