/* autogenerated with parsecfg: do not edit. */

union MISC_w1_cfgReg {
 struct { uint32_t

 /* sorting 2 */
#define MISC_w1_cfg_be_SHIFT 0
#define MISC_w1_cfg_be_WIDTH 4
#define MISC_w1_cfg_mode_SHIFT 4
#define MISC_w1_cfg_mode_WIDTH 1

 be:4, /*[3:0]  */
 mode:1, /*[4:4]  */
 hole0:27;
 } bits;

 uint32_t value;
};

union MISC_version_revisionReg {
 struct { uint32_t

 /* sorting 2 */
#define MISC_version_revision_revision_SHIFT 0
#define MISC_version_revision_revision_WIDTH 8
#define MISC_version_revision_version_SHIFT 8
#define MISC_version_revision_version_WIDTH 8

 revision:8, /*[7:0] ,RO */
 version:8, /*[15:8] ,RO */
 hole0:16;
 } bits;

 uint32_t value;
};

union MISC_timer_divReg {
 struct { uint32_t

 /* sorting 1 */
#define MISC_timer_div_MISC_timer_div_value_SHIFT 0
#define MISC_timer_div_MISC_timer_div_value_WIDTH 16

 misc_timer_div_value:16, /*[15:0]  */
 hole0:16;
 } bits;

 uint32_t value;
};

union MISC_timer_countReg {
 struct { uint32_t

 /* sorting 1 */
#define MISC_timer_count_MISC_timer_count_value_SHIFT 0
#define MISC_timer_count_MISC_timer_count_value_WIDTH 16

 misc_timer_count_value:16, /*[15:0]  */
 hole0:16;
 } bits;

 uint32_t value;
};

union MISC_ssbox_modeReg {
 struct { uint32_t

 /* sorting 6 */
#define MISC_ssbox_mode_mode_SHIFT 0
#define MISC_ssbox_mode_mode_WIDTH 2
#define MISC_ssbox_mode_group_SHIFT 2
#define MISC_ssbox_mode_group_WIDTH 2
#define MISC_ssbox_mode_dumpw1_SHIFT 4
#define MISC_ssbox_mode_dumpw1_WIDTH 1
#define MISC_ssbox_mode_UNDOCUMENTED1_SHIFT 5
#define MISC_ssbox_mode_UNDOCUMENTED1_WIDTH 1
#define MISC_ssbox_mode_dumpw2_SHIFT 6
#define MISC_ssbox_mode_dumpw2_WIDTH 1
#define MISC_ssbox_mode_UNDOCUMENTED2_SHIFT 7
#define MISC_ssbox_mode_UNDOCUMENTED2_WIDTH 1

 mode:2, /*[1:0]  */
 group:2, /*[3:2]  */
 dumpw1:1, /*[4:4]  */
 undocumented1:1, /*[5:5]  */
 dumpw2:1, /*[6:6]  */
 undocumented2:1, /*[7:7]  */
 hole0:24;
 } bits;

 uint32_t value;
};

union MISC_semaphore7Reg {
 struct { uint32_t

 /* sorting 1 */
#define MISC_semaphore7_MISC_semaphore7_value_SHIFT 0
#define MISC_semaphore7_MISC_semaphore7_value_WIDTH 5

 misc_semaphore7_value:5, /*[4:0] ,RO */
 hole0:27;
 } bits;

 uint32_t value;
};

union MISC_semaphore6Reg {
 struct { uint32_t

 /* sorting 1 */
#define MISC_semaphore6_MISC_semaphore6_value_SHIFT 0
#define MISC_semaphore6_MISC_semaphore6_value_WIDTH 5

 misc_semaphore6_value:5, /*[4:0] ,RO */
 hole0:27;
 } bits;

 uint32_t value;
};

union MISC_semaphore5Reg {
 struct { uint32_t

 /* sorting 1 */
#define MISC_semaphore5_MISC_semaphore5_value_SHIFT 0
#define MISC_semaphore5_MISC_semaphore5_value_WIDTH 5

 misc_semaphore5_value:5, /*[4:0] ,RO */
 hole0:27;
 } bits;

 uint32_t value;
};

union MISC_semaphore4Reg {
 struct { uint32_t

 /* sorting 1 */
#define MISC_semaphore4_MISC_semaphore4_value_SHIFT 0
#define MISC_semaphore4_MISC_semaphore4_value_WIDTH 5

 misc_semaphore4_value:5, /*[4:0] ,RO */
 hole0:27;
 } bits;

 uint32_t value;
};

union MISC_semaphore3Reg {
 struct { uint32_t

 /* sorting 1 */
#define MISC_semaphore3_MISC_semaphore3_value_SHIFT 0
#define MISC_semaphore3_MISC_semaphore3_value_WIDTH 5

 misc_semaphore3_value:5, /*[4:0] ,RO */
 hole0:27;
 } bits;

 uint32_t value;
};

union MISC_semaphore2Reg {
 struct { uint32_t

 /* sorting 1 */
#define MISC_semaphore2_MISC_semaphore2_value_SHIFT 0
#define MISC_semaphore2_MISC_semaphore2_value_WIDTH 5

 misc_semaphore2_value:5, /*[4:0] ,RO */
 hole0:27;
 } bits;

 uint32_t value;
};

union MISC_semaphore1Reg {
 struct { uint32_t

 /* sorting 1 */
#define MISC_semaphore1_MISC_semaphore1_value_SHIFT 0
#define MISC_semaphore1_MISC_semaphore1_value_WIDTH 5

 misc_semaphore1_value:5, /*[4:0] ,RO */
 hole0:27;
 } bits;

 uint32_t value;
};

union MISC_semaphore0Reg {
 struct { uint32_t

 /* sorting 1 */
#define MISC_semaphore0_MISC_semaphore0_value_SHIFT 0
#define MISC_semaphore0_MISC_semaphore0_value_WIDTH 5

 misc_semaphore0_value:5, /*[4:0] ,RO */
 hole0:27;
 } bits;

 uint32_t value;
};

union MISC_sbox_write_ctrlReg {
 struct { uint32_t

 /* sorting 2 */
#define MISC_sbox_write_ctrl_bytes_from_risc_SHIFT 0
#define MISC_sbox_write_ctrl_bytes_from_risc_WIDTH 8
#define MISC_sbox_write_ctrl_current_position_SHIFT 8
#define MISC_sbox_write_ctrl_current_position_WIDTH 8

 bytes_from_risc:8, /*[7:0]  */
 current_position:8, /*[15:8]  */
 hole0:16;
 } bits;

 uint32_t value;
};

union MISC_sbox_read_ctrlReg {
 struct { uint32_t

 /* sorting 2 */
#define MISC_sbox_read_ctrl_bytes_to_risc_SHIFT 0
#define MISC_sbox_read_ctrl_bytes_to_risc_WIDTH 8
#define MISC_sbox_read_ctrl_current_position_SHIFT 8
#define MISC_sbox_read_ctrl_current_position_WIDTH 8

 bytes_to_risc:8, /*[7:0]  */
 current_position:8, /*[15:8]  */
 hole0:16;
 } bits;

 uint32_t value;
};

union MISC_sbox_modeReg {
 struct { uint32_t

 /* sorting 1 */
#define MISC_sbox_mode_MISC_sbox_mode_value_SHIFT 0
#define MISC_sbox_mode_MISC_sbox_mode_value_WIDTH 3

 misc_sbox_mode_value:3, /*[2:0] ,NO_MEM */
 hole0:29;
 } bits;

 uint32_t value;
};

union MISC_reset2Reg {
 struct { uint32_t

 /* sorting 2 */
#define MISC_reset2_value_SHIFT 0
#define MISC_reset2_value_WIDTH 8
#define MISC_reset2_mask_SHIFT 8
#define MISC_reset2_mask_WIDTH 8

 value:8, /*[7:0]  */
 mask:8, /*[15:8]  */
 hole0:16;
 } bits;

 uint32_t value;
};

union MISC_reset1Reg {
 struct { uint32_t

 /* sorting 2 */
#define MISC_reset1_value_SHIFT 0
#define MISC_reset1_value_WIDTH 8
#define MISC_reset1_write_mask_SHIFT 8
#define MISC_reset1_write_mask_WIDTH 8

 value:8, /*[7:0]  */
 write_mask:8, /*[15:8]  */
 hole0:16;
 } bits;

 uint32_t value;
};

union MISC_reset0Reg {
 struct { uint32_t

 /* sorting 2 */
#define MISC_reset0_value_SHIFT 0
#define MISC_reset0_value_WIDTH 8
#define MISC_reset0_write_mask_SHIFT 8
#define MISC_reset0_write_mask_WIDTH 8

 value:8, /*[7:0]  */
 write_mask:8, /*[15:8]  */
 hole0:16;
 } bits;

 uint32_t value;
};

union MISC_mvp_hd_write_ctrlReg {
 struct { uint32_t

 /* sorting 2 */
#define MISC_mvp_hd_write_ctrl_current_position_SHIFT 0
#define MISC_mvp_hd_write_ctrl_current_position_WIDTH 8
#define MISC_mvp_hd_write_ctrl_bytes_from_mvp_SHIFT 8
#define MISC_mvp_hd_write_ctrl_bytes_from_mvp_WIDTH 8

 current_position:8, /*[7:0]  */
 bytes_from_mvp:8, /*[15:8]  */
 hole0:16;
 } bits;

 uint32_t value;
};

union MISC_mvp_hd_read_ctrlReg {
 struct { uint32_t

 /* sorting 2 */
#define MISC_mvp_hd_read_ctrl_current_position_SHIFT 0
#define MISC_mvp_hd_read_ctrl_current_position_WIDTH 8
#define MISC_mvp_hd_read_ctrl_bytes_to_mvp_SHIFT 8
#define MISC_mvp_hd_read_ctrl_bytes_to_mvp_WIDTH 8

 current_position:8, /*[7:0]  */
 bytes_to_mvp:8, /*[15:8]  */
 hole0:16;
 } bits;

 uint32_t value;
};

union MISC_interruptReg {
 struct { uint32_t

 /* sorting 2 */
#define MISC_interrupt_value_SHIFT 0
#define MISC_interrupt_value_WIDTH 8
#define MISC_interrupt_write_mask_SHIFT 8
#define MISC_interrupt_write_mask_WIDTH 8

 value:8, /*[7:0]  */
 write_mask:8, /*[15:8]  */
 hole0:16;
 } bits;

 uint32_t value;
};

union MISC_dw_modeReg {
 struct { uint32_t

 /* sorting 2 */
#define MISC_dw_mode_value_SHIFT 0
#define MISC_dw_mode_value_WIDTH 2
#define MISC_dw_mode_priority_UNDOCUMENTED_SHIFT 8
#define MISC_dw_mode_priority_UNDOCUMENTED_WIDTH 1

 value:2, /*[1:0]  */
 hole0:6,
 priority_undocumented:1, /*[8:8]  */
 hole1:23;
 } bits;

 uint32_t value;
};

union MISC_dw_lengthReg {
 struct { uint32_t

 /* sorting 1 */
#define MISC_dw_length_MISC_dw_length_value_SHIFT 0
#define MISC_dw_length_MISC_dw_length_value_WIDTH 14

 misc_dw_length_value:14, /*[13:0]  */
 hole0:18;
 } bits;

 uint32_t value;
};

union MISC_dw_addressReg {
 struct { uint32_t

 /* sorting 1 */
#define MISC_dw_address_MISC_dw_address_value_SHIFT 0
#define MISC_dw_address_MISC_dw_address_value_WIDTH 15

 misc_dw_address_value:15, /*[14:0]  */
 hole0:17;
 } bits;

 uint32_t value;
};

union MISC_dsp_irq_extend_maskReg {
 struct { uint32_t

 /* sorting 2 */
#define MISC_dsp_irq_extend_mask_value_SHIFT 0
#define MISC_dsp_irq_extend_mask_value_WIDTH 8
#define MISC_dsp_irq_extend_mask_mask_SHIFT 8
#define MISC_dsp_irq_extend_mask_mask_WIDTH 8

 value:8, /*[7:0]  */
 mask:8, /*[15:8]  */
 hole0:16;
 } bits;

 uint32_t value;
};

union MISC_dsp_irq_extendReg {
 struct { uint32_t

 /* sorting 1 */
#define MISC_dsp_irq_extend_MISC_dsp_irq_extend_value_SHIFT 0
#define MISC_dsp_irq_extend_MISC_dsp_irq_extend_value_WIDTH 8

 misc_dsp_irq_extend_value:8, /*[7:0] ,RO */
 hole0:24;
 } bits;

 uint32_t value;
};

union MISC_dr_modeReg {
 struct { uint32_t

 /* sorting 2 */
#define MISC_dr_mode_value_SHIFT 0
#define MISC_dr_mode_value_WIDTH 2
#define MISC_dr_mode_priority_UNDOCUMENTED_SHIFT 8
#define MISC_dr_mode_priority_UNDOCUMENTED_WIDTH 1

 value:2, /*[1:0]  */
 hole0:6,
 priority_undocumented:1, /*[8:8]  */
 hole1:23;
 } bits;

 uint32_t value;
};

union MISC_dr_lengthReg {
 struct { uint32_t

 /* sorting 1 */
#define MISC_dr_length_MISC_dr_length_value_SHIFT 0
#define MISC_dr_length_MISC_dr_length_value_WIDTH 14

 misc_dr_length_value:14, /*[13:0]  */
 hole0:18;
 } bits;

 uint32_t value;
};

union MISC_dr_addressReg {
 struct { uint32_t

 /* sorting 1 */
#define MISC_dr_address_MISC_dr_address_value_SHIFT 0
#define MISC_dr_address_MISC_dr_address_value_WIDTH 15

 misc_dr_address_value:15, /*[14:0]  */
 hole0:17;
 } bits;

 uint32_t value;
};

union MISC_counter_loReg {
 struct { uint32_t

 /* sorting 1 */
#define MISC_counter_lo_MISC_counter_lo_value_SHIFT 0
#define MISC_counter_lo_MISC_counter_lo_value_WIDTH 16

 misc_counter_lo_value:16, /*[15:0] ,NO_TEST */
 hole0:16;
 } bits;

 uint32_t value;
};

union MISC_counter_hiReg {
 struct { uint32_t

 /* sorting 1 */
#define MISC_counter_hi_MISC_counter_hi_value_SHIFT 0
#define MISC_counter_hi_MISC_counter_hi_value_WIDTH 16

 misc_counter_hi_value:16, /*[15:0] ,NO_TEST */
 hole0:16;
 } bits;

 uint32_t value;
};

union MISC_codec_typeReg {
 struct { uint32_t

 /* sorting 4 */
#define MISC_codec_type_codec_SHIFT 0
#define MISC_codec_type_codec_WIDTH 11
#define MISC_codec_type_UNDOCUMENTED_SHIFT 11
#define MISC_codec_type_UNDOCUMENTED_WIDTH 2
#define MISC_codec_type_zero_UNDOCUMENTED_SHIFT 13
#define MISC_codec_type_zero_UNDOCUMENTED_WIDTH 1
#define MISC_codec_type_chrf_SHIFT 14
#define MISC_codec_type_chrf_WIDTH 2

 codec:11, /*[10:0]  */
 undocumented:2, /*[12:11]  */
 zero_undocumented:1, /*[13:13]  */
 chrf:2, /*[15:14]  */
 hole0:16;
 } bits;

 uint32_t value;
};

struct vdec_misc {
 union MISC_counter_loReg MISC_counter_lo; /* +0x00000000 ,NO_TEST */
 union MISC_counter_hiReg MISC_counter_hi; /* +0x00000004 ,NO_TEST */
 uint32_t pad0[0x0078/4];
 union MISC_semaphore0Reg MISC_semaphore0; /* +0x00000080  */
 union MISC_semaphore1Reg MISC_semaphore1; /* +0x00000084  */
 union MISC_semaphore2Reg MISC_semaphore2; /* +0x00000088  */
 union MISC_semaphore3Reg MISC_semaphore3; /* +0x0000008c  */
 union MISC_semaphore4Reg MISC_semaphore4; /* +0x00000090  */
 union MISC_semaphore5Reg MISC_semaphore5; /* +0x00000094  */
 union MISC_semaphore6Reg MISC_semaphore6; /* +0x00000098  */
 union MISC_semaphore7Reg MISC_semaphore7; /* +0x0000009c  */
 uint32_t MISC_reserved; /* +0x000000a0 ,RO */
 union MISC_w1_cfgReg MISC_w1_cfg; /* +0x000000a4  */
 union MISC_dsp_irq_extendReg MISC_dsp_irq_extend; /* +0x000000a8  */
 union MISC_dsp_irq_extend_maskReg MISC_dsp_irq_extend_mask; /* +0x000000ac ,NO_TEST */
 union MISC_ssbox_modeReg MISC_ssbox_mode; /* +0x000000b0  */
 union MISC_reset2Reg MISC_reset2; /* +0x000000b4 ,NO_TEST */
 union MISC_mvp_hd_read_ctrlReg MISC_mvp_hd_read_ctrl; /* +0x000000b8  */
 union MISC_mvp_hd_write_ctrlReg MISC_mvp_hd_write_ctrl; /* +0x000000bc  */
 union MISC_dr_modeReg MISC_dr_mode; /* +0x000000c0  */
 union MISC_dr_lengthReg MISC_dr_length; /* +0x000000c4 ,NO_TEST */
 union MISC_dr_addressReg MISC_dr_address; /* +0x000000c8 ,NO_TEST */
 union MISC_sbox_modeReg MISC_sbox_mode; /* +0x000000cc  */
 union MISC_dw_modeReg MISC_dw_mode; /* +0x000000d0  */
 union MISC_dw_lengthReg MISC_dw_length; /* +0x000000d4 ,NO_TEST */
 union MISC_dw_addressReg MISC_dw_address; /* +0x000000d8 ,NO_TEST */
 union MISC_codec_typeReg MISC_codec_type; /* +0x000000dc  */
 union MISC_reset0Reg MISC_reset0; /* +0x000000e0 ,NO_TEST */
 union MISC_reset1Reg MISC_reset1; /* +0x000000e4 ,NO_TEST */
 union MISC_interruptReg MISC_interrupt; /* +0x000000e8 ,NO_TEST */
 union MISC_timer_divReg MISC_timer_div; /* +0x000000ec  */
 union MISC_timer_countReg MISC_timer_count; /* +0x000000f0 ,NO_TEST */
 union MISC_sbox_read_ctrlReg MISC_sbox_read_ctrl; /* +0x000000f4  */
 union MISC_sbox_write_ctrlReg MISC_sbox_write_ctrl; /* +0x000000f8  */
 union MISC_version_revisionReg MISC_version_revision; /* +0x000000fc  */
};
