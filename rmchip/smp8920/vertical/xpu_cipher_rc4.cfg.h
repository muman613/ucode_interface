/* autogenerated with parsecfg: do not edit. */

union rc4_config_regReg {
 struct { uint32_t

 /* sorting 5 */
#define rc4_config_reg_init_SHIFT 0
#define rc4_config_reg_init_WIDTH 1
#define rc4_config_reg_stream_SHIFT 1
#define rc4_config_reg_stream_WIDTH 1
#define rc4_config_reg_key_length_SHIFT 2
#define rc4_config_reg_key_length_WIDTH 6
#define rc4_config_reg_counter_cycles_SHIFT 8
#define rc4_config_reg_counter_cycles_WIDTH 8
#define rc4_config_reg_end_SHIFT 31
#define rc4_config_reg_end_WIDTH 1

 init:1, /*[0:0] ,NO_MEM */
 stream:1, /*[1:1]  */
 key_length:6, /*[7:2]  */
 counter_cycles:8, /*[15:8]  */
 hole0:15,
 end:1; /*[31:31] ,RO */
 } bits;

 uint32_t value;
};

struct xpu_cipher_rc4 {
 uint32_t rc4_key_0; /* +0x00000000  */
 uint32_t rc4_key_1; /* +0x00000004  */
 uint32_t rc4_key_2; /* +0x00000008  */
 uint32_t rc4_key_3; /* +0x0000000c  */
 uint32_t rc4_key_4; /* +0x00000010  */
 uint32_t rc4_key_5; /* +0x00000014  */
 uint32_t rc4_key_6; /* +0x00000018  */
 uint32_t rc4_key_7; /* +0x0000001c  */
 union rc4_config_regReg rc4_config_reg; /* +0x00000020  */
};
