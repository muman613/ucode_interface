/* autogenerated with parsecfg: do not edit. */

/* gotta drop unused_ctrltest_unused0@CTRLTEST: 0x000000ff [18:6] */
union CTRLZReg {
 struct { uint32_t

 /* sorting 15 */
#define CTRLZ_unused_ctrlz_unused0_SHIFT 0
#define CTRLZ_unused_ctrlz_unused0_WIDTH 4
#define CTRLZ_ctrlz_ctrl_mode_default_SHIFT 4
#define CTRLZ_ctrlz_ctrl_mode_default_WIDTH 2
#define CTRLZ_ctrlz_onclock_SHIFT 6
#define CTRLZ_ctrlz_onclock_WIDTH 1
#define CTRLZ_unused_ctrlz_unused1_SHIFT 7
#define CTRLZ_unused_ctrlz_unused1_WIDTH 1
#define CTRLZ_ctrlz_testmode_en_SHIFT 8
#define CTRLZ_ctrlz_testmode_en_WIDTH 1
#define CTRLZ_ctrlz_sel_pwrctl_SHIFT 9
#define CTRLZ_ctrlz_sel_pwrctl_WIDTH 1
#define CTRLZ_ctrlz_suspend_in_soft_SHIFT 10
#define CTRLZ_ctrlz_suspend_in_soft_WIDTH 1
#define CTRLZ_ctrlz_ser_suspend_soft_SHIFT 11
#define CTRLZ_ctrlz_ser_suspend_soft_WIDTH 1
#define CTRLZ_ctrlz_wakeup_soft_SHIFT 12
#define CTRLZ_ctrlz_wakeup_soft_WIDTH 1
#define CTRLZ_ctrlz_vbus_pwr_fault_SHIFT 13
#define CTRLZ_ctrlz_vbus_pwr_fault_WIDTH 1
#define CTRLZ_unused_ctrlz_unused2_SHIFT 14
#define CTRLZ_unused_ctrlz_unused2_WIDTH 2
#define CTRLZ_ctrlz_port1vcontrol_test_SHIFT 16
#define CTRLZ_ctrlz_port1vcontrol_test_WIDTH 4
#define CTRLZ_unused_ctrlz_unused3_SHIFT 20
#define CTRLZ_unused_ctrlz_unused3_WIDTH 4
#define CTRLZ_ctrlz_test_utmi_vload_SHIFT 24
#define CTRLZ_ctrlz_test_utmi_vload_WIDTH 1
#define CTRLZ_unused_ctrlz_unused4_SHIFT 25
#define CTRLZ_unused_ctrlz_unused4_WIDTH 7

 unused_ctrlz_unused0:4, /*[3:0]  */
 ctrlz_ctrl_mode_default:2, /*[5:4]  */
 ctrlz_onclock:1, /*[6:6]  */
 unused_ctrlz_unused1:1, /*[7:7]  */
 ctrlz_testmode_en:1, /*[8:8]  */
 ctrlz_sel_pwrctl:1, /*[9:9]  */
 ctrlz_suspend_in_soft:1, /*[10:10]  */
 ctrlz_ser_suspend_soft:1, /*[11:11]  */
 ctrlz_wakeup_soft:1, /*[12:12]  */
 ctrlz_vbus_pwr_fault:1, /*[13:13]  */
 unused_ctrlz_unused2:2, /*[15:14]  */
 ctrlz_port1vcontrol_test:4, /*[19:16]  */
 unused_ctrlz_unused3:4, /*[23:20]  */
 ctrlz_test_utmi_vload:1, /*[24:24]  */
 unused_ctrlz_unused4:7; /*[31:25]  */
 } bits;

 uint32_t value;
};

union CTRLTESTReg {
 struct { uint32_t

 /* sorting 4 */
#define CTRLTEST_ctrltest_usb_test_ctl_SHIFT 0
#define CTRLTEST_ctrltest_usb_test_ctl_WIDTH 4
#define CTRLTEST_ctrltest_sel_test_out_SHIFT 4
#define CTRLTEST_ctrltest_sel_test_out_WIDTH 4
#define CTRLTEST_ctrltest_sel_clk_out_SHIFT 17
#define CTRLTEST_ctrltest_sel_clk_out_WIDTH 3
#define CTRLTEST_unused_ctrltest_unused1_SHIFT 20
#define CTRLTEST_unused_ctrltest_unused1_WIDTH 12

 ctrltest_usb_test_ctl:4, /*[3:0]  */
 ctrltest_sel_test_out:4, /*[7:4]  */
 hole0:9,
 ctrltest_sel_clk_out:3, /*[19:17]  */
 unused_ctrltest_unused1:12; /*[31:20]  */
 } bits;

 uint32_t value;
};

union CTRL4Reg {
 struct { uint32_t

 /* sorting 3 */
#define CTRL4_unused_ctrl4_unused0_SHIFT 0
#define CTRL4_unused_ctrl4_unused0_WIDTH 21
#define CTRL4_ctrl4_phy_bistself_SHIFT 21
#define CTRL4_ctrl4_phy_bistself_WIDTH 1
#define CTRL4_unused_ctrl4_unused1_SHIFT 22
#define CTRL4_unused_ctrl4_unused1_WIDTH 10

 unused_ctrl4_unused0:21, /*[20:0]  */
 ctrl4_phy_bistself:1, /*[21:21]  */
 unused_ctrl4_unused1:10; /*[31:22]  */
 } bits;

 uint32_t value;
};

union CTRL3Reg {
 struct { uint32_t

 /* sorting 1 */
#define CTRL3_ctrl3_phy_fsel_SHIFT 0
#define CTRL3_ctrl3_phy_fsel_WIDTH 1

 ctrl3_phy_fsel:1, /*[0:0]  */
 hole0:31;
 } bits;

 uint32_t value;
};

union CTRL0Reg {
 struct { uint32_t

 /* sorting 20 */
#define CTRL0_ctrl0_phy_soft_reset_SHIFT 0
#define CTRL0_ctrl0_phy_soft_reset_WIDTH 1
#define CTRL0_ctrl0_host_soft_reset_SHIFT 1
#define CTRL0_ctrl0_host_soft_reset_WIDTH 1
#define CTRL0_unused_ctrl0_sel_clk60_ehci_SHIFT 2
#define CTRL0_unused_ctrl0_sel_clk60_ehci_WIDTH 2
#define CTRL0_ctrl0_sel_clk48_ohci_SHIFT 4
#define CTRL0_ctrl0_sel_clk48_ohci_WIDTH 2
#define CTRL0_unused_ctrl0_sel_clk12_ohci_SHIFT 6
#define CTRL0_unused_ctrl0_sel_clk12_ohci_WIDTH 1
#define CTRL0_ctrl0_phy_soft_suspend_SHIFT 7
#define CTRL0_ctrl0_phy_soft_suspend_WIDTH 1
#define CTRL0_unused_ctrl0_port1reset_0_SHIFT 8
#define CTRL0_unused_ctrl0_port1reset_0_WIDTH 1
#define CTRL0_unused_ctrl0_port1reset_1_SHIFT 9
#define CTRL0_unused_ctrl0_port1reset_1_WIDTH 1
#define CTRL0_unused_ctrl0_plldivvalue_1_SHIFT 10
#define CTRL0_unused_ctrl0_plldivvalue_1_WIDTH 2
#define CTRL0_unused_ctrl0_sys_interrupt_SHIFT 12
#define CTRL0_unused_ctrl0_sys_interrupt_WIDTH 1
#define CTRL0_ctrl0_sel_phy_clock_0_SHIFT 13
#define CTRL0_ctrl0_sel_phy_clock_0_WIDTH 1
#define CTRL0_unused_ctrl0_sel_phy_clock_1_SHIFT 14
#define CTRL0_unused_ctrl0_sel_phy_clock_1_WIDTH 1
#define CTRL0_unused_ctrl0_unused0_SHIFT 15
#define CTRL0_unused_ctrl0_unused0_WIDTH 1
#define CTRL0_unused_ctrl0_ohci_SHIFT 16
#define CTRL0_unused_ctrl0_ohci_WIDTH 5
#define CTRL0_unused_ctrl0_unused1_SHIFT 21
#define CTRL0_unused_ctrl0_unused1_WIDTH 3
#define CTRL0_unused_ctrl0_app_prt_ovrcur_SHIFT 24
#define CTRL0_unused_ctrl0_app_prt_ovrcur_WIDTH 2
#define CTRL0_unused_ctrl0_unused2_SHIFT 26
#define CTRL0_unused_ctrl0_unused2_WIDTH 2
#define CTRL0_ctrl0_phy_force_unreset_SHIFT 28
#define CTRL0_ctrl0_phy_force_unreset_WIDTH 1
#define CTRL0_ctrl0_phy_force_unsuspend_SHIFT 29
#define CTRL0_ctrl0_phy_force_unsuspend_WIDTH 1
#define CTRL0_unused_ctrl0_unused3_SHIFT 30
#define CTRL0_unused_ctrl0_unused3_WIDTH 2

 ctrl0_phy_soft_reset:1, /*[0:0] ,NO_MEM */
 ctrl0_host_soft_reset:1, /*[1:1] ,NO_MEM */
 unused_ctrl0_sel_clk60_ehci:2, /*[3:2]  */
 ctrl0_sel_clk48_ohci:2, /*[5:4] ,NO_MEM */
 unused_ctrl0_sel_clk12_ohci:1, /*[6:6]  */
 ctrl0_phy_soft_suspend:1, /*[7:7] ,NO_MEM */
 unused_ctrl0_port1reset_0:1, /*[8:8]  */
 unused_ctrl0_port1reset_1:1, /*[9:9]  */
 unused_ctrl0_plldivvalue_1:2, /*[11:10]  */
 unused_ctrl0_sys_interrupt:1, /*[12:12]  */
 ctrl0_sel_phy_clock_0:1, /*[13:13] ,NO_MEM */
 unused_ctrl0_sel_phy_clock_1:1, /*[14:14]  */
 unused_ctrl0_unused0:1, /*[15:15]  */
 unused_ctrl0_ohci:5, /*[20:16]  */
 unused_ctrl0_unused1:3, /*[23:21]  */
 unused_ctrl0_app_prt_ovrcur:2, /*[25:24]  */
 unused_ctrl0_unused2:2, /*[27:26]  */
 ctrl0_phy_force_unreset:1, /*[28:28] ,NO_MEM */
 ctrl0_phy_force_unsuspend:1, /*[29:29] ,NO_MEM */
 unused_ctrl0_unused3:2; /*[31:30]  */
 } bits;

 uint32_t value;
};

union CORE_SBUSCFGReg {
 struct { uint32_t

 /* sorting 1 */
#define CORE_SBUSCFG_sbuscfg_ahbbrst_SHIFT 0
#define CORE_SBUSCFG_sbuscfg_ahbbrst_WIDTH 3

 sbuscfg_ahbbrst:3, /*[2:0]  */
 hole0:29;
 } bits;

 uint32_t value;
};

union CORE_ID_REGReg {
 struct { uint32_t

 /* sorting 6 */
#define CORE_ID_REG_id_SHIFT 0
#define CORE_ID_REG_id_WIDTH 8
#define CORE_ID_REG_nid_SHIFT 8
#define CORE_ID_REG_nid_WIDTH 8
#define CORE_ID_REG_tag_SHIFT 16
#define CORE_ID_REG_tag_WIDTH 5
#define CORE_ID_REG_revision_SHIFT 21
#define CORE_ID_REG_revision_WIDTH 4
#define CORE_ID_REG_version_SHIFT 25
#define CORE_ID_REG_version_WIDTH 4
#define CORE_ID_REG_ci_version_SHIFT 29
#define CORE_ID_REG_ci_version_WIDTH 3

 id:8, /*[7:0] ,RO */
 nid:8, /*[15:8] ,RO */
 tag:5, /*[20:16] ,RO */
 revision:4, /*[24:21] ,RO */
 version:4, /*[28:25] ,RO */
 ci_version:3; /*[31:29] ,RO */
 } bits;

 uint32_t value;
};

union CORE_HWTXBUFReg {
 struct { uint32_t

 /* sorting 4 */
#define CORE_HWTXBUF_txburst_SHIFT 0
#define CORE_HWTXBUF_txburst_WIDTH 8
#define CORE_HWTXBUF_txadd_SHIFT 8
#define CORE_HWTXBUF_txadd_WIDTH 8
#define CORE_HWTXBUF_txchanadd_SHIFT 16
#define CORE_HWTXBUF_txchanadd_WIDTH 8
#define CORE_HWTXBUF_reserved1_SHIFT 31
#define CORE_HWTXBUF_reserved1_WIDTH 1

 txburst:8, /*[7:0] ,RO */
 txadd:8, /*[15:8] ,RO */
 txchanadd:8, /*[23:16] ,RO */
 hole0:7,
 reserved1:1; /*[31:31] ,RO */
 } bits;

 uint32_t value;
};

union CORE_HWRXBUFReg {
 struct { uint32_t

 /* sorting 2 */
#define CORE_HWRXBUF_burst_SHIFT 0
#define CORE_HWRXBUF_burst_WIDTH 8
#define CORE_HWRXBUF_add_SHIFT 8
#define CORE_HWRXBUF_add_WIDTH 8

 burst:8, /*[7:0] ,RO */
 add:8, /*[15:8] ,RO */
 hole0:16;
 } bits;

 uint32_t value;
};

union CORE_HWHOSTReg {
 struct { uint32_t

 /* sorting 4 */
#define CORE_HWHOST_hc_SHIFT 0
#define CORE_HWHOST_hc_WIDTH 1
#define CORE_HWHOST_nport_SHIFT 1
#define CORE_HWHOST_nport_WIDTH 3
#define CORE_HWHOST_ttasy_SHIFT 16
#define CORE_HWHOST_ttasy_WIDTH 8
#define CORE_HWHOST_ttper_SHIFT 24
#define CORE_HWHOST_ttper_WIDTH 8

 hc:1, /*[0:0] ,RO */
 nport:3, /*[3:1] ,RO */
 hole0:12,
 ttasy:8, /*[23:16] ,RO */
 ttper:8; /*[31:24] ,RO */
 } bits;

 uint32_t value;
};

union CORE_HWGENERALReg {
 struct { uint32_t

 /* sorting 6 */
#define CORE_HWGENERAL_rt_SHIFT 0
#define CORE_HWGENERAL_rt_WIDTH 1
#define CORE_HWGENERAL_clkc_SHIFT 1
#define CORE_HWGENERAL_clkc_WIDTH 2
#define CORE_HWGENERAL_bwt_SHIFT 3
#define CORE_HWGENERAL_bwt_WIDTH 1
#define CORE_HWGENERAL_phyw_SHIFT 4
#define CORE_HWGENERAL_phyw_WIDTH 2
#define CORE_HWGENERAL_phym_SHIFT 6
#define CORE_HWGENERAL_phym_WIDTH 4
#define CORE_HWGENERAL_sm_SHIFT 10
#define CORE_HWGENERAL_sm_WIDTH 2

 rt:1, /*[0:0] ,RO */
 clkc:2, /*[2:1] ,RO */
 bwt:1, /*[3:3] ,RO */
 phyw:2, /*[5:4] ,RO */
 phym:4, /*[9:6] ,RO */
 sm:2, /*[11:10] ,RO */
 hole0:20;
 } bits;

 uint32_t value;
};

union CORE_HWDEVICEReg {
 struct { uint32_t

 /* sorting 2 */
#define CORE_HWDEVICE_c_SHIFT 0
#define CORE_HWDEVICE_c_WIDTH 1
#define CORE_HWDEVICE_evep_SHIFT 1
#define CORE_HWDEVICE_evep_WIDTH 5

 c:1, /*[0:0] ,RO */
 evep:5, /*[5:1] ,RO */
 hole0:26;
 } bits;

 uint32_t value;
};

union CORE_HCSPARAMSReg {
 struct { uint32_t

 /* sorting 7 */
#define CORE_HCSPARAMS_n_ports_SHIFT 0
#define CORE_HCSPARAMS_n_ports_WIDTH 4
#define CORE_HCSPARAMS_ppc_SHIFT 4
#define CORE_HCSPARAMS_ppc_WIDTH 1
#define CORE_HCSPARAMS_n_pcc_SHIFT 8
#define CORE_HCSPARAMS_n_pcc_WIDTH 4
#define CORE_HCSPARAMS_n_cc_SHIFT 12
#define CORE_HCSPARAMS_n_cc_WIDTH 4
#define CORE_HCSPARAMS_pi_SHIFT 16
#define CORE_HCSPARAMS_pi_WIDTH 1
#define CORE_HCSPARAMS_n_ptt_SHIFT 20
#define CORE_HCSPARAMS_n_ptt_WIDTH 4
#define CORE_HCSPARAMS_n_tt_SHIFT 24
#define CORE_HCSPARAMS_n_tt_WIDTH 4

 n_ports:4, /*[3:0] ,RO */
 ppc:1, /*[4:4] ,RO */
 hole0:3,
 n_pcc:4, /*[11:8] ,RO */
 n_cc:4, /*[15:12] ,RO */
 pi:1, /*[16:16] ,RO */
 hole1:3,
 n_ptt:4, /*[23:20] ,RO */
 n_tt:4, /*[27:24] ,RO */
 hole2:4;
 } bits;

 uint32_t value;
};

union CORE_HCCPARAMSReg {
 struct { uint32_t

 /* sorting 5 */
#define CORE_HCCPARAMS_adc_SHIFT 0
#define CORE_HCCPARAMS_adc_WIDTH 1
#define CORE_HCCPARAMS_pfl_SHIFT 1
#define CORE_HCCPARAMS_pfl_WIDTH 1
#define CORE_HCCPARAMS_asp_SHIFT 2
#define CORE_HCCPARAMS_asp_WIDTH 1
#define CORE_HCCPARAMS_ist_SHIFT 4
#define CORE_HCCPARAMS_ist_WIDTH 4
#define CORE_HCCPARAMS_eecp_SHIFT 8
#define CORE_HCCPARAMS_eecp_WIDTH 8

 adc:1, /*[0:0] ,RO */
 pfl:1, /*[1:1] ,RO */
 asp:1, /*[2:2] ,RO */
 hole0:1,
 ist:4, /*[7:4] ,RO */
 eecp:8, /*[15:8] ,RO */
 hole1:16;
 } bits;

 uint32_t value;
};

union CORE_GPTIMER1LDReg {
 struct { uint32_t

 /* sorting 1 */
#define CORE_GPTIMER1LD_gptimer1_load_SHIFT 0
#define CORE_GPTIMER1LD_gptimer1_load_WIDTH 24

 gptimer1_load:24, /*[23:0]  */
 hole0:8;
 } bits;

 uint32_t value;
};

union CORE_GPTIMER1CTRLReg {
 struct { uint32_t

 /* sorting 4 */
#define CORE_GPTIMER1CTRL_count_SHIFT 0
#define CORE_GPTIMER1CTRL_count_WIDTH 24
#define CORE_GPTIMER1CTRL_mode_SHIFT 24
#define CORE_GPTIMER1CTRL_mode_WIDTH 1
#define CORE_GPTIMER1CTRL_reset_SHIFT 30
#define CORE_GPTIMER1CTRL_reset_WIDTH 1
#define CORE_GPTIMER1CTRL_run_SHIFT 31
#define CORE_GPTIMER1CTRL_run_WIDTH 1

 count:24, /*[23:0] ,RO */
 mode:1, /*[24:24]  */
 hole0:5,
 reset:1, /*[30:30] ,NO_MEM */
 run:1; /*[31:31] ,NO_MEM */
 } bits;

 uint32_t value;
};

union CORE_GPTIMER0LDReg {
 struct { uint32_t

 /* sorting 1 */
#define CORE_GPTIMER0LD_gptimer0_load_SHIFT 0
#define CORE_GPTIMER0LD_gptimer0_load_WIDTH 24

 gptimer0_load:24, /*[23:0] ,NO_MEM */
 hole0:8;
 } bits;

 uint32_t value;
};

union CORE_GPTIMER0CTRLReg {
 struct { uint32_t

 /* sorting 4 */
#define CORE_GPTIMER0CTRL_count_SHIFT 0
#define CORE_GPTIMER0CTRL_count_WIDTH 24
#define CORE_GPTIMER0CTRL_mode_SHIFT 24
#define CORE_GPTIMER0CTRL_mode_WIDTH 1
#define CORE_GPTIMER0CTRL_reset_SHIFT 30
#define CORE_GPTIMER0CTRL_reset_WIDTH 1
#define CORE_GPTIMER0CTRL_run_SHIFT 31
#define CORE_GPTIMER0CTRL_run_WIDTH 1

 count:24, /*[23:0] ,RO */
 mode:1, /*[24:24]  */
 hole0:5,
 reset:1, /*[30:30] ,NO_MEM */
 run:1; /*[31:31] ,NO_MEM */
 } bits;

 uint32_t value;
};

union CORE_DCIVERSIONReg {
 struct { uint32_t

 /* sorting 1 */
#define CORE_DCIVERSION_dciversion_dciversion_SHIFT 0
#define CORE_DCIVERSION_dciversion_dciversion_WIDTH 16

 dciversion_dciversion:16, /*[15:0] ,RO */
 hole0:16;
 } bits;

 uint32_t value;
};

union CORE_DCCPARAMSReg {
 struct { uint32_t

 /* sorting 3 */
#define CORE_DCCPARAMS_den_SHIFT 0
#define CORE_DCCPARAMS_den_WIDTH 5
#define CORE_DCCPARAMS_dc_SHIFT 7
#define CORE_DCCPARAMS_dc_WIDTH 1
#define CORE_DCCPARAMS_hc_SHIFT 8
#define CORE_DCCPARAMS_hc_WIDTH 1

 den:5, /*[4:0] ,RO */
 hole0:2,
 dc:1, /*[7:7] ,RO */
 hc:1, /*[8:8] ,RO */
 hole1:23;
 } bits;

 uint32_t value;
};

union CORE_CAPLENGTHReg {
 struct { uint32_t

 /* sorting 2 */
#define CORE_CAPLENGTH_caplength_SHIFT 0
#define CORE_CAPLENGTH_caplength_WIDTH 8
#define CORE_CAPLENGTH_hciversion_SHIFT 16
#define CORE_CAPLENGTH_hciversion_WIDTH 16

 caplength:8, /*[7:0] ,RO */
 hole0:8,
 hciversion:16; /*[31:16] ,RO */
 } bits;

 uint32_t value;
};

struct host_usb20_chipidea {
 union CORE_ID_REGReg CORE_ID_REG; /* +0x00000000  */
 union CORE_HWGENERALReg CORE_HWGENERAL; /* +0x00000004  */
 union CORE_HWHOSTReg CORE_HWHOST; /* +0x00000008  */
 union CORE_HWDEVICEReg CORE_HWDEVICE; /* +0x0000000c  */
 union CORE_HWTXBUFReg CORE_HWTXBUF; /* +0x00000010  */
 union CORE_HWRXBUFReg CORE_HWRXBUF; /* +0x00000014  */
 uint32_t pad0[0x0068/4];
 union CORE_GPTIMER0LDReg CORE_GPTIMER0LD; /* +0x00000080  */
 union CORE_GPTIMER0CTRLReg CORE_GPTIMER0CTRL; /* +0x00000084  */
 union CORE_GPTIMER1LDReg CORE_GPTIMER1LD; /* +0x00000088  */
 union CORE_GPTIMER1CTRLReg CORE_GPTIMER1CTRL; /* +0x0000008c  */
 union CORE_SBUSCFGReg CORE_SBUSCFG; /* +0x00000090 ,NO_TEST */
 uint32_t pad1[0x006c/4];
 union CORE_CAPLENGTHReg CORE_CAPLENGTH; /* +0x00000100  */
 union CORE_HCSPARAMSReg CORE_HCSPARAMS; /* +0x00000104  */
 union CORE_HCCPARAMSReg CORE_HCCPARAMS; /* +0x00000108  */
 uint32_t pad2[0x0014/4];
 union CORE_DCIVERSIONReg CORE_DCIVERSION; /* +0x00000120  */
 union CORE_DCCPARAMSReg CORE_DCCPARAMS; /* +0x00000124  */
 uint32_t pad3[0x01d8/4];
 union CTRL0Reg CTRL0; /* +0x00000300  */
 uint32_t CTRL1; /* +0x00000304  */
 uint32_t CTRL2; /* +0x00000308  */
 union CTRL3Reg CTRL3; /* +0x0000030c  */
 union CTRL4Reg CTRL4; /* +0x00000310  */
 union CTRLTESTReg CTRLTEST; /* +0x00000314  */
 union CTRLZReg CTRLZ; /* +0x00000318  */
 uint32_t CTRLU; /* +0x0000031c  */
 uint32_t CTRLV; /* +0x00000320  */
 uint32_t CTRLPWCTL; /* +0x00000324  */
 uint32_t pad4[0x0004/4];
 uint32_t CTRLAN0; /* +0x0000032c  */
};
