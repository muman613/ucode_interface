/* autogenerated with parsecfg: do not edit. */

union vi_cvd_vbi_statusReg {
 struct { uint32_t

 /* sorting 1 */
#define vi_cvd_vbi_status_vi_cvd_vbi_write_count_SHIFT 0
#define vi_cvd_vbi_status_vi_cvd_vbi_write_count_WIDTH 6

 vi_cvd_vbi_write_count:6, /*[5:0]  */
 hole0:26;
 } bits;

 uint32_t value;
};

union vi_cvd_cvd1_control0Reg {
 struct { uint32_t

 /* sorting 5 */
#define vi_cvd_cvd1_control0_yc_src_SHIFT 0
#define vi_cvd_cvd1_control0_yc_src_WIDTH 1
#define vi_cvd_cvd1_control0_colour_mode_SHIFT 1
#define vi_cvd_cvd1_control0_colour_mode_WIDTH 3
#define vi_cvd_cvd1_control0_vline_625_SHIFT 4
#define vi_cvd_cvd1_control0_vline_625_WIDTH 1
#define vi_cvd_cvd1_control0_hpixel_SHIFT 5
#define vi_cvd_cvd1_control0_hpixel_WIDTH 2
#define vi_cvd_cvd1_control0_hv_delay_SHIFT 7
#define vi_cvd_cvd1_control0_hv_delay_WIDTH 1

 yc_src:1, /*[0:0]  */
 colour_mode:3, /*[3:1]  */
 vline_625:1, /*[4:4]  */
 hpixel:2, /*[6:5]  */
 hv_delay:1, /*[7:7]  */
 hole0:24;
 } bits;

 uint32_t value;
};

union vi_cvd_controlReg {
 struct { uint32_t

 /* sorting 3 */
#define vi_cvd_control_width_SHIFT 0
#define vi_cvd_control_width_WIDTH 10
#define vi_cvd_control_height_SHIFT 16
#define vi_cvd_control_height_WIDTH 10
#define vi_cvd_control_swap_yc_SHIFT 31
#define vi_cvd_control_swap_yc_WIDTH 1

 width:10, /*[9:0]  */
 hole0:6,
 height:10, /*[25:16]  */
 hole1:5,
 swap_yc:1; /*[31:31]  */
 } bits;

 uint32_t value;
};

struct vi_composite_decoder {
 union vi_cvd_cvd1_control0Reg vi_cvd_cvd1_control0; /* +0x00000000  */
 uint32_t vi_cvd_cvd1_control1; /* +0x00000004  */
 uint32_t pad0[0x0028/4];
 uint32_t vi_cvd_chroma_agc_target; /* +0x00000030  */
 uint32_t pad1[0x002c/4];
 uint32_t vi_cvd_chroma_dto_0; /* +0x00000060  */
 uint32_t vi_cvd_chroma_dto_1; /* +0x00000064  */
 uint32_t vi_cvd_chroma_dto_2; /* +0x00000068  */
 uint32_t vi_cvd_chroma_dto_3; /* +0x0000006c  */
 uint32_t pad2[0x0048/4];
 uint32_t vi_cvd_active_video_hz_start_time; /* +0x000000b8  */
 uint32_t vi_cvd_active_video_hz_height; /* +0x000000bc  */
 uint32_t vi_cvd_active_video_vt_start_time; /* +0x000000c0  */
 uint32_t vi_cvd_active_video_vt_height; /* +0x000000c4  */
 uint32_t pad3[0x0034/4];
 uint32_t vi_cvd_soft_reset; /* +0x000000fc  */
 uint32_t pad4[0x01f4/4];
 uint32_t vi_cvd_chroma_agctime_constant_control; /* +0x000002f4  */
 uint32_t pad5[0x0088/4];
 union vi_cvd_vbi_statusReg vi_cvd_vbi_status; /* +0x00000380  */
 uint32_t vi_cvd_vbi_mem_unit_0; /* +0x00000384  */
 uint32_t vi_cvd_vbi_mem_unit_1; /* +0x00000388  */
 uint32_t vi_cvd_vbi_mem_unit_2; /* +0x0000038c  */
 uint32_t vi_cvd_vbi_mem_unit_3; /* +0x00000390  */
 uint32_t vi_cvd_vbi_mem_unit_4; /* +0x00000394  */
 uint32_t vi_cvd_vbi_mem_unit_5; /* +0x00000398  */
 uint32_t vi_cvd_vbi_mem_unit_6; /* +0x0000039c  */
 uint32_t vi_cvd_vbi_mem_unit_7; /* +0x000003a0  */
 uint32_t vi_cvd_vbi_mem_unit_8; /* +0x000003a4  */
 uint32_t vi_cvd_vbi_mem_unit_9; /* +0x000003a8  */
 uint32_t vi_cvd_vbi_mem_unit_10; /* +0x000003ac  */
 uint32_t vi_cvd_vbi_mem_unit_11; /* +0x000003b0  */
 uint32_t pad6[0x000c/4];
 uint32_t vi_cvd_fb_base_pointer; /* +0x000003c0  */
 uint32_t vi_cvd_fb_read_pointer_0; /* +0x000003c4  */
 uint32_t vi_cvd_fb_read_pointer_1; /* +0x000003c8  */
 uint32_t vi_cvd_fb_read_pointer_2; /* +0x000003cc  */
 uint32_t vi_cvd_fb_read_pointer_3; /* +0x000003d0  */
 uint32_t vi_cvd_fb_buffer_size; /* +0x000003d4  */
 uint32_t vi_cvd_fb_config; /* +0x000003d8  */
 uint32_t pad7[0x0004/4];
 uint32_t vi_cvd_status; /* +0x000003e0  */
 uint32_t vi_cvd_int_program; /* +0x000003e4  */
 uint32_t vi_cvd_int_status; /* +0x000003e8  */
 union vi_cvd_controlReg vi_cvd_control; /* +0x000003ec  */
};
